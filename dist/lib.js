!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.jcfloat=n():t.jcfloat=n()}(window,function(){return function(t){var n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(r,i,function(n){return t[n]}.bind(null,i));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=e(1);n.Metric=r.Metric;const i=e(2);n.Point=i.Point;const u=e(3);n.LinePlot=u.LinePlot,t.exports={Metric:r.Metric,Point:i.Point,LinePlot:u.LinePlot}},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.Metric=class{constructor(t,n){this.metric={name:t,data:n}}size(){return this.metric.data.length}get(){return this.metric}maxX(){let t=-1/0;for(let n=0;n<this.metric.data.length;n++){const e=this.metric.data[n];e.x>t&&(t=e.x)}return t}maxY(){let t=-1/0;for(let n=0;n<this.metric.data.length;n++){const e=this.metric.data[n];e.y>t&&(t=e.y)}return t}minX(){let t=1/0;for(let n=0;n<this.metric.data.length;n++){const e=this.metric.data[n];e.x<t&&(t=e.x)}return t}minY(){let t=1/0;for(let n=0;n<this.metric.data.length;n++){const e=this.metric.data[n];e.y<t&&(t=e.y)}return t}convert(t){this.metric.data=this.metric.data.map(n=>t(n))}}},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Point=function(t,n){return{x:t,y:n}}},function(t,n,e){"use strict";var r=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e in t)Object.hasOwnProperty.call(t,e)&&(n[e]=t[e]);return n.default=t,n};Object.defineProperty(n,"__esModule",{value:!0});const i=e(4),u=r(e(5));n.LinePlot=class extends i.AbstractGraph{constructor(t,n,e){super(t,n,e),this.init()}convertPoint(t){return{x:new Date(t.x),y:t.y}}init(){let t=this,n=this.props.containerWidth-this.props.margin.left-this.props.margin.right,e=this.props.containerHeight-this.props.margin.top-this.props.margin.bottom-150,r=this.props.containerHeight-this.props.margin.top-this.props.margin.bottom;this.metrics.forEach(t=>t.convert(this.convertPoint)),this.elems.svg=u.select(this.chartElement).append("svg").attr("width",this.props.containerWidth).attr("height",this.props.containerHeight).append("g").attr("transform","translate("+this.props.margin.left+","+this.props.margin.top+")");var i=u.timeFormat("%Q"),o=u.timeFormat(":%S"),a=u.timeFormat("%I:%M"),c=u.timeFormat("%I %p"),f=u.timeFormat("%a %d"),s=u.timeFormat("%b %d"),l=u.timeFormat("%B"),h=u.timeFormat("%Y");this.elems.multiFormat=function(t){return(u.timeSecond(t)<t?i:u.timeMinute(t)<t?o:u.timeHour(t)<t?a:u.timeDay(t)<t?c:u.timeMonth(t)<t?u.timeWeek(t)<t?f:s:u.timeYear(t)<t?l:h)(t)};let d=u.select(this.chartElement).append("div").style("opacity",0).attr("class","tooltip").style("background-color","white").style("border","solid").style("border-width","2px").style("border-radius","5px").style("padding","5px").style("position","absolute");var p;this.elems.x=u.scaleTime().domain([this.metrics[0].minX(),this.metrics[0].maxX()]).range([0,n]),this.elems.xAxis=this.elems.svg.append("g").attr("transform","translate(0,"+e+")").call(u.axisBottom(this.elems.x).tickFormat(t.elems.multiFormat)),this.elems.x2=u.scaleTime().domain([this.metrics[0].minX(),this.metrics[0].maxX()]).range([0,n]),this.elems.xAxis2=this.elems.svg.append("g").attr("transform","translate(0,"+r+")").call(u.axisBottom(this.elems.x2).tickFormat(t.elems.multiFormat)),this.elems.y=u.scaleLinear().domain([0,this.metrics[0].maxY()]).range([e,0]),this.elems.yAxis=this.elems.svg.append("g").call(u.axisLeft(this.elems.y)),this.elems.y2=u.scaleLinear().domain([0,this.metrics[0].maxY()]).range([100,0]),this.elems.clip=this.elems.svg.append("defs").append("svg:clipPath").attr("id","clip").append("svg:rect").attr("width",n).attr("height",e).attr("x",0).attr("y",0),this.elems.brush=u.brushX().extent([[0,0],[n,e]]).on("end",(p=this,()=>{var n=p.elems.svg.transition().duration(750);let e=u.event.selection;e&&(p.elems.x.domain([p.elems.x.invert(e[0]),p.elems.x.invert(e[1])]),p.elems.gBrush2.transition().call(p.elems.brush2.move,[p.elems.x2(p.elems.x.invert(e[0])),p.elems.x2(p.elems.x.invert(e[1]))]),v.select(".brush").call(p.elems.brush.move,null),p.elems.xAxis.transition(n).call(u.axisBottom(p.elems.x).tickFormat(t.elems.multiFormat)).selectAll("text").style("text-anchor","end").attr("dx","-.8em").attr("dy",".15em").attr("transform","rotate(-65)"),v.select(".line").transition(n).attr("d",u.line().x(function(t){return p.elems.x(t.x)}).y(function(t){return p.elems.y(t.y)})),v.selectAll("circle").transition(n).attr("cx",function(t){return p.elems.x(t.x)}).attr("cy",function(t){return p.elems.y(t.y)}))}));var v=this.elems.svg.append("g").attr("clip-path","url(#clip)");v.append("path").datum(this.metrics[0].get().data).attr("class","line").attr("fill","none").attr("stroke","steelblue").attr("stroke-width",1.5).attr("d",u.line().x(function(n){return t.elems.x(n.x)}).y(function(n){return t.elems.y(n.y)})),v.append("g").attr("class","brush").call(this.elems.brush),this.elems.circles=v.selectAll(".dot").data(this.metrics[0].get().data).enter().append("circle").attr("fill","white").attr("stroke","red").attr("cx",function(n){return t.elems.x(n.x)}).attr("cy",function(n){return t.elems.y(n.y)}).attr("r",5).on("mouseover",function(t,n,e){d.style("opacity",1),u.select(e[n]).style("stroke","black").style("opacity",1)}).on("mousemove",function(t,n,e){d.html("The exact value of<br>this cell is: "+t.x).style("left",u.mouse(e[n])[0]+70+"px").style("top",u.mouse(e[n])[1]+"px")}).on("mouseleave",function(t,n,e){d.style("opacity",0),u.select(e[n]).style("stroke","red")}).on("mousedown",function(){let n=t.elems.svg.select(".brush").node(),e=new Event("mousedown");e.pageX=u.event.pageX,e.clientX=u.event.clientX,e.pageY=u.event.pageY,e.clientY=u.event.clientY,n.dispatchEvent(e)}),this.elems.context=this.elems.svg.append("g").attr("class","context").attr("transform","translate(0,250)"),this.elems.context.append("path").datum(this.metrics[0].get().data).attr("class","line").attr("fill","none").attr("stroke","steelblue").attr("stroke-width",1.5).attr("d",u.line().x(function(n){return t.elems.x2(n.x)}).y(function(n){return t.elems.y2(n.y)})),this.elems.brush2=u.brushX().extent([[0,0],[n,100]]).on("start brush end",function(){if(!u.event.sourceEvent||"zoom"!==u.event.sourceEvent.type){var n=u.event.selection;if(n){t.elems.x.domain([t.elems.x2.invert(n[0]),t.elems.x2.invert(n[1])]);var e=t.elems.svg.transition().duration(750);t.elems.xAxis.transition(e).call(u.axisBottom(t.elems.x).tickFormat(t.elems.multiFormat)).selectAll("text").style("text-anchor","end").attr("dx","-.8em").attr("dy",".15em").attr("transform","rotate(-65)"),v.select(".line").transition(e).attr("d",u.line().x(function(n){return t.elems.x(n.x)}).y(function(n){return t.elems.y(n.y)})),v.selectAll("circle").transition(e).attr("cx",function(n){return t.elems.x(n.x)}).attr("cy",function(n){return t.elems.y(n.y)})}}}),this.elems.gBrush2=this.elems.context.append("g").attr("class","brush2").call(this.elems.brush2).call(this.elems.brush2.move,this.elems.x2.range()),this.elems.svg.on("dblclick",function(){t.elems.gBrush2.call(t.elems.brush2.move,t.elems.x2.range())})}}},function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.AbstractGraph=class{constructor(t,n,e){this.metrics=[],this.elems={},this.chartElement=t,this.metrics=n,this.props=e}maxXMetrics(){let t=-1/0;for(let n=0;n<this.metrics.length;n++){const e=this.metrics[n];e.maxX()>t&&(t=e.maxX())}return t}maxYMetrics(){let t=-1/0;for(let n=0;n<this.metrics.length;n++){const e=this.metrics[n];e.maxY()>t&&(t=e.maxY())}return t}minXMetrics(){let t=1/0;for(let n=0;n<this.metrics.length;n++){const e=this.metrics[n];e.minX()<t&&(t=e.minX())}return t}minYMetrics(){let t=1/0;for(let n=0;n<this.metrics.length;n++){const e=this.metrics[n];e.minY()<t&&(t=e.minY())}return t}maxSize(){let t=0;for(let n=0;n<this.metrics.length;n++){const e=this.metrics[n];e.size()>t&&(t=e.size())}return t}}},function(t,n,e){"use strict";e.r(n);var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){var n;return 1===t.length&&(n=t,t=function(t,e){return r(n(t),e)}),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var u=r+i>>>1;t(n[u],e)<0?r=u+1:i=u}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var u=r+i>>>1;t(n[u],e)>0?i=u:r=u+1}return r}}};var u=i(r),o=u.right,a=u.left,c=o,f=function(t,n){null==n&&(n=s);for(var e=0,r=t.length-1,i=t[0],u=new Array(r<0?0:r);e<r;)u[e]=n(i,i=t[++e]);return u};function s(t,n){return[t,n]}var l=function(t,n,e){var r,i,u,o,a=t.length,c=n.length,f=new Array(a*c);for(null==e&&(e=s),r=u=0;r<a;++r)for(o=t[r],i=0;i<c;++i,++u)f[u]=e(o,n[i]);return f},h=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},d=function(t){return null===t?NaN:+t},p=function(t,n){var e,r,i=t.length,u=0,o=-1,a=0,c=0;if(null==n)for(;++o<i;)isNaN(e=d(t[o]))||(c+=(r=e-a)*(e-(a+=r/++u)));else for(;++o<i;)isNaN(e=d(n(t[o],o,t)))||(c+=(r=e-a)*(e-(a+=r/++u)));if(u>1)return c/(u-1)},v=function(t,n){var e=p(t,n);return e?Math.sqrt(e):e},g=function(t,n){var e,r,i,u=t.length,o=-1;if(null==n){for(;++o<u;)if(null!=(e=t[o])&&e>=e)for(r=i=e;++o<u;)null!=(e=t[o])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++o<u;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=i=e;++o<u;)null!=(e=n(t[o],o,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},y=Array.prototype,b=y.slice,_=y.map,m=function(t){return function(){return t}},x=function(t){return t},w=function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),u=new Array(i);++r<i;)u[r]=t+r*e;return u},M=Math.sqrt(50),A=Math.sqrt(10),N=Math.sqrt(2),k=function(t,n,e){var r,i,u,o,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(o=T(t,n,e))||!isFinite(o))return[];if(o>0)for(t=Math.ceil(t/o),n=Math.floor(n/o),u=new Array(i=Math.ceil(n-t+1));++a<i;)u[a]=(t+a)*o;else for(t=Math.floor(t*o),n=Math.ceil(n*o),u=new Array(i=Math.ceil(t-n+1));++a<i;)u[a]=(t-a)/o;return r&&u.reverse(),u};function T(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),u=r/Math.pow(10,i);return i>=0?(u>=M?10:u>=A?5:u>=N?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(u>=M?10:u>=A?5:u>=N?2:1)}function S(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),u=r/i;return u>=M?i*=10:u>=A?i*=5:u>=N&&(i*=2),n<t?-i:i}var E=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},C=function(){var t=x,n=g,e=E;function r(r){var i,u,o=r.length,a=new Array(o);for(i=0;i<o;++i)a[i]=t(r[i],i,r);var f=n(a),s=f[0],l=f[1],h=e(a,s,l);Array.isArray(h)||(h=S(s,l,h),h=w(Math.ceil(s/h)*h,l,h));for(var d=h.length;h[0]<=s;)h.shift(),--d;for(;h[d-1]>l;)h.pop(),--d;var p,v=new Array(d+1);for(i=0;i<=d;++i)(p=v[i]=[]).x0=i>0?h[i-1]:s,p.x1=i<d?h[i]:l;for(i=0;i<o;++i)s<=(u=a[i])&&u<=l&&v[c(h,u,0,d)].push(r[i]);return v}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:m(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:m([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?m(b.call(t)):m(t),r):e},r},P=function(t,n,e){if(null==e&&(e=d),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,u=Math.floor(i),o=+e(t[u],u,t);return o+(+e(t[u+1],u+1,t)-o)*(i-u)}},z=function(t,n,e){return t=_.call(t,d).sort(r),Math.ceil((e-n)/(2*(P(t,.75)-P(t,.25))*Math.pow(t.length,-1/3)))},R=function(t,n,e){return Math.ceil((e-n)/(3.5*v(t)*Math.pow(t.length,-1/3)))},L=function(t,n){var e,r,i=t.length,u=-1;if(null==n){for(;++u<i;)if(null!=(e=t[u])&&e>=e)for(r=e;++u<i;)null!=(e=t[u])&&e>r&&(r=e)}else for(;++u<i;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=e;++u<i;)null!=(e=n(t[u],u,t))&&e>r&&(r=e);return r},D=function(t,n){var e,r=t.length,i=r,u=-1,o=0;if(null==n)for(;++u<r;)isNaN(e=d(t[u]))?--i:o+=e;else for(;++u<r;)isNaN(e=d(n(t[u],u,t)))?--i:o+=e;if(i)return o/i},q=function(t,n){var e,i=t.length,u=-1,o=[];if(null==n)for(;++u<i;)isNaN(e=d(t[u]))||o.push(e);else for(;++u<i;)isNaN(e=d(n(t[u],u,t)))||o.push(e);return P(o.sort(r),.5)},U=function(t){for(var n,e,r,i=t.length,u=-1,o=0;++u<i;)o+=t[u].length;for(e=new Array(o);--i>=0;)for(n=(r=t[i]).length;--n>=0;)e[--o]=r[n];return e},O=function(t,n){var e,r,i=t.length,u=-1;if(null==n){for(;++u<i;)if(null!=(e=t[u])&&e>=e)for(r=e;++u<i;)null!=(e=t[u])&&r>e&&(r=e)}else for(;++u<i;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=e;++u<i;)null!=(e=n(t[u],u,t))&&r>e&&(r=e);return r},Y=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},F=function(t,n){if(e=t.length){var e,i,u=0,o=0,a=t[o];for(null==n&&(n=r);++u<e;)(n(i=t[u],a)<0||0!==n(a,a))&&(a=i,o=u);return 0===n(a,a)?o:void 0}},B=function(t,n,e){for(var r,i,u=(null==e?t.length:e)-(n=null==n?0:+n);u;)i=Math.random()*u--|0,r=t[u+n],t[u+n]=t[i+n],t[i+n]=r;return t},I=function(t,n){var e,r=t.length,i=-1,u=0;if(null==n)for(;++i<r;)(e=+t[i])&&(u+=e);else for(;++i<r;)(e=+n(t[i],i,t))&&(u+=e);return u},j=function(t){if(!(i=t.length))return[];for(var n=-1,e=O(t,X),r=new Array(e);++n<e;)for(var i,u=-1,o=r[n]=new Array(i);++u<i;)o[u]=t[u][n];return r};function X(t){return t.length}var H=function(){return j(arguments)},G=Array.prototype.slice,V=function(t){return t},$=1,W=2,Z=3,Q=4,J=1e-6;function K(t){return"translate("+(t+.5)+",0)"}function tt(t){return"translate(0,"+(t+.5)+")"}function nt(){return!this.__axis}function et(t,n){var e=[],r=null,i=null,u=6,o=6,a=3,c=t===$||t===Q?-1:1,f=t===Q||t===W?"x":"y",s=t===$||t===Z?K:tt;function l(l){var h=null==r?n.ticks?n.ticks.apply(n,e):n.domain():r,d=null==i?n.tickFormat?n.tickFormat.apply(n,e):V:i,p=Math.max(u,0)+a,v=n.range(),g=+v[0]+.5,y=+v[v.length-1]+.5,b=(n.bandwidth?function(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}:function(t){return function(n){return+t(n)}})(n.copy()),_=l.selection?l.selection():l,m=_.selectAll(".domain").data([null]),x=_.selectAll(".tick").data(h,n).order(),w=x.exit(),M=x.enter().append("g").attr("class","tick"),A=x.select("line"),N=x.select("text");m=m.merge(m.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),x=x.merge(M),A=A.merge(M.append("line").attr("stroke","currentColor").attr(f+"2",c*u)),N=N.merge(M.append("text").attr("fill","currentColor").attr(f,c*p).attr("dy",t===$?"0em":t===Z?"0.71em":"0.32em")),l!==_&&(m=m.transition(l),x=x.transition(l),A=A.transition(l),N=N.transition(l),w=w.transition(l).attr("opacity",J).attr("transform",function(t){return isFinite(t=b(t))?s(t):this.getAttribute("transform")}),M.attr("opacity",J).attr("transform",function(t){var n=this.parentNode.__axis;return s(n&&isFinite(n=n(t))?n:b(t))})),w.remove(),m.attr("d",t===Q||t==W?o?"M"+c*o+","+g+"H0.5V"+y+"H"+c*o:"M0.5,"+g+"V"+y:o?"M"+g+","+c*o+"V0.5H"+y+"V"+c*o:"M"+g+",0.5H"+y),x.attr("opacity",1).attr("transform",function(t){return s(b(t))}),A.attr(f+"2",c*u),N.attr(f,c*p).text(d),_.filter(nt).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===W?"start":t===Q?"end":"middle"),_.each(function(){this.__axis=b})}return l.scale=function(t){return arguments.length?(n=t,l):n},l.ticks=function(){return e=G.call(arguments),l},l.tickArguments=function(t){return arguments.length?(e=null==t?[]:G.call(t),l):e.slice()},l.tickValues=function(t){return arguments.length?(r=null==t?null:G.call(t),l):r&&r.slice()},l.tickFormat=function(t){return arguments.length?(i=t,l):i},l.tickSize=function(t){return arguments.length?(u=o=+t,l):u},l.tickSizeInner=function(t){return arguments.length?(u=+t,l):u},l.tickSizeOuter=function(t){return arguments.length?(o=+t,l):o},l.tickPadding=function(t){return arguments.length?(a=+t,l):a},l}function rt(t){return et($,t)}function it(t){return et(W,t)}function ut(t){return et(Z,t)}function ot(t){return et(Q,t)}var at={value:function(){}};function ct(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new ft(r)}function ft(t){this._=t}function st(t,n){return t.trim().split(/^|\s+/).map(function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})}function lt(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function ht(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=at,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}ft.prototype=ct.prototype={constructor:ft,on:function(t,n){var e,r=this._,i=st(t+"",r),u=-1,o=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++u<o;)if(e=(t=i[u]).type)r[e]=ht(r[e],t.name,n);else if(null==n)for(e in r)r[e]=ht(r[e],t.name,null);return this}for(;++u<o;)if((e=(t=i[u]).type)&&(e=lt(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new ft(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),u=0;u<e;++u)i[u]=arguments[u+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(u=0,e=(r=this._[t]).length;u<e;++u)r[u].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,u=r.length;i<u;++i)r[i].value.apply(n,e)}};var dt=ct,pt="http://www.w3.org/1999/xhtml",vt={svg:"http://www.w3.org/2000/svg",xhtml:pt,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},gt=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),vt.hasOwnProperty(n)?{space:vt[n],local:t}:t};var yt=function(t){var n=gt(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===pt&&n.documentElement.namespaceURI===pt?n.createElement(t):n.createElementNS(e,t)}})(n)};function bt(){}var _t=function(t){return null==t?bt:function(){return this.querySelector(t)}};function mt(){return[]}var xt=function(t){return null==t?mt:function(){return this.querySelectorAll(t)}},wt=function(t){return function(){return this.matches(t)}},Mt=function(t){return new Array(t.length)};function At(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}At.prototype={constructor:At,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var Nt="$";function kt(t,n,e,r,i,u){for(var o,a=0,c=n.length,f=u.length;a<f;++a)(o=n[a])?(o.__data__=u[a],r[a]=o):e[a]=new At(t,u[a]);for(;a<c;++a)(o=n[a])&&(i[a]=o)}function Tt(t,n,e,r,i,u,o){var a,c,f,s={},l=n.length,h=u.length,d=new Array(l);for(a=0;a<l;++a)(c=n[a])&&(d[a]=f=Nt+o.call(c,c.__data__,a,n),f in s?i[a]=c:s[f]=c);for(a=0;a<h;++a)(c=s[f=Nt+o.call(t,u[a],a,u)])?(r[a]=c,c.__data__=u[a],s[f]=null):e[a]=new At(t,u[a]);for(a=0;a<l;++a)(c=n[a])&&s[d[a]]===c&&(i[a]=c)}function St(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function Et(t){return function(){this.removeAttribute(t)}}function Ct(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Pt(t,n){return function(){this.setAttribute(t,n)}}function zt(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}function Rt(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}function Lt(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}var Dt=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function qt(t){return function(){this.style.removeProperty(t)}}function Ut(t,n,e){return function(){this.style.setProperty(t,n,e)}}function Ot(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}function Yt(t,n){return t.style.getPropertyValue(n)||Dt(t).getComputedStyle(t,null).getPropertyValue(n)}function Ft(t){return function(){delete this[t]}}function Bt(t,n){return function(){this[t]=n}}function It(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}function jt(t){return t.trim().split(/^|\s+/)}function Xt(t){return t.classList||new Ht(t)}function Ht(t){this._node=t,this._names=jt(t.getAttribute("class")||"")}function Gt(t,n){for(var e=Xt(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function Vt(t,n){for(var e=Xt(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function $t(t){return function(){Gt(this,t)}}function Wt(t){return function(){Vt(this,t)}}function Zt(t,n){return function(){(n.apply(this,arguments)?Gt:Vt)(this,t)}}Ht.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Qt(){this.textContent=""}function Jt(t){return function(){this.textContent=t}}function Kt(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}function tn(){this.innerHTML=""}function nn(t){return function(){this.innerHTML=t}}function en(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}function rn(){this.nextSibling&&this.parentNode.appendChild(this)}function un(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function on(){return null}function an(){var t=this.parentNode;t&&t.removeChild(this)}function cn(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function fn(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var sn={},ln=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(sn={mouseenter:"mouseover",mouseleave:"mouseout"}));function hn(t,n,e){return t=dn(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function dn(t,n,e){return function(r){var i=ln;ln=r;try{t.call(this,this.__data__,n,e)}finally{ln=i}}}function pn(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}function vn(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,u=n.length;r<u;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function gn(t,n,e){var r=sn.hasOwnProperty(t.type)?hn:dn;return function(i,u,o){var a,c=this.__on,f=r(n,u,o);if(c)for(var s=0,l=c.length;s<l;++s)if((a=c[s]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=f,a.capture=e),void(a.value=n);this.addEventListener(t.type,f,e),a={type:t.type,name:t.name,value:n,listener:f,capture:e},c?c.push(a):this.__on=[a]}}function yn(t,n,e,r){var i=ln;t.sourceEvent=ln,ln=t;try{return n.apply(e,r)}finally{ln=i}}function bn(t,n,e){var r=Dt(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var _n=[null];function mn(t,n){this._groups=t,this._parents=n}function xn(){return new mn([[document.documentElement]],_n)}mn.prototype=xn.prototype={constructor:mn,select:function(t){"function"!=typeof t&&(t=_t(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o,a=n[i],c=a.length,f=r[i]=new Array(c),s=0;s<c;++s)(u=a[s])&&(o=t.call(u,u.__data__,s,a))&&("__data__"in u&&(o.__data__=u.__data__),f[s]=o);return new mn(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=xt(t));for(var n=this._groups,e=n.length,r=[],i=[],u=0;u<e;++u)for(var o,a=n[u],c=a.length,f=0;f<c;++f)(o=a[f])&&(r.push(t.call(o,o.__data__,f,a)),i.push(o));return new mn(r,i)},filter:function(t){"function"!=typeof t&&(t=wt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o=n[i],a=o.length,c=r[i]=[],f=0;f<a;++f)(u=o[f])&&t.call(u,u.__data__,f,o)&&c.push(u);return new mn(r,this._parents)},data:function(t,n){if(!t)return p=new Array(this.size()),s=-1,this.each(function(t){p[++s]=t}),p;var e,r=n?Tt:kt,i=this._parents,u=this._groups;"function"!=typeof t&&(e=t,t=function(){return e});for(var o=u.length,a=new Array(o),c=new Array(o),f=new Array(o),s=0;s<o;++s){var l=i[s],h=u[s],d=h.length,p=t.call(l,l&&l.__data__,s,i),v=p.length,g=c[s]=new Array(v),y=a[s]=new Array(v);r(l,h,g,y,f[s]=new Array(d),p,n);for(var b,_,m=0,x=0;m<v;++m)if(b=g[m]){for(m>=x&&(x=m+1);!(_=y[x])&&++x<v;);b._next=_||null}}return(a=new mn(a,i))._enter=c,a._exit=f,a},enter:function(){return new mn(this._enter||this._groups.map(Mt),this._parents)},exit:function(){return new mn(this._exit||this._groups.map(Mt),this._parents)},join:function(t,n,e){var r=this.enter(),i=this,u=this.exit();return r="function"==typeof t?t(r):r.append(t+""),null!=n&&(i=n(i)),null==e?u.remove():e(u),r&&i?r.merge(i).order():i},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var c,f=n[a],s=e[a],l=f.length,h=o[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)o[a]=n[a];return new mn(o,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],u=i.length-1,o=i[u];--u>=0;)(r=i[u])&&(o&&4^r.compareDocumentPosition(o)&&o.parentNode.insertBefore(r,o),o=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=St);for(var e=this._groups,r=e.length,i=new Array(r),u=0;u<r;++u){for(var o,a=e[u],c=a.length,f=i[u]=new Array(c),s=0;s<c;++s)(o=a[s])&&(f[s]=o);f.sort(n)}return new mn(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,u=r.length;i<u;++i){var o=r[i];if(o)return o}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,u=n[e],o=0,a=u.length;o<a;++o)(i=u[o])&&t.call(i,i.__data__,o,u);return this},attr:function(t,n){var e=gt(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?Ct:Et:"function"==typeof n?e.local?Lt:Rt:e.local?zt:Pt)(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?qt:"function"==typeof n?Ot:Ut)(t,n,null==e?"":e)):Yt(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?Ft:"function"==typeof n?It:Bt)(t,n)):this.node()[t]},classed:function(t,n){var e=jt(t+"");if(arguments.length<2){for(var r=Xt(this.node()),i=-1,u=e.length;++i<u;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?Zt:n?$t:Wt)(e,n))},text:function(t){return arguments.length?this.each(null==t?Qt:("function"==typeof t?Kt:Jt)(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?tn:("function"==typeof t?en:nn)(t)):this.node().innerHTML},raise:function(){return this.each(rn)},lower:function(){return this.each(un)},append:function(t){var n="function"==typeof t?t:yt(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:yt(t),r=null==n?on:"function"==typeof n?n:_t(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(an)},clone:function(t){return this.select(t?fn:cn)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,u=pn(t+""),o=u.length;if(!(arguments.length<2)){for(a=n?gn:vn,null==e&&(e=!1),r=0;r<o;++r)this.each(a(u[r],n,e));return this}var a=this.node().__on;if(a)for(var c,f=0,s=a.length;f<s;++f)for(r=0,c=a[f];r<o;++r)if((i=u[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return bn(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return bn(this,t,n)}})(t,n))}};var wn=xn,Mn=function(t){return"string"==typeof t?new mn([[document.querySelector(t)]],[document.documentElement]):new mn([[t]],_n)},An=function(t){return Mn(yt(t).call(document.documentElement))},Nn=0;function kn(){return new Tn}function Tn(){this._="@"+(++Nn).toString(36)}Tn.prototype=kn.prototype={constructor:Tn,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var Sn=function(){for(var t,n=ln;t=n.sourceEvent;)n=t;return n},En=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]},Cn=function(t){var n=Sn();return n.changedTouches&&(n=n.changedTouches[0]),En(t,n)},Pn=function(t){return"string"==typeof t?new mn([document.querySelectorAll(t)],[document.documentElement]):new mn([null==t?[]:t],_n)},zn=function(t,n,e){arguments.length<3&&(e=n,n=Sn().changedTouches);for(var r,i=0,u=n?n.length:0;i<u;++i)if((r=n[i]).identifier===e)return En(t,r);return null},Rn=function(t,n){null==n&&(n=Sn().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=En(t,n[e]);return i};function Ln(){ln.stopImmediatePropagation()}var Dn=function(){ln.preventDefault(),ln.stopImmediatePropagation()},qn=function(t){var n=t.document.documentElement,e=Mn(t).on("dragstart.drag",Dn,!0);"onselectstart"in n?e.on("selectstart.drag",Dn,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")};function Un(t,n){var e=t.document.documentElement,r=Mn(t).on("dragstart.drag",null);n&&(r.on("click.drag",Dn,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in e?r.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}var On=function(t){return function(){return t}};function Yn(t,n,e,r,i,u,o,a,c,f){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=u,this.y=o,this.dx=a,this.dy=c,this._=f}function Fn(){return!ln.button}function Bn(){return this.parentNode}function In(t){return null==t?{x:ln.x,y:ln.y}:t}function jn(){return"ontouchstart"in this}Yn.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var Xn=function(){var t,n,e,r,i=Fn,u=Bn,o=In,a=jn,c={},f=dt("start","drag","end"),s=0,l=0;function h(t){t.on("mousedown.drag",d).filter(a).on("touchstart.drag",g).on("touchmove.drag",y).on("touchend.drag touchcancel.drag",b).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function d(){if(!r&&i.apply(this,arguments)){var o=_("mouse",u.apply(this,arguments),Cn,this,arguments);o&&(Mn(ln.view).on("mousemove.drag",p,!0).on("mouseup.drag",v,!0),qn(ln.view),Ln(),e=!1,t=ln.clientX,n=ln.clientY,o("start"))}}function p(){if(Dn(),!e){var r=ln.clientX-t,i=ln.clientY-n;e=r*r+i*i>l}c.mouse("drag")}function v(){Mn(ln.view).on("mousemove.drag mouseup.drag",null),Un(ln.view,e),Dn(),c.mouse("end")}function g(){if(i.apply(this,arguments)){var t,n,e=ln.changedTouches,r=u.apply(this,arguments),o=e.length;for(t=0;t<o;++t)(n=_(e[t].identifier,r,zn,this,arguments))&&(Ln(),n("start"))}}function y(){var t,n,e=ln.changedTouches,r=e.length;for(t=0;t<r;++t)(n=c[e[t].identifier])&&(Dn(),n("drag"))}function b(){var t,n,e=ln.changedTouches,i=e.length;for(r&&clearTimeout(r),r=setTimeout(function(){r=null},500),t=0;t<i;++t)(n=c[e[t].identifier])&&(Ln(),n("end"))}function _(t,n,e,r,i){var u,a,l,d=e(n,t),p=f.copy();if(yn(new Yn(h,"beforestart",u,t,s,d[0],d[1],0,0,p),function(){return null!=(ln.subject=u=o.apply(r,i))&&(a=u.x-d[0]||0,l=u.y-d[1]||0,!0)}))return function o(f){var v,g=d;switch(f){case"start":c[t]=o,v=s++;break;case"end":delete c[t],--s;case"drag":d=e(n,t),v=s}yn(new Yn(h,f,u,t,v,d[0]+a,d[1]+l,d[0]-g[0],d[1]-g[1],p),p.apply,p,[f,r,i])}}return h.filter=function(t){return arguments.length?(i="function"==typeof t?t:On(!!t),h):i},h.container=function(t){return arguments.length?(u="function"==typeof t?t:On(t),h):u},h.subject=function(t){return arguments.length?(o="function"==typeof t?t:On(t),h):o},h.touchable=function(t){return arguments.length?(a="function"==typeof t?t:On(!!t),h):a},h.on=function(){var t=f.on.apply(f,arguments);return t===f?h:t},h.clickDistance=function(t){return arguments.length?(l=(t=+t)*t,h):Math.sqrt(l)},h},Hn=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function Gn(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function Vn(){}var $n="\\s*([+-]?\\d+)\\s*",Wn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Zn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Qn=/^#([0-9a-f]{3})$/,Jn=/^#([0-9a-f]{6})$/,Kn=new RegExp("^rgb\\("+[$n,$n,$n]+"\\)$"),te=new RegExp("^rgb\\("+[Zn,Zn,Zn]+"\\)$"),ne=new RegExp("^rgba\\("+[$n,$n,$n,Wn]+"\\)$"),ee=new RegExp("^rgba\\("+[Zn,Zn,Zn,Wn]+"\\)$"),re=new RegExp("^hsl\\("+[Wn,Zn,Zn]+"\\)$"),ie=new RegExp("^hsla\\("+[Wn,Zn,Zn,Wn]+"\\)$"),ue={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function oe(t){var n;return t=(t+"").trim().toLowerCase(),(n=Qn.exec(t))?new le((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=Jn.exec(t))?ae(parseInt(n[1],16)):(n=Kn.exec(t))?new le(n[1],n[2],n[3],1):(n=te.exec(t))?new le(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=ne.exec(t))?ce(n[1],n[2],n[3],n[4]):(n=ee.exec(t))?ce(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=re.exec(t))?de(n[1],n[2]/100,n[3]/100,1):(n=ie.exec(t))?de(n[1],n[2]/100,n[3]/100,n[4]):ue.hasOwnProperty(t)?ae(ue[t]):"transparent"===t?new le(NaN,NaN,NaN,0):null}function ae(t){return new le(t>>16&255,t>>8&255,255&t,1)}function ce(t,n,e,r){return r<=0&&(t=n=e=NaN),new le(t,n,e,r)}function fe(t){return t instanceof Vn||(t=oe(t)),t?new le((t=t.rgb()).r,t.g,t.b,t.opacity):new le}function se(t,n,e,r){return 1===arguments.length?fe(t):new le(t,n,e,null==r?1:r)}function le(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function he(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function de(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new ve(t,n,e,r)}function pe(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof ve)return new ve(t.h,t.s,t.l,t.opacity);if(t instanceof Vn||(t=oe(t)),!t)return new ve;if(t instanceof ve)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),u=Math.max(n,e,r),o=NaN,a=u-i,c=(u+i)/2;return a?(o=n===u?(e-r)/a+6*(e<r):e===u?(r-n)/a+2:(n-e)/a+4,a/=c<.5?u+i:2-u-i,o*=60):a=c>0&&c<1?0:o,new ve(o,a,c,t.opacity)}(t):new ve(t,n,e,null==r?1:r)}function ve(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function ge(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Hn(Vn,oe,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),Hn(le,se,Gn(Vn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new le(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new le(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+he(this.r)+he(this.g)+he(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),Hn(ve,pe,Gn(Vn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new ve(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new ve(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new le(ge(t>=240?t-240:t+120,i,r),ge(t,i,r),ge(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var ye=Math.PI/180,be=180/Math.PI,_e=.96422,me=1,xe=.82521,we=4/29,Me=6/29,Ae=3*Me*Me,Ne=Me*Me*Me;function ke(t){if(t instanceof Ee)return new Ee(t.l,t.a,t.b,t.opacity);if(t instanceof Ue)return Oe(t);t instanceof le||(t=fe(t));var n,e,r=Re(t.r),i=Re(t.g),u=Re(t.b),o=Ce((.2225045*r+.7168786*i+.0606169*u)/me);return r===i&&i===u?n=e=o:(n=Ce((.4360747*r+.3850649*i+.1430804*u)/_e),e=Ce((.0139322*r+.0971045*i+.7141733*u)/xe)),new Ee(116*o-16,500*(n-o),200*(o-e),t.opacity)}function Te(t,n){return new Ee(t,0,0,null==n?1:n)}function Se(t,n,e,r){return 1===arguments.length?ke(t):new Ee(t,n,e,null==r?1:r)}function Ee(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function Ce(t){return t>Ne?Math.pow(t,1/3):t/Ae+we}function Pe(t){return t>Me?t*t*t:Ae*(t-we)}function ze(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function Re(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function Le(t){if(t instanceof Ue)return new Ue(t.h,t.c,t.l,t.opacity);if(t instanceof Ee||(t=ke(t)),0===t.a&&0===t.b)return new Ue(NaN,0<t.l&&t.l<100?0:NaN,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*be;return new Ue(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function De(t,n,e,r){return 1===arguments.length?Le(t):new Ue(e,n,t,null==r?1:r)}function qe(t,n,e,r){return 1===arguments.length?Le(t):new Ue(t,n,e,null==r?1:r)}function Ue(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}function Oe(t){if(isNaN(t.h))return new Ee(t.l,0,0,t.opacity);var n=t.h*ye;return new Ee(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}Hn(Ee,Se,Gn(Vn,{brighter:function(t){return new Ee(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new Ee(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new le(ze(3.1338561*(n=_e*Pe(n))-1.6168667*(t=me*Pe(t))-.4906146*(e=xe*Pe(e))),ze(-.9787684*n+1.9161415*t+.033454*e),ze(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),Hn(Ue,qe,Gn(Vn,{brighter:function(t){return new Ue(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new Ue(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return Oe(this).rgb()}}));var Ye=-.29227,Fe=-.90649,Be=1.97294,Ie=Be*Fe,je=1.78277*Be,Xe=1.78277*Ye- -.14861*Fe;function He(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Ge)return new Ge(t.h,t.s,t.l,t.opacity);t instanceof le||(t=fe(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(Xe*r+Ie*n-je*e)/(Xe+Ie-je),u=r-i,o=(Be*(e-i)-Ye*u)/Fe,a=Math.sqrt(o*o+u*u)/(Be*i*(1-i)),c=a?Math.atan2(o,u)*be-120:NaN;return new Ge(c<0?c+360:c,a,i,t.opacity)}(t):new Ge(t,n,e,null==r?1:r)}function Ge(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Ve(t,n,e,r,i){var u=t*t,o=u*t;return((1-3*t+3*u-o)*n+(4-6*u+3*o)*e+(1+3*t+3*u-3*o)*r+o*i)/6}Hn(Ge,He,Gn(Vn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Ge(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Ge(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*ye,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new le(255*(n+e*(-.14861*r+1.78277*i)),255*(n+e*(Ye*r+Fe*i)),255*(n+e*(Be*r)),this.opacity)}}));var $e=function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],u=t[r+1],o=r>0?t[r-1]:2*i-u,a=r<n-1?t[r+2]:2*u-i;return Ve((e-r/n)*n,o,i,u,a)}},We=function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],u=t[r%n],o=t[(r+1)%n],a=t[(r+2)%n];return Ve((e-r/n)*n,i,u,o,a)}},Ze=function(t){return function(){return t}};function Qe(t,n){return function(e){return t+e*n}}function Je(t,n){var e=n-t;return e?Qe(t,e>180||e<-180?e-360*Math.round(e/360):e):Ze(isNaN(t)?n:t)}function Ke(t){return 1==(t=+t)?tr:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):Ze(isNaN(n)?e:n)}}function tr(t,n){var e=n-t;return e?Qe(t,e):Ze(isNaN(t)?n:t)}var nr=function t(n){var e=Ke(n);function r(t,n){var r=e((t=se(t)).r,(n=se(n)).r),i=e(t.g,n.g),u=e(t.b,n.b),o=tr(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=u(n),t.opacity=o(n),t+""}}return r.gamma=t,r}(1);function er(t){return function(n){var e,r,i=n.length,u=new Array(i),o=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=se(n[e]),u[e]=r.r||0,o[e]=r.g||0,a[e]=r.b||0;return u=t(u),o=t(o),a=t(a),r.opacity=1,function(t){return r.r=u(t),r.g=o(t),r.b=a(t),r+""}}}var rr=er($e),ir=er(We),ur=function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,u=new Array(i),o=new Array(r);for(e=0;e<i;++e)u[e]=gr(t[e],n[e]);for(;e<r;++e)o[e]=n[e];return function(t){for(e=0;e<i;++e)o[e]=u[e](t);return o}},or=function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}},ar=function(t,n){return n-=t=+t,function(e){return t+n*e}},cr=function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=gr(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}},fr=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,sr=new RegExp(fr.source,"g");var lr,hr,dr,pr,vr=function(t,n){var e,r,i,u=fr.lastIndex=sr.lastIndex=0,o=-1,a=[],c=[];for(t+="",n+="";(e=fr.exec(t))&&(r=sr.exec(n));)(i=r.index)>u&&(i=n.slice(u,i),a[o]?a[o]+=i:a[++o]=i),(e=e[0])===(r=r[0])?a[o]?a[o]+=r:a[++o]=r:(a[++o]=null,c.push({i:o,x:ar(e,r)})),u=sr.lastIndex;return u<n.length&&(i=n.slice(u),a[o]?a[o]+=i:a[++o]=i),a.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})},gr=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?Ze(n):("number"===r?ar:"string"===r?(e=oe(n))?(n=e,nr):vr:n instanceof oe?nr:n instanceof Date?or:Array.isArray(n)?ur:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?cr:ar)(t,n)},yr=function(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}},br=function(t,n){var e=Je(+t,+n);return function(t){var n=e(t);return n-360*Math.floor(n/360)}},_r=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},mr=180/Math.PI,xr={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},wr=function(t,n,e,r,i,u){var o,a,c;return(o=Math.sqrt(t*t+n*n))&&(t/=o,n/=o),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),t*r<n*e&&(t=-t,n=-n,c=-c,o=-o),{translateX:i,translateY:u,rotate:Math.atan2(n,t)*mr,skewX:Math.atan(c)*mr,scaleX:o,scaleY:a}};function Mr(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(u,o){var a=[],c=[];return u=t(u),o=t(o),function(t,r,i,u,o,a){if(t!==i||r!==u){var c=o.push("translate(",null,n,null,e);a.push({i:c-4,x:ar(t,i)},{i:c-2,x:ar(r,u)})}else(i||u)&&o.push("translate("+i+n+u+e)}(u.translateX,u.translateY,o.translateX,o.translateY,a,c),function(t,n,e,u){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),u.push({i:e.push(i(e)+"rotate(",null,r)-2,x:ar(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(u.rotate,o.rotate,a,c),function(t,n,e,u){t!==n?u.push({i:e.push(i(e)+"skewX(",null,r)-2,x:ar(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(u.skewX,o.skewX,a,c),function(t,n,e,r,u,o){if(t!==e||n!==r){var a=u.push(i(u)+"scale(",null,",",null,")");o.push({i:a-4,x:ar(t,e)},{i:a-2,x:ar(n,r)})}else 1===e&&1===r||u.push(i(u)+"scale("+e+","+r+")")}(u.scaleX,u.scaleY,o.scaleX,o.scaleY,a,c),u=o=null,function(t){for(var n,e=-1,r=c.length;++e<r;)a[(n=c[e]).i]=n.x(t);return a.join("")}}}var Ar=Mr(function(t){return"none"===t?xr:(lr||(lr=document.createElement("DIV"),hr=document.documentElement,dr=document.defaultView),lr.style.transform=t,t=dr.getComputedStyle(hr.appendChild(lr),null).getPropertyValue("transform"),hr.removeChild(lr),t=t.slice(7,-1).split(","),wr(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),Nr=Mr(function(t){return null==t?xr:(pr||(pr=document.createElementNS("http://www.w3.org/2000/svg","g")),pr.setAttribute("transform",t),(t=pr.transform.baseVal.consolidate())?(t=t.matrix,wr(t.a,t.b,t.c,t.d,t.e,t.f)):xr)},", ",")",")"),kr=Math.SQRT2;function Tr(t){return((t=Math.exp(t))+1/t)/2}var Sr=function(t,n){var e,r,i=t[0],u=t[1],o=t[2],a=n[0],c=n[1],f=n[2],s=a-i,l=c-u,h=s*s+l*l;if(h<1e-12)r=Math.log(f/o)/kr,e=function(t){return[i+t*s,u+t*l,o*Math.exp(kr*t*r)]};else{var d=Math.sqrt(h),p=(f*f-o*o+4*h)/(2*o*2*d),v=(f*f-o*o-4*h)/(2*f*2*d),g=Math.log(Math.sqrt(p*p+1)-p),y=Math.log(Math.sqrt(v*v+1)-v);r=(y-g)/kr,e=function(t){var n,e=t*r,a=Tr(g),c=o/(2*d)*(a*(n=kr*e+g,((n=Math.exp(2*n))-1)/(n+1))-function(t){return((t=Math.exp(t))-1/t)/2}(g));return[i+c*s,u+c*l,o*a/Tr(kr*e+g)]}}return e.duration=1e3*r,e};function Er(t){return function(n,e){var r=t((n=pe(n)).h,(e=pe(e)).h),i=tr(n.s,e.s),u=tr(n.l,e.l),o=tr(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=u(t),n.opacity=o(t),n+""}}}var Cr=Er(Je),Pr=Er(tr);function zr(t,n){var e=tr((t=Se(t)).l,(n=Se(n)).l),r=tr(t.a,n.a),i=tr(t.b,n.b),u=tr(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=u(n),t+""}}function Rr(t){return function(n,e){var r=t((n=qe(n)).h,(e=qe(e)).h),i=tr(n.c,e.c),u=tr(n.l,e.l),o=tr(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=u(t),n.opacity=o(t),n+""}}}var Lr=Rr(Je),Dr=Rr(tr);function qr(t){return function n(e){function r(n,r){var i=t((n=He(n)).h,(r=He(r)).h),u=tr(n.s,r.s),o=tr(n.l,r.l),a=tr(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=u(t),n.l=o(Math.pow(t,e)),n.opacity=a(t),n+""}}return e=+e,r.gamma=n,r}(1)}var Ur=qr(Je),Or=qr(tr);function Yr(t,n){for(var e=0,r=n.length-1,i=n[0],u=new Array(r<0?0:r);e<r;)u[e]=t(i,i=n[++e]);return function(t){var n=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return u[n](t-n)}}var Fr,Br,Ir=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},jr=0,Xr=0,Hr=0,Gr=1e3,Vr=0,$r=0,Wr=0,Zr="object"==typeof performance&&performance.now?performance:Date,Qr="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Jr(){return $r||(Qr(Kr),$r=Zr.now()+Wr)}function Kr(){$r=0}function ti(){this._call=this._time=this._next=null}function ni(t,n,e){var r=new ti;return r.restart(t,n,e),r}function ei(){Jr(),++jr;for(var t,n=Fr;n;)(t=$r-n._time)>=0&&n._call.call(null,t),n=n._next;--jr}function ri(){$r=(Vr=Zr.now())+Wr,jr=Xr=0;try{ei()}finally{jr=0,function(){var t,n,e=Fr,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:Fr=n);Br=t,ui(r)}(),$r=0}}function ii(){var t=Zr.now(),n=t-Vr;n>Gr&&(Wr-=n,Vr=t)}function ui(t){jr||(Xr&&(Xr=clearTimeout(Xr)),t-$r>24?(t<1/0&&(Xr=setTimeout(ri,t-Zr.now()-Wr)),Hr&&(Hr=clearInterval(Hr))):(Hr||(Vr=Zr.now(),Hr=setInterval(ii,Gr)),jr=1,Qr(ri)))}ti.prototype=ni.prototype={constructor:ti,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?Jr():+e)+(null==n?0:+n),this._next||Br===this||(Br?Br._next=this:Fr=this,Br=this),this._call=t,this._time=e,ui()},stop:function(){this._call&&(this._call=null,this._time=1/0,ui())}};var oi=function(t,n,e){var r=new ti;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},ai=function(t,n,e){var r=new ti,i=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?Jr():+e,r.restart(function u(o){o+=i,r.restart(u,i+=n,e),t(o)},n,e),r)},ci=dt("start","end","cancel","interrupt"),fi=[],si=0,li=1,hi=2,di=3,pi=4,vi=5,gi=6,yi=function(t,n,e,r,i,u){var o=t.__transition;if(o){if(e in o)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function u(c){var f,s,l,h;if(e.state!==li)return a();for(f in i)if((h=i[f]).name===e.name){if(h.state===di)return oi(u);h.state===pi?(h.state=gi,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[f]):+f<n&&(h.state=gi,h.timer.stop(),h.on.call("cancel",t,t.__data__,h.index,h.group),delete i[f])}if(oi(function(){e.state===di&&(e.state=pi,e.timer.restart(o,e.delay,e.time),o(c))}),e.state=hi,e.on.call("start",t,t.__data__,e.index,e.group),e.state===hi){for(e.state=di,r=new Array(l=e.tween.length),f=0,s=-1;f<l;++f)(h=e.tween[f].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function o(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=vi,1),u=-1,o=r.length;++u<o;)r[u].call(t,i);e.state===vi&&(e.on.call("end",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=gi,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=ni(function(t){e.state=li,e.timer.restart(u,e.delay,e.time),e.delay<=t&&u(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:ci,tween:fi,time:u.time,delay:u.delay,duration:u.duration,ease:u.ease,timer:null,state:si})};function bi(t,n){var e=mi(t,n);if(e.state>si)throw new Error("too late; already scheduled");return e}function _i(t,n){var e=mi(t,n);if(e.state>di)throw new Error("too late; already running");return e}function mi(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}var xi=function(t,n){var e,r,i,u=t.__transition,o=!0;if(u){for(i in n=null==n?null:n+"",u)(e=u[i]).name===n?(r=e.state>hi&&e.state<vi,e.state=gi,e.timer.stop(),e.on.call(r?"interrupt":"cancel",t,t.__data__,e.index,e.group),delete u[i]):o=!1;o&&delete t.__transition}};function wi(t,n){var e,r;return function(){var i=_i(this,t),u=i.tween;if(u!==e)for(var o=0,a=(r=e=u).length;o<a;++o)if(r[o].name===n){(r=r.slice()).splice(o,1);break}i.tween=r}}function Mi(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var u=_i(this,t),o=u.tween;if(o!==r){i=(r=o).slice();for(var a={name:n,value:e},c=0,f=i.length;c<f;++c)if(i[c].name===n){i[c]=a;break}c===f&&i.push(a)}u.tween=i}}function Ai(t,n,e){var r=t._id;return t.each(function(){var t=_i(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return mi(t,r).value[n]}}var Ni=function(t,n){var e;return("number"==typeof n?ar:n instanceof oe?nr:(e=oe(n))?(n=e,nr):vr)(t,n)};function ki(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttributeNS(t.space,t.local,n(e))}}(t,i)),e}return i._value=n,i}function Ti(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttribute(t,n(e))}}(t,i)),e}return i._value=n,i}function Si(t,n){return function(){bi(this,t).delay=+n.apply(this,arguments)}}function Ei(t,n){return n=+n,function(){bi(this,t).delay=n}}function Ci(t,n){return function(){_i(this,t).duration=+n.apply(this,arguments)}}function Pi(t,n){return n=+n,function(){_i(this,t).duration=n}}function zi(t,n){if("function"!=typeof n)throw new Error;return function(){_i(this,t).ease=n}}function Ri(t,n,e){var r,i,u=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?bi:_i;return function(){var o=u(this,t),a=o.on;a!==r&&(i=(r=a).copy()).on(n,e),o.on=i}}var Li=wn.prototype.constructor;function Di(t){return function(){this.style.removeProperty(t)}}function qi(t,n,e){var r,i;function u(){var u=n.apply(this,arguments);return u!==i&&(r=(i=u)&&function(t,n,e){return function(r){this.style.setProperty(t,n(r),e)}}(t,u,e)),r}return u._value=n,u}var Ui=0;function Oi(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function Yi(t){return wn().transition(t)}function Fi(){return++Ui}var Bi=wn.prototype;function Ii(t){return+t}function ji(t){return t*t}function Xi(t){return t*(2-t)}function Hi(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function Gi(t){return t*t*t}function Vi(t){return--t*t*t+1}function $i(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}Oi.prototype=Yi.prototype={constructor:Oi,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=_t(t));for(var r=this._groups,i=r.length,u=new Array(i),o=0;o<i;++o)for(var a,c,f=r[o],s=f.length,l=u[o]=new Array(s),h=0;h<s;++h)(a=f[h])&&(c=t.call(a,a.__data__,h,f))&&("__data__"in a&&(c.__data__=a.__data__),l[h]=c,yi(l[h],n,e,h,l,mi(a,e)));return new Oi(u,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=xt(t));for(var r=this._groups,i=r.length,u=[],o=[],a=0;a<i;++a)for(var c,f=r[a],s=f.length,l=0;l<s;++l)if(c=f[l]){for(var h,d=t.call(c,c.__data__,l,f),p=mi(c,e),v=0,g=d.length;v<g;++v)(h=d[v])&&yi(h,n,e,v,d,p);u.push(d),o.push(c)}return new Oi(u,o,n,e)},filter:function(t){"function"!=typeof t&&(t=wt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o=n[i],a=o.length,c=r[i]=[],f=0;f<a;++f)(u=o[f])&&t.call(u,u.__data__,f,o)&&c.push(u);return new Oi(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var c,f=n[a],s=e[a],l=f.length,h=o[a]=new Array(l),d=0;d<l;++d)(c=f[d]||s[d])&&(h[d]=c);for(;a<r;++a)o[a]=n[a];return new Oi(o,this._parents,this._name,this._id)},selection:function(){return new Li(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=Fi(),r=this._groups,i=r.length,u=0;u<i;++u)for(var o,a=r[u],c=a.length,f=0;f<c;++f)if(o=a[f]){var s=mi(o,n);yi(o,t,e,f,a,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new Oi(r,this._parents,t,e)},call:Bi.call,nodes:Bi.nodes,node:Bi.node,size:Bi.size,empty:Bi.empty,each:Bi.each,on:function(t,n){var e=this._id;return arguments.length<2?mi(this.node(),e).on.on(t):this.each(Ri(e,t,n))},attr:function(t,n){var e=gt(t),r="transform"===e?Nr:Ni;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,u;return function(){var o,a,c=e(this);if(null!=c)return(o=this.getAttributeNS(t.space,t.local))===(a=c+"")?null:o===r&&a===i?u:(i=a,u=n(r=o,c));this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,u;return function(){var o,a,c=e(this);if(null!=c)return(o=this.getAttribute(t))===(a=c+"")?null:o===r&&a===i?u:(i=a,u=n(r=o,c));this.removeAttribute(t)}})(e,r,Ai(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i,u=e+"";return function(){var o=this.getAttributeNS(t.space,t.local);return o===u?null:o===r?i:i=n(r=o,e)}}:function(t,n,e){var r,i,u=e+"";return function(){var o=this.getAttribute(t);return o===u?null:o===r?i:i=n(r=o,e)}})(e,r,n))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=gt(t);return this.tween(e,(r.local?ki:Ti)(r,n))},style:function(t,n,e){var r="transform"==(t+="")?Ar:Ni;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var u=Yt(this,t),o=(this.style.removeProperty(t),Yt(this,t));return u===o?null:u===e&&o===r?i:i=n(e=u,r=o)}}(t,r)).on("end.style."+t,Di(t)):"function"==typeof n?this.styleTween(t,function(t,n,e){var r,i,u;return function(){var o=Yt(this,t),a=e(this),c=a+"";return null==a&&(this.style.removeProperty(t),c=a=Yt(this,t)),o===c?null:o===r&&c===i?u:(i=c,u=n(r=o,a))}}(t,r,Ai(this,"style."+t,n))).each(function(t,n){var e,r,i,u,o="style."+n,a="end."+o;return function(){var c=_i(this,t),f=c.on,s=null==c.value[o]?u||(u=Di(n)):void 0;f===e&&i===s||(r=(e=f).copy()).on(a,i=s),c.on=r}}(this._id,t)):this.styleTween(t,function(t,n,e){var r,i,u=e+"";return function(){var o=Yt(this,t);return o===u?null:o===r?i:i=n(r=o,e)}}(t,r,n),e).on("end.style."+t,null)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,qi(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(Ai(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",(t=this._id,function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}));var t},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=mi(this.node(),e).tween,u=0,o=i.length;u<o;++u)if((r=i[u]).name===t)return r.value;return null}return this.each((null==n?wi:Mi)(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?Si:Ei)(n,t)):mi(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?Ci:Pi)(n,t)):mi(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(zi(n,t)):mi(this.node(),n).ease},end:function(){var t,n,e=this,r=e._id,i=e.size();return new Promise(function(u,o){var a={value:o},c={value:function(){0==--i&&u()}};e.each(function(){var e=_i(this,r),i=e.on;i!==t&&((n=(t=i).copy())._.cancel.push(a),n._.interrupt.push(a),n._.end.push(c)),e.on=n})})}};var Wi=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),Zi=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),Qi=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),Ji=Math.PI,Ki=Ji/2;function tu(t){return 1-Math.cos(t*Ki)}function nu(t){return Math.sin(t*Ki)}function eu(t){return(1-Math.cos(Ji*t))/2}function ru(t){return Math.pow(2,10*t-10)}function iu(t){return 1-Math.pow(2,-10*t)}function uu(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function ou(t){return 1-Math.sqrt(1-t*t)}function au(t){return Math.sqrt(1- --t*t)}function cu(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var fu=4/11,su=6/11,lu=8/11,hu=.75,du=9/11,pu=10/11,vu=.9375,gu=21/22,yu=63/64,bu=1/fu/fu;function _u(t){return 1-mu(1-t)}function mu(t){return(t=+t)<fu?bu*t*t:t<lu?bu*(t-=su)*t+hu:t<pu?bu*(t-=du)*t+vu:bu*(t-=gu)*t+yu}function xu(t){return((t*=2)<=1?1-mu(1-t):mu(t-1)+1)/2}var wu=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),Mu=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),Au=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158),Nu=2*Math.PI,ku=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Nu);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*Nu)},i.period=function(e){return t(n,e)},i}(1,.3),Tu=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Nu);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*Nu)},i.period=function(e){return t(n,e)},i}(1,.3),Su=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Nu);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*Nu)},i.period=function(e){return t(n,e)},i}(1,.3),Eu={time:null,delay:0,duration:250,ease:$i};function Cu(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return Eu.time=Jr(),Eu;return e}wn.prototype.interrupt=function(t){return this.each(function(){xi(this,t)})},wn.prototype.transition=function(t){var n,e;t instanceof Oi?(n=t._id,t=t._name):(n=Fi(),(e=Eu).time=Jr(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,u=0;u<i;++u)for(var o,a=r[u],c=a.length,f=0;f<c;++f)(o=a[f])&&yi(o,t,n,f,a,e||Cu(o,n));return new Oi(r,this._parents,t,n)};var Pu=[null],zu=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>li&&e.name===n)return new Oi([[t]],Pu,n,+r);return null},Ru=function(t){return function(){return t}},Lu=function(t,n,e){this.target=t,this.type=n,this.selection=e};function Du(){ln.stopImmediatePropagation()}var qu=function(){ln.preventDefault(),ln.stopImmediatePropagation()},Uu={name:"drag"},Ou={name:"space"},Yu={name:"handle"},Fu={name:"center"},Bu={name:"x",handles:["e","w"].map(Wu),input:function(t,n){return t&&[[t[0],n[0][1]],[t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},Iu={name:"y",handles:["n","s"].map(Wu),input:function(t,n){return t&&[[n[0][0],t[0]],[n[1][0],t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},ju={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(Wu),input:function(t){return t},output:function(t){return t}},Xu={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Hu={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},Gu={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},Vu={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},$u={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function Wu(t){return{type:t}}function Zu(){return!ln.button}function Qu(){var t=this.ownerSVGElement||this;return[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function Ju(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function Ku(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function to(t){var n=t.__brush;return n?n.dim.output(n.selection):null}function no(){return io(Bu)}function eo(){return io(Iu)}var ro=function(){return io(ju)};function io(t){var n,e=Qu,r=Zu,i=dt(o,"start","brush","end"),u=6;function o(n){var e=n.property("__brush",l).selectAll(".overlay").data([Wu("overlay")]);e.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",Xu.overlay).merge(e).each(function(){var t=Ju(this).extent;Mn(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])}),n.selectAll(".selection").data([Wu("selection")]).enter().append("rect").attr("class","selection").attr("cursor",Xu.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=n.selectAll(".handle").data(t.handles,function(t){return t.type});r.exit().remove(),r.enter().append("rect").attr("class",function(t){return"handle handle--"+t.type}).attr("cursor",function(t){return Xu[t.type]}),n.each(a).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",s)}function a(){var t=Mn(this),n=Ju(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",function(t){return"e"===t.type[t.type.length-1]?n[1][0]-u/2:n[0][0]-u/2}).attr("y",function(t){return"s"===t.type[0]?n[1][1]-u/2:n[0][1]-u/2}).attr("width",function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+u:u}).attr("height",function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+u:u})):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function c(t,n){return t.__brush.emitter||new f(t,n)}function f(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function s(){if(ln.touches){if(ln.changedTouches.length<ln.touches.length)return qu()}else if(n)return;if(r.apply(this,arguments)){var e,i,u,o,f,s,l,h,d,p,v,g,y,b=this,_=ln.target.__data__.type,m="selection"===(ln.metaKey?_="overlay":_)?Uu:ln.altKey?Fu:Yu,x=t===Iu?null:Vu[_],w=t===Bu?null:$u[_],M=Ju(b),A=M.extent,N=M.selection,k=A[0][0],T=A[0][1],S=A[1][0],E=A[1][1],C=x&&w&&ln.shiftKey,P=Cn(b),z=P,R=c(b,arguments).beforestart();"overlay"===_?M.selection=N=[[e=t===Iu?k:P[0],u=t===Bu?T:P[1]],[f=t===Iu?S:e,l=t===Bu?E:u]]:(e=N[0][0],u=N[0][1],f=N[1][0],l=N[1][1]),i=e,o=u,s=f,h=l;var L=Mn(b).attr("pointer-events","none"),D=L.selectAll(".overlay").attr("cursor",Xu[_]);if(ln.touches)L.on("touchmove.brush",U,!0).on("touchend.brush touchcancel.brush",Y,!0);else{var q=Mn(ln.view).on("keydown.brush",function(){switch(ln.keyCode){case 16:C=x&&w;break;case 18:m===Yu&&(x&&(f=s-d*x,e=i+d*x),w&&(l=h-p*w,u=o+p*w),m=Fu,O());break;case 32:m!==Yu&&m!==Fu||(x<0?f=s-d:x>0&&(e=i-d),w<0?l=h-p:w>0&&(u=o-p),m=Ou,D.attr("cursor",Xu.selection),O());break;default:return}qu()},!0).on("keyup.brush",function(){switch(ln.keyCode){case 16:C&&(g=y=C=!1,O());break;case 18:m===Fu&&(x<0?f=s:x>0&&(e=i),w<0?l=h:w>0&&(u=o),m=Yu,O());break;case 32:m===Ou&&(ln.altKey?(x&&(f=s-d*x,e=i+d*x),w&&(l=h-p*w,u=o+p*w),m=Fu):(x<0?f=s:x>0&&(e=i),w<0?l=h:w>0&&(u=o),m=Yu),D.attr("cursor",Xu[_]),O());break;default:return}qu()},!0).on("mousemove.brush",U,!0).on("mouseup.brush",Y,!0);qn(ln.view)}Du(),xi(b),a.call(b),R.start()}function U(){var t=Cn(b);!C||g||y||(Math.abs(t[0]-z[0])>Math.abs(t[1]-z[1])?y=!0:g=!0),z=t,v=!0,qu(),O()}function O(){var t;switch(d=z[0]-P[0],p=z[1]-P[1],m){case Ou:case Uu:x&&(d=Math.max(k-e,Math.min(S-f,d)),i=e+d,s=f+d),w&&(p=Math.max(T-u,Math.min(E-l,p)),o=u+p,h=l+p);break;case Yu:x<0?(d=Math.max(k-e,Math.min(S-e,d)),i=e+d,s=f):x>0&&(d=Math.max(k-f,Math.min(S-f,d)),i=e,s=f+d),w<0?(p=Math.max(T-u,Math.min(E-u,p)),o=u+p,h=l):w>0&&(p=Math.max(T-l,Math.min(E-l,p)),o=u,h=l+p);break;case Fu:x&&(i=Math.max(k,Math.min(S,e-d*x)),s=Math.max(k,Math.min(S,f+d*x))),w&&(o=Math.max(T,Math.min(E,u-p*w)),h=Math.max(T,Math.min(E,l+p*w)))}s<i&&(x*=-1,t=e,e=f,f=t,t=i,i=s,s=t,_ in Hu&&D.attr("cursor",Xu[_=Hu[_]])),h<o&&(w*=-1,t=u,u=l,l=t,t=o,o=h,h=t,_ in Gu&&D.attr("cursor",Xu[_=Gu[_]])),M.selection&&(N=M.selection),g&&(i=N[0][0],s=N[1][0]),y&&(o=N[0][1],h=N[1][1]),N[0][0]===i&&N[0][1]===o&&N[1][0]===s&&N[1][1]===h||(M.selection=[[i,o],[s,h]],a.call(b),R.brush())}function Y(){if(Du(),ln.touches){if(ln.touches.length)return;n&&clearTimeout(n),n=setTimeout(function(){n=null},500),L.on("touchmove.brush touchend.brush touchcancel.brush",null)}else Un(ln.view,v),q.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);L.attr("pointer-events","all"),D.attr("cursor",Xu.overlay),M.selection&&(N=M.selection),Ku(N)&&(M.selection=null,a.call(b)),R.end()}}function l(){var n=this.__brush||{selection:null};return n.extent=e.apply(this,arguments),n.dim=t,n}return o.move=function(n,e){n.selection?n.on("start.brush",function(){c(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){c(this,arguments).end()}).tween("brush",function(){var n=this,r=n.__brush,i=c(n,arguments),u=r.selection,o=t.input("function"==typeof e?e.apply(this,arguments):e,r.extent),f=gr(u,o);function s(t){r.selection=1===t&&Ku(o)?null:f(t),a.call(n),i.brush()}return u&&o?s:s(1)}):n.each(function(){var n=this,r=arguments,i=n.__brush,u=t.input("function"==typeof e?e.apply(n,r):e,i.extent),o=c(n,r).beforestart();xi(n),i.selection=null==u||Ku(u)?null:u,a.call(n),o.start().brush().end()})},f.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(n){yn(new Lu(o,n,t.output(this.state.selection)),i.apply,i,[n,this.that,this.args])}},o.extent=function(t){return arguments.length?(e="function"==typeof t?t:Ru([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),o):e},o.filter=function(t){return arguments.length?(r="function"==typeof t?t:Ru(!!t),o):r},o.handleSize=function(t){return arguments.length?(u=+t,o):u},o.on=function(){var t=i.on.apply(i,arguments);return t===i?o:t},o}var uo=Math.cos,oo=Math.sin,ao=Math.PI,co=ao/2,fo=2*ao,so=Math.max;function lo(t){return function(n,e){return t(n.source.value+n.target.value,e.source.value+e.target.value)}}var ho=function(){var t=0,n=null,e=null,r=null;function i(i){var u,o,a,c,f,s,l=i.length,h=[],d=w(l),p=[],v=[],g=v.groups=new Array(l),y=new Array(l*l);for(u=0,f=-1;++f<l;){for(o=0,s=-1;++s<l;)o+=i[f][s];h.push(o),p.push(w(l)),u+=o}for(n&&d.sort(function(t,e){return n(h[t],h[e])}),e&&p.forEach(function(t,n){t.sort(function(t,r){return e(i[n][t],i[n][r])})}),c=(u=so(0,fo-t*l)/u)?t:fo/l,o=0,f=-1;++f<l;){for(a=o,s=-1;++s<l;){var b=d[f],_=p[b][s],m=i[b][_],x=o,M=o+=m*u;y[_*l+b]={index:b,subindex:_,startAngle:x,endAngle:M,value:m}}g[b]={index:b,startAngle:a,endAngle:o,value:h[b]},o+=c}for(f=-1;++f<l;)for(s=f-1;++s<l;){var A=y[s*l+f],N=y[f*l+s];(A.value||N.value)&&v.push(A.value<N.value?{source:N,target:A}:{source:A,target:N})}return r?v.sort(r):v}return i.padAngle=function(n){return arguments.length?(t=so(0,n),i):t},i.sortGroups=function(t){return arguments.length?(n=t,i):n},i.sortSubgroups=function(t){return arguments.length?(e=t,i):e},i.sortChords=function(t){return arguments.length?(null==t?r=null:(r=lo(t))._=t,i):r&&r._},i},po=Array.prototype.slice,vo=function(t){return function(){return t}},go=Math.PI,yo=2*go,bo=yo-1e-6;function _o(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function mo(){return new _o}_o.prototype=mo.prototype={constructor:_o,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,u){this._+="C"+ +t+","+ +n+","+ +e+","+ +r+","+(this._x1=+i)+","+(this._y1=+u)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var u=this._x1,o=this._y1,a=e-t,c=r-n,f=u-t,s=o-n,l=f*f+s*s;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(l>1e-6)if(Math.abs(s*a-c*f)>1e-6&&i){var h=e-u,d=r-o,p=a*a+c*c,v=h*h+d*d,g=Math.sqrt(p),y=Math.sqrt(l),b=i*Math.tan((go-Math.acos((p+l-v)/(2*g*y)))/2),_=b/y,m=b/g;Math.abs(_-1)>1e-6&&(this._+="L"+(t+_*f)+","+(n+_*s)),this._+="A"+i+","+i+",0,0,"+ +(s*h>f*d)+","+(this._x1=t+m*a)+","+(this._y1=n+m*c)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,r,i,u){t=+t,n=+n;var o=(e=+e)*Math.cos(r),a=e*Math.sin(r),c=t+o,f=n+a,s=1^u,l=u?r-i:i-r;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+c+","+f:(Math.abs(this._x1-c)>1e-6||Math.abs(this._y1-f)>1e-6)&&(this._+="L"+c+","+f),e&&(l<0&&(l=l%yo+yo),l>bo?this._+="A"+e+","+e+",0,1,"+s+","+(t-o)+","+(n-a)+"A"+e+","+e+",0,1,"+s+","+(this._x1=c)+","+(this._y1=f):l>1e-6&&(this._+="A"+e+","+e+",0,"+ +(l>=go)+","+s+","+(this._x1=t+e*Math.cos(i))+","+(this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +r+"h"+-e+"Z"},toString:function(){return this._}};var xo=mo;function wo(t){return t.source}function Mo(t){return t.target}function Ao(t){return t.radius}function No(t){return t.startAngle}function ko(t){return t.endAngle}var To=function(){var t=wo,n=Mo,e=Ao,r=No,i=ko,u=null;function o(){var o,a=po.call(arguments),c=t.apply(this,a),f=n.apply(this,a),s=+e.apply(this,(a[0]=c,a)),l=r.apply(this,a)-co,h=i.apply(this,a)-co,d=s*uo(l),p=s*oo(l),v=+e.apply(this,(a[0]=f,a)),g=r.apply(this,a)-co,y=i.apply(this,a)-co;if(u||(u=o=xo()),u.moveTo(d,p),u.arc(0,0,s,l,h),l===g&&h===y||(u.quadraticCurveTo(0,0,v*uo(g),v*oo(g)),u.arc(0,0,v,g,y)),u.quadraticCurveTo(0,0,d,p),u.closePath(),o)return u=null,o+""||null}return o.radius=function(t){return arguments.length?(e="function"==typeof t?t:vo(+t),o):e},o.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:vo(+t),o):r},o.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:vo(+t),o):i},o.source=function(n){return arguments.length?(t=n,o):t},o.target=function(t){return arguments.length?(n=t,o):n},o.context=function(t){return arguments.length?(u=null==t?null:t,o):u},o};function So(){}function Eo(t,n){var e=new So;if(t instanceof So)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,u=t.length;if(null==n)for(;++i<u;)e.set(i,t[i]);else for(;++i<u;)e.set(n(r=t[i],i,t),r)}else if(t)for(var o in t)e.set(o,t[o]);return e}So.prototype=Eo.prototype={constructor:So,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var Co=Eo,Po=function(){var t,n,e,r=[],i=[];function u(e,i,o,a){if(i>=r.length)return null!=t&&e.sort(t),null!=n?n(e):e;for(var c,f,s,l=-1,h=e.length,d=r[i++],p=Co(),v=o();++l<h;)(s=p.get(c=d(f=e[l])+""))?s.push(f):p.set(c,[f]);return p.each(function(t,n){a(v,n,u(t,i,o,a))}),v}return e={object:function(t){return u(t,0,zo,Ro)},map:function(t){return u(t,0,Lo,Do)},entries:function(t){return function t(e,u){if(++u>r.length)return e;var o,a=i[u-1];return null!=n&&u>=r.length?o=e.entries():(o=[],e.each(function(n,e){o.push({key:e,values:t(n,u)})})),null!=a?o.sort(function(t,n){return a(t.key,n.key)}):o}(u(t,0,Lo,Do),0)},key:function(t){return r.push(t),e},sortKeys:function(t){return i[r.length-1]=t,e},sortValues:function(n){return t=n,e},rollup:function(t){return n=t,e}}};function zo(){return{}}function Ro(t,n,e){t[n]=e}function Lo(){return Co()}function Do(t,n,e){t.set(n,e)}function qo(){}var Uo=Co.prototype;function Oo(t,n){var e=new qo;if(t instanceof qo)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}qo.prototype=Oo.prototype={constructor:qo,has:Uo.has,add:function(t){return this["$"+(t+="")]=t,this},remove:Uo.remove,clear:Uo.clear,values:Uo.keys,size:Uo.size,empty:Uo.empty,each:Uo.each};var Yo=Oo,Fo=function(t){var n=[];for(var e in t)n.push(e);return n},Bo=function(t){var n=[];for(var e in t)n.push(t[e]);return n},Io=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n},jo=Array.prototype.slice,Xo=function(t,n){return t-n},Ho=function(t){for(var n=0,e=t.length,r=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];++n<e;)r+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return r},Go=function(t){return function(){return t}},Vo=function(t,n){for(var e,r=-1,i=n.length;++r<i;)if(e=$o(t,n[r]))return e;return 0};function $o(t,n){for(var e=n[0],r=n[1],i=-1,u=0,o=t.length,a=o-1;u<o;a=u++){var c=t[u],f=c[0],s=c[1],l=t[a],h=l[0],d=l[1];if(Wo(c,l,n))return 0;s>r!=d>r&&e<(h-f)*(r-s)/(d-s)+f&&(i=-i)}return i}function Wo(t,n,e){var r,i,u,o;return function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])==(e[0]-t[0])*(n[1]-t[1])}(t,n,e)&&(i=t[r=+(t[0]===n[0])],u=e[r],o=n[r],i<=u&&u<=o||o<=u&&u<=i)}var Zo=function(){},Qo=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],Jo=function(){var t=1,n=1,e=E,r=a;function i(t){var n=e(t);if(Array.isArray(n))n=n.slice().sort(Xo);else{var r=g(t),i=r[0],o=r[1];n=S(i,o,n),n=w(Math.floor(i/n)*n,Math.floor(o/n)*n,n)}return n.map(function(n){return u(t,n)})}function u(e,i){var u=[],a=[];return function(e,r,i){var u,a,c,f,s,l,h=new Array,d=new Array;u=a=-1,f=e[0]>=r,Qo[f<<1].forEach(p);for(;++u<t-1;)c=f,f=e[u+1]>=r,Qo[c|f<<1].forEach(p);Qo[f<<0].forEach(p);for(;++a<n-1;){for(u=-1,f=e[a*t+t]>=r,s=e[a*t]>=r,Qo[f<<1|s<<2].forEach(p);++u<t-1;)c=f,f=e[a*t+t+u+1]>=r,l=s,s=e[a*t+u+1]>=r,Qo[c|f<<1|s<<2|l<<3].forEach(p);Qo[f|s<<3].forEach(p)}u=-1,s=e[a*t]>=r,Qo[s<<2].forEach(p);for(;++u<t-1;)l=s,s=e[a*t+u+1]>=r,Qo[s<<2|l<<3].forEach(p);function p(t){var n,e,r=[t[0][0]+u,t[0][1]+a],c=[t[1][0]+u,t[1][1]+a],f=o(r),s=o(c);(n=d[f])?(e=h[s])?(delete d[n.end],delete h[e.start],n===e?(n.ring.push(c),i(n.ring)):h[n.start]=d[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[n.end],n.ring.push(c),d[n.end=s]=n):(n=h[s])?(e=d[f])?(delete h[n.start],delete d[e.end],n===e?(n.ring.push(c),i(n.ring)):h[e.start]=d[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete h[n.start],n.ring.unshift(r),h[n.start=f]=n):h[f]=d[s]={start:f,end:s,ring:[r,c]}}Qo[s<<3].forEach(p)}(e,i,function(t){r(t,e,i),Ho(t)>0?u.push([t]):a.push(t)}),a.forEach(function(t){for(var n,e=0,r=u.length;e<r;++e)if(-1!==Vo((n=u[e])[0],t))return void n.push(t)}),{type:"MultiPolygon",value:i,coordinates:u}}function o(n){return 2*n[0]+n[1]*(t+1)*4}function a(e,r,i){e.forEach(function(e){var u,o=e[0],a=e[1],c=0|o,f=0|a,s=r[f*t+c];o>0&&o<t&&c===o&&(u=r[f*t+c-1],e[0]=o+(i-u)/(s-u)-.5),a>0&&a<n&&f===a&&(u=r[(f-1)*t+c],e[1]=a+(i-u)/(s-u)-.5)})}return i.contour=u,i.size=function(e){if(!arguments.length)return[t,n];var r=Math.ceil(e[0]),u=Math.ceil(e[1]);if(!(r>0&&u>0))throw new Error("invalid size");return t=r,n=u,i},i.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?Go(jo.call(t)):Go(t),i):e},i.smooth=function(t){return arguments.length?(r=t?a:Zo,i):r===a},i};function Ko(t,n,e){for(var r=t.width,i=t.height,u=1+(e<<1),o=0;o<i;++o)for(var a=0,c=0;a<r+e;++a)a<r&&(c+=t.data[a+o*r]),a>=e&&(a>=u&&(c-=t.data[a-u+o*r]),n.data[a-e+o*r]=c/Math.min(a+1,r-1+u-a,u))}function ta(t,n,e){for(var r=t.width,i=t.height,u=1+(e<<1),o=0;o<r;++o)for(var a=0,c=0;a<i+e;++a)a<i&&(c+=t.data[o+a*r]),a>=e&&(a>=u&&(c-=t.data[o+(a-u)*r]),n.data[o+(a-e)*r]=c/Math.min(a+1,i-1+u-a,u))}function na(t){return t[0]}function ea(t){return t[1]}function ra(){return 1}var ia=function(){var t=na,n=ea,e=ra,r=960,i=500,u=20,o=2,a=3*u,c=r+2*a>>o,f=i+2*a>>o,s=Go(20);function l(r){var i=new Float32Array(c*f),l=new Float32Array(c*f);r.forEach(function(r,u,s){var l=+t(r,u,s)+a>>o,h=+n(r,u,s)+a>>o,d=+e(r,u,s);l>=0&&l<c&&h>=0&&h<f&&(i[l+h*c]+=d)}),Ko({width:c,height:f,data:i},{width:c,height:f,data:l},u>>o),ta({width:c,height:f,data:l},{width:c,height:f,data:i},u>>o),Ko({width:c,height:f,data:i},{width:c,height:f,data:l},u>>o),ta({width:c,height:f,data:l},{width:c,height:f,data:i},u>>o),Ko({width:c,height:f,data:i},{width:c,height:f,data:l},u>>o),ta({width:c,height:f,data:l},{width:c,height:f,data:i},u>>o);var d=s(i);if(!Array.isArray(d)){var p=L(i);d=S(0,p,d),(d=w(0,Math.floor(p/d)*d,d)).shift()}return Jo().thresholds(d).size([c,f])(i).map(h)}function h(t){return t.value*=Math.pow(2,-2*o),t.coordinates.forEach(d),t}function d(t){t.forEach(p)}function p(t){t.forEach(v)}function v(t){t[0]=t[0]*Math.pow(2,o)-a,t[1]=t[1]*Math.pow(2,o)-a}function g(){return c=r+2*(a=3*u)>>o,f=i+2*a>>o,l}return l.x=function(n){return arguments.length?(t="function"==typeof n?n:Go(+n),l):t},l.y=function(t){return arguments.length?(n="function"==typeof t?t:Go(+t),l):n},l.weight=function(t){return arguments.length?(e="function"==typeof t?t:Go(+t),l):e},l.size=function(t){if(!arguments.length)return[r,i];var n=Math.ceil(t[0]),e=Math.ceil(t[1]);if(!(n>=0||n>=0))throw new Error("invalid size");return r=n,i=e,g()},l.cellSize=function(t){if(!arguments.length)return 1<<o;if(!((t=+t)>=1))throw new Error("invalid cell size");return o=Math.floor(Math.log(t)/Math.LN2),g()},l.thresholds=function(t){return arguments.length?(s="function"==typeof t?t:Array.isArray(t)?Go(jo.call(t)):Go(t),l):s},l.bandwidth=function(t){if(!arguments.length)return Math.sqrt(u*(u+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return u=Math.round((Math.sqrt(4*t*t+1)-1)/2),g()},l},ua={},oa={},aa=34,ca=10,fa=13;function sa(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}function la(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}function ha(t,n){var e=t+"",r=e.length;return r<n?new Array(n-r+1).join(0)+e:e}function da(t){var n,e=t.getUTCHours(),r=t.getUTCMinutes(),i=t.getUTCSeconds(),u=t.getUTCMilliseconds();return isNaN(t)?"Invalid Date":((n=t.getUTCFullYear())<0?"-"+ha(-n,6):n>9999?"+"+ha(n,6):ha(n,4))+"-"+ha(t.getUTCMonth()+1,2)+"-"+ha(t.getUTCDate(),2)+(u?"T"+ha(e,2)+":"+ha(r,2)+":"+ha(i,2)+"."+ha(u,3)+"Z":i?"T"+ha(e,2)+":"+ha(r,2)+":"+ha(i,2)+"Z":r||e?"T"+ha(e,2)+":"+ha(r,2)+"Z":"")}var pa=function(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function r(t,n){var r,i=[],u=t.length,o=0,a=0,c=u<=0,f=!1;function s(){if(c)return oa;if(f)return f=!1,ua;var n,r,i=o;if(t.charCodeAt(i)===aa){for(;o++<u&&t.charCodeAt(o)!==aa||t.charCodeAt(++o)===aa;);return(n=o)>=u?c=!0:(r=t.charCodeAt(o++))===ca?f=!0:r===fa&&(f=!0,t.charCodeAt(o)===ca&&++o),t.slice(i+1,n-1).replace(/""/g,'"')}for(;o<u;){if((r=t.charCodeAt(n=o++))===ca)f=!0;else if(r===fa)f=!0,t.charCodeAt(o)===ca&&++o;else if(r!==e)continue;return t.slice(i,n)}return c=!0,t.slice(i,u)}for(t.charCodeAt(u-1)===ca&&--u,t.charCodeAt(u-1)===fa&&--u;(r=s())!==oa;){for(var l=[];r!==ua&&r!==oa;)l.push(r),r=s();n&&null==(l=n(l,a++))||i.push(l)}return i}function i(n,e){return n.map(function(n){return e.map(function(t){return o(n[t])}).join(t)})}function u(n){return n.map(o).join(t)}function o(t){return null==t?"":t instanceof Date?da(t):n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,i,u=r(t,function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=sa(t);return function(r,i){return n(e(r),i,t)}}(t,n):sa(t)});return u.columns=i||[],u},parseRows:r,format:function(n,e){return null==e&&(e=la(n)),[e.map(o).join(t)].concat(i(n,e)).join("\n")},formatBody:function(t,n){return null==n&&(n=la(t)),i(t,n).join("\n")},formatRows:function(t){return t.map(u).join("\n")}}},va=pa(","),ga=va.parse,ya=va.parseRows,ba=va.format,_a=va.formatBody,ma=va.formatRows,xa=pa("\t"),wa=xa.parse,Ma=xa.parseRows,Aa=xa.format,Na=xa.formatBody,ka=xa.formatRows;function Ta(t){for(var n in t){var e,r=t[n].trim();if(r)if("true"===r)r=!0;else if("false"===r)r=!1;else if("NaN"===r)r=NaN;else if(isNaN(e=+r)){if(!/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/.test(r))continue;r=new Date(r)}else r=e;else r=null;t[n]=r}return t}function Sa(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}var Ea=function(t,n){return fetch(t,n).then(Sa)};function Ca(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}var Pa=function(t,n){return fetch(t,n).then(Ca)};function za(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var Ra=function(t,n){return fetch(t,n).then(za)};function La(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),Ra(n,e).then(function(n){return t(n,r)})}}function Da(t,n,e,r){3===arguments.length&&"function"==typeof e&&(r=e,e=void 0);var i=pa(t);return Ra(n,e).then(function(t){return i.parse(t,r)})}var qa=La(ga),Ua=La(wa),Oa=function(t,n){return new Promise(function(e,r){var i=new Image;for(var u in n)i[u]=n[u];i.onerror=r,i.onload=function(){e(i)},i.src=t})};function Ya(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}var Fa=function(t,n){return fetch(t,n).then(Ya)};function Ba(t){return function(n,e){return Ra(n,e).then(function(n){return(new DOMParser).parseFromString(n,t)})}}var Ia=Ba("application/xml"),ja=Ba("text/html"),Xa=Ba("image/svg+xml"),Ha=function(t,n){var e;function r(){var r,i,u=e.length,o=0,a=0;for(r=0;r<u;++r)o+=(i=e[r]).x,a+=i.y;for(o=o/u-t,a=a/u-n,r=0;r<u;++r)(i=e[r]).x-=o,i.y-=a}return null==t&&(t=0),null==n&&(n=0),r.initialize=function(t){e=t},r.x=function(n){return arguments.length?(t=+n,r):t},r.y=function(t){return arguments.length?(n=+t,r):n},r},Ga=function(t){return function(){return t}},Va=function(){return 1e-6*(Math.random()-.5)};function $a(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,u,o,a,c,f,s,l,h,d=t._root,p={data:r},v=t._x0,g=t._y0,y=t._x1,b=t._y1;if(!d)return t._root=p,t;for(;d.length;)if((f=n>=(u=(v+y)/2))?v=u:y=u,(s=e>=(o=(g+b)/2))?g=o:b=o,i=d,!(d=d[l=s<<1|f]))return i[l]=p,t;if(a=+t._x.call(null,d.data),c=+t._y.call(null,d.data),n===a&&e===c)return p.next=d,i?i[l]=p:t._root=p,t;do{i=i?i[l]=new Array(4):t._root=new Array(4),(f=n>=(u=(v+y)/2))?v=u:y=u,(s=e>=(o=(g+b)/2))?g=o:b=o}while((l=s<<1|f)==(h=(c>=o)<<1|a>=u));return i[h]=d,i[l]=p,t}var Wa=function(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i};function Za(t){return t[0]}function Qa(t){return t[1]}function Ja(t,n,e){var r=new Ka(null==n?Za:n,null==e?Qa:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function Ka(t,n,e,r,i,u){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=u,this._root=void 0}function tc(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}var nc=Ja.prototype=Ka.prototype;function ec(t){return t.x+t.vx}function rc(t){return t.y+t.vy}nc.copy=function(){var t,n,e=new Ka(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=tc(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=tc(n));return e},nc.add=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return $a(this.cover(n,e),n,e,t)},nc.addAll=function(t){var n,e,r,i,u=t.length,o=new Array(u),a=new Array(u),c=1/0,f=1/0,s=-1/0,l=-1/0;for(e=0;e<u;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(o[e]=r,a[e]=i,r<c&&(c=r),r>s&&(s=r),i<f&&(f=i),i>l&&(l=i));if(c>s||f>l)return this;for(this.cover(c,f).cover(s,l),e=0;e<u;++e)$a(this,o[e],a[e],t[e]);return this},nc.cover=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,u=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,u=(r=Math.floor(n))+1;else{for(var o,a,c=i-e,f=this._root;e>t||t>=i||r>n||n>=u;)switch(a=(n<r)<<1|t<e,(o=new Array(4))[a]=f,f=o,c*=2,a){case 0:i=e+c,u=r+c;break;case 1:e=i-c,u=r+c;break;case 2:i=e+c,r=u-c;break;case 3:e=i-c,r=u-c}this._root&&this._root.length&&(this._root=f)}return this._x0=e,this._y0=r,this._x1=i,this._y1=u,this},nc.data=function(){var t=[];return this.visit(function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)}),t},nc.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},nc.find=function(t,n,e){var r,i,u,o,a,c,f,s=this._x0,l=this._y0,h=this._x1,d=this._y1,p=[],v=this._root;for(v&&p.push(new Wa(v,s,l,h,d)),null==e?e=1/0:(s=t-e,l=n-e,h=t+e,d=n+e,e*=e);c=p.pop();)if(!(!(v=c.node)||(i=c.x0)>h||(u=c.y0)>d||(o=c.x1)<s||(a=c.y1)<l))if(v.length){var g=(i+o)/2,y=(u+a)/2;p.push(new Wa(v[3],g,y,o,a),new Wa(v[2],i,y,g,a),new Wa(v[1],g,u,o,y),new Wa(v[0],i,u,g,y)),(f=(n>=y)<<1|t>=g)&&(c=p[p.length-1],p[p.length-1]=p[p.length-1-f],p[p.length-1-f]=c)}else{var b=t-+this._x.call(null,v.data),_=n-+this._y.call(null,v.data),m=b*b+_*_;if(m<e){var x=Math.sqrt(e=m);s=t-x,l=n-x,h=t+x,d=n+x,r=v.data}}return r},nc.remove=function(t){if(isNaN(u=+this._x.call(null,t))||isNaN(o=+this._y.call(null,t)))return this;var n,e,r,i,u,o,a,c,f,s,l,h,d=this._root,p=this._x0,v=this._y0,g=this._x1,y=this._y1;if(!d)return this;if(d.length)for(;;){if((f=u>=(a=(p+g)/2))?p=a:g=a,(s=o>=(c=(v+y)/2))?v=c:y=c,n=d,!(d=d[l=s<<1|f]))return this;if(!d.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(e=n,h=l)}for(;d.data!==t;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)},nc.removeAll=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},nc.root=function(){return this._root},nc.size=function(){var t=0;return this.visit(function(n){if(!n.length)do{++t}while(n=n.next)}),t},nc.visit=function(t){var n,e,r,i,u,o,a=[],c=this._root;for(c&&a.push(new Wa(c,this._x0,this._y0,this._x1,this._y1));n=a.pop();)if(!t(c=n.node,r=n.x0,i=n.y0,u=n.x1,o=n.y1)&&c.length){var f=(r+u)/2,s=(i+o)/2;(e=c[3])&&a.push(new Wa(e,f,s,u,o)),(e=c[2])&&a.push(new Wa(e,r,s,f,o)),(e=c[1])&&a.push(new Wa(e,f,i,u,s)),(e=c[0])&&a.push(new Wa(e,r,i,f,s))}return this},nc.visitAfter=function(t){var n,e=[],r=[];for(this._root&&e.push(new Wa(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var u,o=n.x0,a=n.y0,c=n.x1,f=n.y1,s=(o+c)/2,l=(a+f)/2;(u=i[0])&&e.push(new Wa(u,o,a,s,l)),(u=i[1])&&e.push(new Wa(u,s,a,c,l)),(u=i[2])&&e.push(new Wa(u,o,l,s,f)),(u=i[3])&&e.push(new Wa(u,s,l,c,f))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},nc.x=function(t){return arguments.length?(this._x=t,this):this._x},nc.y=function(t){return arguments.length?(this._y=t,this):this._y};var ic=function(t){var n,e,r=1,i=1;function u(){for(var t,u,a,c,f,s,l,h=n.length,d=0;d<i;++d)for(u=Ja(n,ec,rc).visitAfter(o),t=0;t<h;++t)a=n[t],s=e[a.index],l=s*s,c=a.x+a.vx,f=a.y+a.vy,u.visit(p);function p(t,n,e,i,u){var o=t.data,h=t.r,d=s+h;if(!o)return n>c+d||i<c-d||e>f+d||u<f-d;if(o.index>a.index){var p=c-o.x-o.vx,v=f-o.y-o.vy,g=p*p+v*v;g<d*d&&(0===p&&(g+=(p=Va())*p),0===v&&(g+=(v=Va())*v),g=(d-(g=Math.sqrt(g)))/g*r,a.vx+=(p*=g)*(d=(h*=h)/(l+h)),a.vy+=(v*=g)*d,o.vx-=p*(d=1-d),o.vy-=v*d)}}}function o(t){if(t.data)return t.r=e[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function a(){if(n){var r,i,u=n.length;for(e=new Array(u),r=0;r<u;++r)i=n[r],e[i.index]=+t(i,r,n)}}return"function"!=typeof t&&(t=Ga(null==t?1:+t)),u.initialize=function(t){n=t,a()},u.iterations=function(t){return arguments.length?(i=+t,u):i},u.strength=function(t){return arguments.length?(r=+t,u):r},u.radius=function(n){return arguments.length?(t="function"==typeof n?n:Ga(+n),a(),u):t},u};function uc(t){return t.index}function oc(t,n){var e=t.get(n);if(!e)throw new Error("missing: "+n);return e}var ac=function(t){var n,e,r,i,u,o=uc,a=function(t){return 1/Math.min(i[t.source.index],i[t.target.index])},c=Ga(30),f=1;function s(r){for(var i=0,o=t.length;i<f;++i)for(var a,c,s,l,h,d,p,v=0;v<o;++v)c=(a=t[v]).source,l=(s=a.target).x+s.vx-c.x-c.vx||Va(),h=s.y+s.vy-c.y-c.vy||Va(),l*=d=((d=Math.sqrt(l*l+h*h))-e[v])/d*r*n[v],h*=d,s.vx-=l*(p=u[v]),s.vy-=h*p,c.vx+=l*(p=1-p),c.vy+=h*p}function l(){if(r){var a,c,f=r.length,s=t.length,l=Co(r,o);for(a=0,i=new Array(f);a<s;++a)(c=t[a]).index=a,"object"!=typeof c.source&&(c.source=oc(l,c.source)),"object"!=typeof c.target&&(c.target=oc(l,c.target)),i[c.source.index]=(i[c.source.index]||0)+1,i[c.target.index]=(i[c.target.index]||0)+1;for(a=0,u=new Array(s);a<s;++a)c=t[a],u[a]=i[c.source.index]/(i[c.source.index]+i[c.target.index]);n=new Array(s),h(),e=new Array(s),d()}}function h(){if(r)for(var e=0,i=t.length;e<i;++e)n[e]=+a(t[e],e,t)}function d(){if(r)for(var n=0,i=t.length;n<i;++n)e[n]=+c(t[n],n,t)}return null==t&&(t=[]),s.initialize=function(t){r=t,l()},s.links=function(n){return arguments.length?(t=n,l(),s):t},s.id=function(t){return arguments.length?(o=t,s):o},s.iterations=function(t){return arguments.length?(f=+t,s):f},s.strength=function(t){return arguments.length?(a="function"==typeof t?t:Ga(+t),h(),s):a},s.distance=function(t){return arguments.length?(c="function"==typeof t?t:Ga(+t),d(),s):c},s};function cc(t){return t.x}function fc(t){return t.y}var sc=10,lc=Math.PI*(3-Math.sqrt(5)),hc=function(t){var n,e=1,r=.001,i=1-Math.pow(r,1/300),u=0,o=.6,a=Co(),c=ni(s),f=dt("tick","end");function s(){l(),f.call("tick",n),e<r&&(c.stop(),f.call("end",n))}function l(r){var c,f,s=t.length;void 0===r&&(r=1);for(var l=0;l<r;++l)for(e+=(u-e)*i,a.each(function(t){t(e)}),c=0;c<s;++c)null==(f=t[c]).fx?f.x+=f.vx*=o:(f.x=f.fx,f.vx=0),null==f.fy?f.y+=f.vy*=o:(f.y=f.fy,f.vy=0);return n}function h(){for(var n,e=0,r=t.length;e<r;++e){if((n=t[e]).index=e,null!=n.fx&&(n.x=n.fx),null!=n.fy&&(n.y=n.fy),isNaN(n.x)||isNaN(n.y)){var i=sc*Math.sqrt(e),u=e*lc;n.x=i*Math.cos(u),n.y=i*Math.sin(u)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function d(n){return n.initialize&&n.initialize(t),n}return null==t&&(t=[]),h(),n={tick:l,restart:function(){return c.restart(s),n},stop:function(){return c.stop(),n},nodes:function(e){return arguments.length?(t=e,h(),a.each(d),n):t},alpha:function(t){return arguments.length?(e=+t,n):e},alphaMin:function(t){return arguments.length?(r=+t,n):r},alphaDecay:function(t){return arguments.length?(i=+t,n):+i},alphaTarget:function(t){return arguments.length?(u=+t,n):u},velocityDecay:function(t){return arguments.length?(o=1-t,n):1-o},force:function(t,e){return arguments.length>1?(null==e?a.remove(t):a.set(t,d(e)),n):a.get(t)},find:function(n,e,r){var i,u,o,a,c,f=0,s=t.length;for(null==r?r=1/0:r*=r,f=0;f<s;++f)(o=(i=n-(a=t[f]).x)*i+(u=e-a.y)*u)<r&&(c=a,r=o);return c},on:function(t,e){return arguments.length>1?(f.on(t,e),n):f.on(t)}}},dc=function(){var t,n,e,r,i=Ga(-30),u=1,o=1/0,a=.81;function c(r){var i,u=t.length,o=Ja(t,cc,fc).visitAfter(s);for(e=r,i=0;i<u;++i)n=t[i],o.visit(l)}function f(){if(t){var n,e,u=t.length;for(r=new Array(u),n=0;n<u;++n)e=t[n],r[e.index]=+i(e,n,t)}}function s(t){var n,e,i,u,o,a=0,c=0;if(t.length){for(i=u=o=0;o<4;++o)(n=t[o])&&(e=Math.abs(n.value))&&(a+=n.value,c+=e,i+=e*n.x,u+=e*n.y);t.x=i/c,t.y=u/c}else{(n=t).x=n.data.x,n.y=n.data.y;do{a+=r[n.data.index]}while(n=n.next)}t.value=a}function l(t,i,c,f){if(!t.value)return!0;var s=t.x-n.x,l=t.y-n.y,h=f-i,d=s*s+l*l;if(h*h/a<d)return d<o&&(0===s&&(d+=(s=Va())*s),0===l&&(d+=(l=Va())*l),d<u&&(d=Math.sqrt(u*d)),n.vx+=s*t.value*e/d,n.vy+=l*t.value*e/d),!0;if(!(t.length||d>=o)){(t.data!==n||t.next)&&(0===s&&(d+=(s=Va())*s),0===l&&(d+=(l=Va())*l),d<u&&(d=Math.sqrt(u*d)));do{t.data!==n&&(h=r[t.data.index]*e/d,n.vx+=s*h,n.vy+=l*h)}while(t=t.next)}}return c.initialize=function(n){t=n,f()},c.strength=function(t){return arguments.length?(i="function"==typeof t?t:Ga(+t),f(),c):i},c.distanceMin=function(t){return arguments.length?(u=t*t,c):Math.sqrt(u)},c.distanceMax=function(t){return arguments.length?(o=t*t,c):Math.sqrt(o)},c.theta=function(t){return arguments.length?(a=t*t,c):Math.sqrt(a)},c},pc=function(t,n,e){var r,i,u,o=Ga(.1);function a(t){for(var o=0,a=r.length;o<a;++o){var c=r[o],f=c.x-n||1e-6,s=c.y-e||1e-6,l=Math.sqrt(f*f+s*s),h=(u[o]-l)*i[o]*t/l;c.vx+=f*h,c.vy+=s*h}}function c(){if(r){var n,e=r.length;for(i=new Array(e),u=new Array(e),n=0;n<e;++n)u[n]=+t(r[n],n,r),i[n]=isNaN(u[n])?0:+o(r[n],n,r)}}return"function"!=typeof t&&(t=Ga(+t)),null==n&&(n=0),null==e&&(e=0),a.initialize=function(t){r=t,c()},a.strength=function(t){return arguments.length?(o="function"==typeof t?t:Ga(+t),c(),a):o},a.radius=function(n){return arguments.length?(t="function"==typeof n?n:Ga(+n),c(),a):t},a.x=function(t){return arguments.length?(n=+t,a):n},a.y=function(t){return arguments.length?(e=+t,a):e},a},vc=function(t){var n,e,r,i=Ga(.1);function u(t){for(var i,u=0,o=n.length;u<o;++u)(i=n[u]).vx+=(r[u]-i.x)*e[u]*t}function o(){if(n){var u,o=n.length;for(e=new Array(o),r=new Array(o),u=0;u<o;++u)e[u]=isNaN(r[u]=+t(n[u],u,n))?0:+i(n[u],u,n)}}return"function"!=typeof t&&(t=Ga(null==t?0:+t)),u.initialize=function(t){n=t,o()},u.strength=function(t){return arguments.length?(i="function"==typeof t?t:Ga(+t),o(),u):i},u.x=function(n){return arguments.length?(t="function"==typeof n?n:Ga(+n),o(),u):t},u},gc=function(t){var n,e,r,i=Ga(.1);function u(t){for(var i,u=0,o=n.length;u<o;++u)(i=n[u]).vy+=(r[u]-i.y)*e[u]*t}function o(){if(n){var u,o=n.length;for(e=new Array(o),r=new Array(o),u=0;u<o;++u)e[u]=isNaN(r[u]=+t(n[u],u,n))?0:+i(n[u],u,n)}}return"function"!=typeof t&&(t=Ga(null==t?0:+t)),u.initialize=function(t){n=t,o()},u.strength=function(t){return arguments.length?(i="function"==typeof t?t:Ga(+t),o(),u):i},u.y=function(n){return arguments.length?(t="function"==typeof n?n:Ga(+n),o(),u):t},u},yc=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},bc=function(t){return(t=yc(Math.abs(t)))?t[1]:NaN},_c=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function mc(t){return new xc(t)}function xc(t){if(!(n=_c.exec(t)))throw new Error("invalid format: "+t);var n;this.fill=n[1]||" ",this.align=n[2]||">",this.sign=n[3]||"-",this.symbol=n[4]||"",this.zero=!!n[5],this.width=n[6]&&+n[6],this.comma=!!n[7],this.precision=n[8]&&+n[8].slice(1),this.trim=!!n[9],this.type=n[10]||""}mc.prototype=xc.prototype,xc.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var wc,Mc,Ac,Nc,kc=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(i>0){if(!+t[r])break t;i=0}}return i>0?t.slice(0,i)+t.slice(n+1):t},Tc=function(t,n){var e=yc(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},Sc={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Tc(100*t,n)},r:Tc,s:function(t,n){var e=yc(t,n);if(!e)return t+"";var r=e[0],i=e[1],u=i-(wc=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,o=r.length;return u===o?r:u>o?r+new Array(u-o+1).join("0"):u>0?r.slice(0,u)+"."+r.slice(u):"0."+new Array(1-u).join("0")+yc(t,Math.max(0,n+u-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},Ec=function(t){return t},Cc=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],Pc=function(t){var n,e,r=t.grouping&&t.thousands?(n=t.grouping,e=t.thousands,function(t,r){for(var i=t.length,u=[],o=0,a=n[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),u.push(t.substring(i-=a,i+a)),!((c+=a+1)>r));)a=n[o=(o+1)%n.length];return u.reverse().join(e)}):Ec,i=t.currency,u=t.decimal,o=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):Ec,a=t.percent||"%";function c(t){var n=(t=mc(t)).fill,e=t.align,c=t.sign,f=t.symbol,s=t.zero,l=t.width,h=t.comma,d=t.precision,p=t.trim,v=t.type;"n"===v?(h=!0,v="g"):Sc[v]||(null==d&&(d=12),p=!0,v="g"),(s||"0"===n&&"="===e)&&(s=!0,n="0",e="=");var g="$"===f?i[0]:"#"===f&&/[boxX]/.test(v)?"0"+v.toLowerCase():"",y="$"===f?i[1]:/[%p]/.test(v)?a:"",b=Sc[v],_=/[defgprs%]/.test(v);function m(t){var i,a,f,m=g,x=y;if("c"===v)x=b(t)+x,t="";else{var w=(t=+t)<0;if(t=b(Math.abs(t),d),p&&(t=kc(t)),w&&0==+t&&(w=!1),m=(w?"("===c?c:"-":"-"===c||"("===c?"":c)+m,x=("s"===v?Cc[8+wc/3]:"")+x+(w&&"("===c?")":""),_)for(i=-1,a=t.length;++i<a;)if(48>(f=t.charCodeAt(i))||f>57){x=(46===f?u+t.slice(i+1):t.slice(i))+x,t=t.slice(0,i);break}}h&&!s&&(t=r(t,1/0));var M=m.length+t.length+x.length,A=M<l?new Array(l-M+1).join(n):"";switch(h&&s&&(t=r(A+t,A.length?l-x.length:1/0),A=""),e){case"<":t=m+t+x+A;break;case"=":t=m+A+t+x;break;case"^":t=A.slice(0,M=A.length>>1)+m+t+x+A.slice(M);break;default:t=A+m+t+x}return o(t)}return d=null==d?6:/[gprs]/.test(v)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),m.toString=function(){return t+""},m}return{format:c,formatPrefix:function(t,n){var e=c(((t=mc(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(bc(n)/3))),i=Math.pow(10,-r),u=Cc[8+r/3];return function(t){return e(i*t)+u}}}};function zc(t){return Mc=Pc(t),Ac=Mc.format,Nc=Mc.formatPrefix,Mc}zc({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var Rc=function(t){return Math.max(0,-bc(Math.abs(t)))},Lc=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(bc(n)/3)))-bc(Math.abs(t)))},Dc=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,bc(n)-bc(t))+1},qc=function(){return new Uc};function Uc(){this.reset()}Uc.prototype={constructor:Uc,reset:function(){this.s=this.t=0},add:function(t){Yc(Oc,t,this.t),Yc(this,Oc.s,this.s),this.s?this.t+=Oc.t:this.s=Oc.t},valueOf:function(){return this.s}};var Oc=new Uc;function Yc(t,n,e){var r=t.s=n+e,i=r-n,u=r-i;t.t=n-u+(e-i)}var Fc=1e-6,Bc=1e-12,Ic=Math.PI,jc=Ic/2,Xc=Ic/4,Hc=2*Ic,Gc=180/Ic,Vc=Ic/180,$c=Math.abs,Wc=Math.atan,Zc=Math.atan2,Qc=Math.cos,Jc=Math.ceil,Kc=Math.exp,tf=(Math.floor,Math.log),nf=Math.pow,ef=Math.sin,rf=Math.sign||function(t){return t>0?1:t<0?-1:0},uf=Math.sqrt,of=Math.tan;function af(t){return t>1?0:t<-1?Ic:Math.acos(t)}function cf(t){return t>1?jc:t<-1?-jc:Math.asin(t)}function ff(t){return(t=ef(t/2))*t}function sf(){}function lf(t,n){t&&df.hasOwnProperty(t.type)&&df[t.type](t,n)}var hf={Feature:function(t,n){lf(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)lf(e[r].geometry,n)}},df={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){pf(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)pf(e[r],n,0)},Polygon:function(t,n){vf(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)vf(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)lf(e[r],n)}};function pf(t,n,e){var r,i=-1,u=t.length-e;for(n.lineStart();++i<u;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function vf(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)pf(t[e],n,1);n.polygonEnd()}var gf,yf,bf,_f,mf,xf=function(t,n){t&&hf.hasOwnProperty(t.type)?hf[t.type](t,n):lf(t,n)},wf=qc(),Mf=qc(),Af={point:sf,lineStart:sf,lineEnd:sf,polygonStart:function(){wf.reset(),Af.lineStart=Nf,Af.lineEnd=kf},polygonEnd:function(){var t=+wf;Mf.add(t<0?Hc+t:t),this.lineStart=this.lineEnd=this.point=sf},sphere:function(){Mf.add(Hc)}};function Nf(){Af.point=Tf}function kf(){Sf(gf,yf)}function Tf(t,n){Af.point=Sf,gf=t,yf=n,bf=t*=Vc,_f=Qc(n=(n*=Vc)/2+Xc),mf=ef(n)}function Sf(t,n){var e=(t*=Vc)-bf,r=e>=0?1:-1,i=r*e,u=Qc(n=(n*=Vc)/2+Xc),o=ef(n),a=mf*o,c=_f*u+a*Qc(i),f=a*r*ef(i);wf.add(Zc(f,c)),bf=t,_f=u,mf=o}var Ef=function(t){return Mf.reset(),xf(t,Af),2*Mf};function Cf(t){return[Zc(t[1],t[0]),cf(t[2])]}function Pf(t){var n=t[0],e=t[1],r=Qc(e);return[r*Qc(n),r*ef(n),ef(e)]}function zf(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function Rf(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function Lf(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function Df(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function qf(t){var n=uf(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}var Uf,Of,Yf,Ff,Bf,If,jf,Xf,Hf,Gf,Vf=qc(),$f={point:Wf,lineStart:Qf,lineEnd:Jf,polygonStart:function(){$f.point=Kf,$f.lineStart=ts,$f.lineEnd=ns,Vf.reset(),Af.polygonStart()},polygonEnd:function(){Af.polygonEnd(),$f.point=Wf,$f.lineStart=Qf,$f.lineEnd=Jf,wf<0?(Uf=-(Yf=180),Of=-(Ff=90)):Vf>Fc?Ff=90:Vf<-Fc&&(Of=-90),Gf[0]=Uf,Gf[1]=Yf},sphere:function(){Uf=-(Yf=180),Of=-(Ff=90)}};function Wf(t,n){Hf.push(Gf=[Uf=t,Yf=t]),n<Of&&(Of=n),n>Ff&&(Ff=n)}function Zf(t,n){var e=Pf([t*Vc,n*Vc]);if(Xf){var r=Rf(Xf,e),i=Rf([r[1],-r[0],0],r);qf(i),i=Cf(i);var u,o=t-Bf,a=o>0?1:-1,c=i[0]*Gc*a,f=$c(o)>180;f^(a*Bf<c&&c<a*t)?(u=i[1]*Gc)>Ff&&(Ff=u):f^(a*Bf<(c=(c+360)%360-180)&&c<a*t)?(u=-i[1]*Gc)<Of&&(Of=u):(n<Of&&(Of=n),n>Ff&&(Ff=n)),f?t<Bf?es(Uf,t)>es(Uf,Yf)&&(Yf=t):es(t,Yf)>es(Uf,Yf)&&(Uf=t):Yf>=Uf?(t<Uf&&(Uf=t),t>Yf&&(Yf=t)):t>Bf?es(Uf,t)>es(Uf,Yf)&&(Yf=t):es(t,Yf)>es(Uf,Yf)&&(Uf=t)}else Hf.push(Gf=[Uf=t,Yf=t]);n<Of&&(Of=n),n>Ff&&(Ff=n),Xf=e,Bf=t}function Qf(){$f.point=Zf}function Jf(){Gf[0]=Uf,Gf[1]=Yf,$f.point=Wf,Xf=null}function Kf(t,n){if(Xf){var e=t-Bf;Vf.add($c(e)>180?e+(e>0?360:-360):e)}else If=t,jf=n;Af.point(t,n),Zf(t,n)}function ts(){Af.lineStart()}function ns(){Kf(If,jf),Af.lineEnd(),$c(Vf)>Fc&&(Uf=-(Yf=180)),Gf[0]=Uf,Gf[1]=Yf,Xf=null}function es(t,n){return(n-=t)<0?n+360:n}function rs(t,n){return t[0]-n[0]}function is(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var us,os,as,cs,fs,ss,ls,hs,ds,ps,vs,gs,ys,bs,_s,ms,xs=function(t){var n,e,r,i,u,o,a;if(Ff=Yf=-(Uf=Of=1/0),Hf=[],xf(t,$f),e=Hf.length){for(Hf.sort(rs),n=1,u=[r=Hf[0]];n<e;++n)is(r,(i=Hf[n])[0])||is(r,i[1])?(es(r[0],i[1])>es(r[0],r[1])&&(r[1]=i[1]),es(i[0],r[1])>es(r[0],r[1])&&(r[0]=i[0])):u.push(r=i);for(o=-1/0,n=0,r=u[e=u.length-1];n<=e;r=i,++n)i=u[n],(a=es(r[1],i[0]))>o&&(o=a,Uf=i[0],Yf=r[1])}return Hf=Gf=null,Uf===1/0||Of===1/0?[[NaN,NaN],[NaN,NaN]]:[[Uf,Of],[Yf,Ff]]},ws={sphere:sf,point:Ms,lineStart:Ns,lineEnd:Ss,polygonStart:function(){ws.lineStart=Es,ws.lineEnd=Cs},polygonEnd:function(){ws.lineStart=Ns,ws.lineEnd=Ss}};function Ms(t,n){t*=Vc;var e=Qc(n*=Vc);As(e*Qc(t),e*ef(t),ef(n))}function As(t,n,e){as+=(t-as)/++us,cs+=(n-cs)/us,fs+=(e-fs)/us}function Ns(){ws.point=ks}function ks(t,n){t*=Vc;var e=Qc(n*=Vc);bs=e*Qc(t),_s=e*ef(t),ms=ef(n),ws.point=Ts,As(bs,_s,ms)}function Ts(t,n){t*=Vc;var e=Qc(n*=Vc),r=e*Qc(t),i=e*ef(t),u=ef(n),o=Zc(uf((o=_s*u-ms*i)*o+(o=ms*r-bs*u)*o+(o=bs*i-_s*r)*o),bs*r+_s*i+ms*u);os+=o,ss+=o*(bs+(bs=r)),ls+=o*(_s+(_s=i)),hs+=o*(ms+(ms=u)),As(bs,_s,ms)}function Ss(){ws.point=Ms}function Es(){ws.point=Ps}function Cs(){zs(gs,ys),ws.point=Ms}function Ps(t,n){gs=t,ys=n,t*=Vc,n*=Vc,ws.point=zs;var e=Qc(n);bs=e*Qc(t),_s=e*ef(t),ms=ef(n),As(bs,_s,ms)}function zs(t,n){t*=Vc;var e=Qc(n*=Vc),r=e*Qc(t),i=e*ef(t),u=ef(n),o=_s*u-ms*i,a=ms*r-bs*u,c=bs*i-_s*r,f=uf(o*o+a*a+c*c),s=cf(f),l=f&&-s/f;ds+=l*o,ps+=l*a,vs+=l*c,os+=s,ss+=s*(bs+(bs=r)),ls+=s*(_s+(_s=i)),hs+=s*(ms+(ms=u)),As(bs,_s,ms)}var Rs=function(t){us=os=as=cs=fs=ss=ls=hs=ds=ps=vs=0,xf(t,ws);var n=ds,e=ps,r=vs,i=n*n+e*e+r*r;return i<Bc&&(n=ss,e=ls,r=hs,os<Fc&&(n=as,e=cs,r=fs),(i=n*n+e*e+r*r)<Bc)?[NaN,NaN]:[Zc(e,n)*Gc,cf(r/uf(i))*Gc]},Ls=function(t){return function(){return t}},Ds=function(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e};function qs(t,n){return[$c(t)>Ic?t+Math.round(-t/Hc)*Hc:t,n]}function Us(t,n,e){return(t%=Hc)?n||e?Ds(Ys(t),Fs(n,e)):Ys(t):n||e?Fs(n,e):qs}function Os(t){return function(n,e){return[(n+=t)>Ic?n-Hc:n<-Ic?n+Hc:n,e]}}function Ys(t){var n=Os(t);return n.invert=Os(-t),n}function Fs(t,n){var e=Qc(t),r=ef(t),i=Qc(n),u=ef(n);function o(t,n){var o=Qc(n),a=Qc(t)*o,c=ef(t)*o,f=ef(n),s=f*e+a*r;return[Zc(c*i-s*u,a*e-f*r),cf(s*i+c*u)]}return o.invert=function(t,n){var o=Qc(n),a=Qc(t)*o,c=ef(t)*o,f=ef(n),s=f*i-c*u;return[Zc(c*i+f*u,a*e+s*r),cf(s*e-a*r)]},o}qs.invert=qs;var Bs=function(t){function n(n){return(n=t(n[0]*Vc,n[1]*Vc))[0]*=Gc,n[1]*=Gc,n}return t=Us(t[0]*Vc,t[1]*Vc,t.length>2?t[2]*Vc:0),n.invert=function(n){return(n=t.invert(n[0]*Vc,n[1]*Vc))[0]*=Gc,n[1]*=Gc,n},n};function Is(t,n,e,r,i,u){if(e){var o=Qc(n),a=ef(n),c=r*e;null==i?(i=n+r*Hc,u=n-c/2):(i=js(o,i),u=js(o,u),(r>0?i<u:i>u)&&(i+=r*Hc));for(var f,s=i;r>0?s>u:s<u;s-=c)f=Cf([o,-a*Qc(s),-a*ef(s)]),t.point(f[0],f[1])}}function js(t,n){(n=Pf(n))[0]-=t,qf(n);var e=af(-n[1]);return((-n[2]<0?-e:e)+Hc-Fc)%Hc}var Xs=function(){var t,n,e=Ls([0,0]),r=Ls(90),i=Ls(6),u={point:function(e,r){t.push(e=n(e,r)),e[0]*=Gc,e[1]*=Gc}};function o(){var o=e.apply(this,arguments),a=r.apply(this,arguments)*Vc,c=i.apply(this,arguments)*Vc;return t=[],n=Us(-o[0]*Vc,-o[1]*Vc,0).invert,Is(u,a,c,1),o={type:"Polygon",coordinates:[t]},t=n=null,o}return o.center=function(t){return arguments.length?(e="function"==typeof t?t:Ls([+t[0],+t[1]]),o):e},o.radius=function(t){return arguments.length?(r="function"==typeof t?t:Ls(+t),o):r},o.precision=function(t){return arguments.length?(i="function"==typeof t?t:Ls(+t),o):i},o},Hs=function(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:sf,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}},Gs=function(t,n){return $c(t[0]-n[0])<Fc&&$c(t[1]-n[1])<Fc};function Vs(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}var $s=function(t,n,e,r,i){var u,o,a=[],c=[];if(t.forEach(function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],o=t[n];if(Gs(r,o)){for(i.lineStart(),u=0;u<n;++u)i.point((r=t[u])[0],r[1]);i.lineEnd()}else a.push(e=new Vs(r,t,null,!0)),c.push(e.o=new Vs(r,null,e,!1)),a.push(e=new Vs(o,t,null,!1)),c.push(e.o=new Vs(o,null,e,!0))}}),a.length){for(c.sort(n),Ws(a),Ws(c),u=0,o=c.length;u<o;++u)c[u].e=e=!e;for(var f,s,l=a[0];;){for(var h=l,d=!0;h.v;)if((h=h.n)===l)return;f=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(u=0,o=f.length;u<o;++u)i.point((s=f[u])[0],s[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(f=h.p.z,u=f.length-1;u>=0;--u)i.point((s=f[u])[0],s[1]);else r(h.x,h.p.x,-1,i);h=h.p}f=(h=h.o).z,d=!d}while(!h.v);i.lineEnd()}}};function Ws(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}var Zs=qc();function Qs(t){return $c(t[0])<=Ic?t[0]:rf(t[0])*(($c(t[0])+Ic)%Hc-Ic)}var Js=function(t,n){var e=Qs(n),r=n[1],i=ef(r),u=[ef(e),-Qc(e),0],o=0,a=0;Zs.reset(),1===i?r=jc+Fc:-1===i&&(r=-jc-Fc);for(var c=0,f=t.length;c<f;++c)if(l=(s=t[c]).length)for(var s,l,h=s[l-1],d=Qs(h),p=h[1]/2+Xc,v=ef(p),g=Qc(p),y=0;y<l;++y,d=_,v=x,g=w,h=b){var b=s[y],_=Qs(b),m=b[1]/2+Xc,x=ef(m),w=Qc(m),M=_-d,A=M>=0?1:-1,N=A*M,k=N>Ic,T=v*x;if(Zs.add(Zc(T*A*ef(N),g*w+T*Qc(N))),o+=k?M+A*Hc:M,k^d>=e^_>=e){var S=Rf(Pf(h),Pf(b));qf(S);var E=Rf(u,S);qf(E);var C=(k^M>=0?-1:1)*cf(E[2]);(r>C||r===C&&(S[0]||S[1]))&&(a+=k^M>=0?1:-1)}}return(o<-Fc||o<Fc&&Zs<-Fc)^1&a},Ks=function(t,n,e,r){return function(i){var u,o,a,c=n(i),f=Hs(),s=n(f),l=!1,h={point:d,lineStart:v,lineEnd:g,polygonStart:function(){h.point=y,h.lineStart=b,h.lineEnd=_,o=[],u=[]},polygonEnd:function(){h.point=d,h.lineStart=v,h.lineEnd=g,o=U(o);var t=Js(u,r);o.length?(l||(i.polygonStart(),l=!0),$s(o,nl,t,e,i)):t&&(l||(i.polygonStart(),l=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),l&&(i.polygonEnd(),l=!1),o=u=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function d(n,e){t(n,e)&&i.point(n,e)}function p(t,n){c.point(t,n)}function v(){h.point=p,c.lineStart()}function g(){h.point=d,c.lineEnd()}function y(t,n){a.push([t,n]),s.point(t,n)}function b(){s.lineStart(),a=[]}function _(){y(a[0][0],a[0][1]),s.lineEnd();var t,n,e,r,c=s.clean(),h=f.result(),d=h.length;if(a.pop(),u.push(a),a=null,d)if(1&c){if((n=(e=h[0]).length-1)>0){for(l||(i.polygonStart(),l=!0),i.lineStart(),t=0;t<n;++t)i.point((r=e[t])[0],r[1]);i.lineEnd()}}else d>1&&2&c&&h.push(h.pop().concat(h.shift())),o.push(h.filter(tl))}return h}};function tl(t){return t.length>1}function nl(t,n){return((t=t.x)[0]<0?t[1]-jc-Fc:jc-t[1])-((n=n.x)[0]<0?n[1]-jc-Fc:jc-n[1])}var el=Ks(function(){return!0},function(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(u,o){var a=u>0?Ic:-Ic,c=$c(u-e);$c(c-Ic)<Fc?(t.point(e,r=(r+o)/2>0?jc:-jc),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(u,r),n=0):i!==a&&c>=Ic&&($c(e-i)<Fc&&(e-=i*Fc),$c(u-a)<Fc&&(u-=a*Fc),r=function(t,n,e,r){var i,u,o=ef(t-e);return $c(o)>Fc?Wc((ef(n)*(u=Qc(r))*ef(e)-ef(r)*(i=Qc(n))*ef(t))/(i*u*o)):(n+r)/2}(e,r,u,o),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),n=0),t.point(e=u,r=o),i=a},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}},function(t,n,e,r){var i;if(null==t)i=e*jc,r.point(-Ic,i),r.point(0,i),r.point(Ic,i),r.point(Ic,0),r.point(Ic,-i),r.point(0,-i),r.point(-Ic,-i),r.point(-Ic,0),r.point(-Ic,i);else if($c(t[0]-n[0])>Fc){var u=t[0]<n[0]?Ic:-Ic;i=e*u/2,r.point(-u,i),r.point(0,i),r.point(u,i)}else r.point(n[0],n[1])},[-Ic,-jc]);var rl=function(t){var n=Qc(t),e=6*Vc,r=n>0,i=$c(n)>Fc;function u(t,e){return Qc(t)*Qc(e)>n}function o(t,e,r){var i=[1,0,0],u=Rf(Pf(t),Pf(e)),o=zf(u,u),a=u[0],c=o-a*a;if(!c)return!r&&t;var f=n*o/c,s=-n*a/c,l=Rf(i,u),h=Df(i,f);Lf(h,Df(u,s));var d=l,p=zf(h,d),v=zf(d,d),g=p*p-v*(zf(h,h)-1);if(!(g<0)){var y=uf(g),b=Df(d,(-p-y)/v);if(Lf(b,h),b=Cf(b),!r)return b;var _,m=t[0],x=e[0],w=t[1],M=e[1];x<m&&(_=m,m=x,x=_);var A=x-m,N=$c(A-Ic)<Fc;if(!N&&M<w&&(_=w,w=M,M=_),N||A<Fc?N?w+M>0^b[1]<($c(b[0]-m)<Fc?w:M):w<=b[1]&&b[1]<=M:A>Ic^(m<=b[0]&&b[0]<=x)){var k=Df(d,(-p+y)/v);return Lf(k,h),[b,Cf(k)]}}}function a(n,e){var i=r?t:Ic-t,u=0;return n<-i?u|=1:n>i&&(u|=2),e<-i?u|=4:e>i&&(u|=8),u}return Ks(u,function(t){var n,e,c,f,s;return{lineStart:function(){f=c=!1,s=1},point:function(l,h){var d,p=[l,h],v=u(l,h),g=r?v?0:a(l,h):v?a(l+(l<0?Ic:-Ic),h):0;if(!n&&(f=c=v)&&t.lineStart(),v!==c&&(!(d=o(n,p))||Gs(n,d)||Gs(p,d))&&(p[0]+=Fc,p[1]+=Fc,v=u(p[0],p[1])),v!==c)s=0,v?(t.lineStart(),d=o(p,n),t.point(d[0],d[1])):(d=o(n,p),t.point(d[0],d[1]),t.lineEnd()),n=d;else if(i&&n&&r^v){var y;g&e||!(y=o(p,n,!0))||(s=0,r?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1])))}!v||n&&Gs(n,p)||t.point(p[0],p[1]),n=p,c=v,e=g},lineEnd:function(){c&&t.lineEnd(),n=null},clean:function(){return s|(f&&c)<<1}}},function(n,r,i,u){Is(u,t,e,i,n,r)},r?[0,-t]:[-Ic,t-Ic])},il=function(t,n,e,r,i,u){var o,a=t[0],c=t[1],f=0,s=1,l=n[0]-a,h=n[1]-c;if(o=e-a,l||!(o>0)){if(o/=l,l<0){if(o<f)return;o<s&&(s=o)}else if(l>0){if(o>s)return;o>f&&(f=o)}if(o=i-a,l||!(o<0)){if(o/=l,l<0){if(o>s)return;o>f&&(f=o)}else if(l>0){if(o<f)return;o<s&&(s=o)}if(o=r-c,h||!(o>0)){if(o/=h,h<0){if(o<f)return;o<s&&(s=o)}else if(h>0){if(o>s)return;o>f&&(f=o)}if(o=u-c,h||!(o<0)){if(o/=h,h<0){if(o>s)return;o>f&&(f=o)}else if(h>0){if(o<f)return;o<s&&(s=o)}return f>0&&(t[0]=a+f*l,t[1]=c+f*h),s<1&&(n[0]=a+s*l,n[1]=c+s*h),!0}}}}},ul=1e9,ol=-ul;function al(t,n,e,r){function i(i,u){return t<=i&&i<=e&&n<=u&&u<=r}function u(i,u,a,f){var s=0,l=0;if(null==i||(s=o(i,a))!==(l=o(u,a))||c(i,u)<0^a>0)do{f.point(0===s||3===s?t:e,s>1?r:n)}while((s=(s+a+4)%4)!==l);else f.point(u[0],u[1])}function o(r,i){return $c(r[0]-t)<Fc?i>0?0:3:$c(r[0]-e)<Fc?i>0?2:1:$c(r[1]-n)<Fc?i>0?1:0:i>0?3:2}function a(t,n){return c(t.x,n.x)}function c(t,n){var e=o(t,1),r=o(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(o){var c,f,s,l,h,d,p,v,g,y,b,_=o,m=Hs(),x={point:w,lineStart:function(){x.point=M,f&&f.push(s=[]);y=!0,g=!1,p=v=NaN},lineEnd:function(){c&&(M(l,h),d&&g&&m.rejoin(),c.push(m.result()));x.point=w,g&&_.lineEnd()},polygonStart:function(){_=m,c=[],f=[],b=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,i=f.length;e<i;++e)for(var u,o,a=f[e],c=1,s=a.length,l=a[0],h=l[0],d=l[1];c<s;++c)u=h,o=d,l=a[c],h=l[0],d=l[1],o<=r?d>r&&(h-u)*(r-o)>(d-o)*(t-u)&&++n:d<=r&&(h-u)*(r-o)<(d-o)*(t-u)&&--n;return n}(),e=b&&n,i=(c=U(c)).length;(e||i)&&(o.polygonStart(),e&&(o.lineStart(),u(null,null,1,o),o.lineEnd()),i&&$s(c,a,n,u,o),o.polygonEnd());_=o,c=f=s=null}};function w(t,n){i(t,n)&&_.point(t,n)}function M(u,o){var a=i(u,o);if(f&&s.push([u,o]),y)l=u,h=o,d=a,y=!1,a&&(_.lineStart(),_.point(u,o));else if(a&&g)_.point(u,o);else{var c=[p=Math.max(ol,Math.min(ul,p)),v=Math.max(ol,Math.min(ul,v))],m=[u=Math.max(ol,Math.min(ul,u)),o=Math.max(ol,Math.min(ul,o))];il(c,m,t,n,e,r)?(g||(_.lineStart(),_.point(c[0],c[1])),_.point(m[0],m[1]),a||_.lineEnd(),b=!1):a&&(_.lineStart(),_.point(u,o),b=!1)}p=u,v=o,g=a}return x}}var cl,fl,sl,ll=function(){var t,n,e,r=0,i=0,u=960,o=500;return e={stream:function(e){return t&&n===e?t:t=al(r,i,u,o)(n=e)},extent:function(a){return arguments.length?(r=+a[0][0],i=+a[0][1],u=+a[1][0],o=+a[1][1],t=n=null,e):[[r,i],[u,o]]}}},hl=qc(),dl={sphere:sf,point:sf,lineStart:function(){dl.point=vl,dl.lineEnd=pl},lineEnd:sf,polygonStart:sf,polygonEnd:sf};function pl(){dl.point=dl.lineEnd=sf}function vl(t,n){cl=t*=Vc,fl=ef(n*=Vc),sl=Qc(n),dl.point=gl}function gl(t,n){t*=Vc;var e=ef(n*=Vc),r=Qc(n),i=$c(t-cl),u=Qc(i),o=r*ef(i),a=sl*e-fl*r*u,c=fl*e+sl*r*u;hl.add(Zc(uf(o*o+a*a),c)),cl=t,fl=e,sl=r}var yl=function(t){return hl.reset(),xf(t,dl),+hl},bl=[null,null],_l={type:"LineString",coordinates:bl},ml=function(t,n){return bl[0]=t,bl[1]=n,yl(_l)},xl={Feature:function(t,n){return Ml(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)if(Ml(e[r].geometry,n))return!0;return!1}},wl={Sphere:function(){return!0},Point:function(t,n){return Al(t.coordinates,n)},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Al(e[r],n))return!0;return!1},LineString:function(t,n){return Nl(t.coordinates,n)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Nl(e[r],n))return!0;return!1},Polygon:function(t,n){return kl(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(kl(e[r],n))return!0;return!1},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)if(Ml(e[r],n))return!0;return!1}};function Ml(t,n){return!(!t||!wl.hasOwnProperty(t.type))&&wl[t.type](t,n)}function Al(t,n){return 0===ml(t,n)}function Nl(t,n){for(var e,r,i,u=0,o=t.length;u<o;u++){if(0===(r=ml(t[u],n)))return!0;if(u>0&&(i=ml(t[u],t[u-1]))>0&&e<=i&&r<=i&&(e+r-i)*(1-Math.pow((e-r)/i,2))<Bc*i)return!0;e=r}return!1}function kl(t,n){return!!Js(t.map(Tl),Sl(n))}function Tl(t){return(t=t.map(Sl)).pop(),t}function Sl(t){return[t[0]*Vc,t[1]*Vc]}var El=function(t,n){return(t&&xl.hasOwnProperty(t.type)?xl[t.type]:Ml)(t,n)};function Cl(t,n,e){var r=w(t,n-Fc,e).concat(n);return function(t){return r.map(function(n){return[t,n]})}}function Pl(t,n,e){var r=w(t,n-Fc,e).concat(n);return function(t){return r.map(function(n){return[n,t]})}}function zl(){var t,n,e,r,i,u,o,a,c,f,s,l,h=10,d=h,p=90,v=360,g=2.5;function y(){return{type:"MultiLineString",coordinates:b()}}function b(){return w(Jc(r/p)*p,e,p).map(s).concat(w(Jc(a/v)*v,o,v).map(l)).concat(w(Jc(n/h)*h,t,h).filter(function(t){return $c(t%p)>Fc}).map(c)).concat(w(Jc(u/d)*d,i,d).filter(function(t){return $c(t%v)>Fc}).map(f))}return y.lines=function(){return b().map(function(t){return{type:"LineString",coordinates:t}})},y.outline=function(){return{type:"Polygon",coordinates:[s(r).concat(l(o).slice(1),s(e).reverse().slice(1),l(a).reverse().slice(1))]}},y.extent=function(t){return arguments.length?y.extentMajor(t).extentMinor(t):y.extentMinor()},y.extentMajor=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],a=+t[0][1],o=+t[1][1],r>e&&(t=r,r=e,e=t),a>o&&(t=a,a=o,o=t),y.precision(g)):[[r,a],[e,o]]},y.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],u=+e[0][1],i=+e[1][1],n>t&&(e=n,n=t,t=e),u>i&&(e=u,u=i,i=e),y.precision(g)):[[n,u],[t,i]]},y.step=function(t){return arguments.length?y.stepMajor(t).stepMinor(t):y.stepMinor()},y.stepMajor=function(t){return arguments.length?(p=+t[0],v=+t[1],y):[p,v]},y.stepMinor=function(t){return arguments.length?(h=+t[0],d=+t[1],y):[h,d]},y.precision=function(h){return arguments.length?(g=+h,c=Cl(u,i,90),f=Pl(n,t,g),s=Cl(a,o,90),l=Pl(r,e,g),y):g},y.extentMajor([[-180,-90+Fc],[180,90-Fc]]).extentMinor([[-180,-80-Fc],[180,80+Fc]])}function Rl(){return zl()()}var Ll,Dl,ql,Ul,Ol=function(t,n){var e=t[0]*Vc,r=t[1]*Vc,i=n[0]*Vc,u=n[1]*Vc,o=Qc(r),a=ef(r),c=Qc(u),f=ef(u),s=o*Qc(e),l=o*ef(e),h=c*Qc(i),d=c*ef(i),p=2*cf(uf(ff(u-r)+o*c*ff(i-e))),v=ef(p),g=p?function(t){var n=ef(t*=p)/v,e=ef(p-t)/v,r=e*s+n*h,i=e*l+n*d,u=e*a+n*f;return[Zc(i,r)*Gc,Zc(u,uf(r*r+i*i))*Gc]}:function(){return[e*Gc,r*Gc]};return g.distance=p,g},Yl=function(t){return t},Fl=qc(),Bl=qc(),Il={point:sf,lineStart:sf,lineEnd:sf,polygonStart:function(){Il.lineStart=jl,Il.lineEnd=Gl},polygonEnd:function(){Il.lineStart=Il.lineEnd=Il.point=sf,Fl.add($c(Bl)),Bl.reset()},result:function(){var t=Fl/2;return Fl.reset(),t}};function jl(){Il.point=Xl}function Xl(t,n){Il.point=Hl,Ll=ql=t,Dl=Ul=n}function Hl(t,n){Bl.add(Ul*t-ql*n),ql=t,Ul=n}function Gl(){Hl(Ll,Dl)}var Vl=Il,$l=1/0,Wl=$l,Zl=-$l,Ql=Zl;var Jl,Kl,th,nh,eh={point:function(t,n){t<$l&&($l=t);t>Zl&&(Zl=t);n<Wl&&(Wl=n);n>Ql&&(Ql=n)},lineStart:sf,lineEnd:sf,polygonStart:sf,polygonEnd:sf,result:function(){var t=[[$l,Wl],[Zl,Ql]];return Zl=Ql=-(Wl=$l=1/0),t}},rh=0,ih=0,uh=0,oh=0,ah=0,ch=0,fh=0,sh=0,lh=0,hh={point:dh,lineStart:ph,lineEnd:yh,polygonStart:function(){hh.lineStart=bh,hh.lineEnd=_h},polygonEnd:function(){hh.point=dh,hh.lineStart=ph,hh.lineEnd=yh},result:function(){var t=lh?[fh/lh,sh/lh]:ch?[oh/ch,ah/ch]:uh?[rh/uh,ih/uh]:[NaN,NaN];return rh=ih=uh=oh=ah=ch=fh=sh=lh=0,t}};function dh(t,n){rh+=t,ih+=n,++uh}function ph(){hh.point=vh}function vh(t,n){hh.point=gh,dh(th=t,nh=n)}function gh(t,n){var e=t-th,r=n-nh,i=uf(e*e+r*r);oh+=i*(th+t)/2,ah+=i*(nh+n)/2,ch+=i,dh(th=t,nh=n)}function yh(){hh.point=dh}function bh(){hh.point=mh}function _h(){xh(Jl,Kl)}function mh(t,n){hh.point=xh,dh(Jl=th=t,Kl=nh=n)}function xh(t,n){var e=t-th,r=n-nh,i=uf(e*e+r*r);oh+=i*(th+t)/2,ah+=i*(nh+n)/2,ch+=i,fh+=(i=nh*t-th*n)*(th+t),sh+=i*(nh+n),lh+=3*i,dh(th=t,nh=n)}var wh=hh;function Mh(t){this._context=t}Mh.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,Hc)}},result:sf};var Ah,Nh,kh,Th,Sh,Eh=qc(),Ch={point:sf,lineStart:function(){Ch.point=Ph},lineEnd:function(){Ah&&zh(Nh,kh),Ch.point=sf},polygonStart:function(){Ah=!0},polygonEnd:function(){Ah=null},result:function(){var t=+Eh;return Eh.reset(),t}};function Ph(t,n){Ch.point=zh,Nh=Th=t,kh=Sh=n}function zh(t,n){Th-=t,Sh-=n,Eh.add(uf(Th*Th+Sh*Sh)),Th=t,Sh=n}var Rh=Ch;function Lh(){this._string=[]}function Dh(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}Lh.prototype={_radius:4.5,_circle:Dh(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push("M",t,",",n),this._point=1;break;case 1:this._string.push("L",t,",",n);break;default:null==this._circle&&(this._circle=Dh(this._radius)),this._string.push("M",t,",",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}};var qh=function(t,n){var e,r,i=4.5;function u(t){return t&&("function"==typeof i&&r.pointRadius(+i.apply(this,arguments)),xf(t,e(r))),r.result()}return u.area=function(t){return xf(t,e(Vl)),Vl.result()},u.measure=function(t){return xf(t,e(Rh)),Rh.result()},u.bounds=function(t){return xf(t,e(eh)),eh.result()},u.centroid=function(t){return xf(t,e(wh)),wh.result()},u.projection=function(n){return arguments.length?(e=null==n?(t=null,Yl):(t=n).stream,u):t},u.context=function(t){return arguments.length?(r=null==t?(n=null,new Lh):new Mh(n=t),"function"!=typeof i&&r.pointRadius(i),u):n},u.pointRadius=function(t){return arguments.length?(i="function"==typeof t?t:(r.pointRadius(+t),+t),u):i},u.projection(t).context(n)},Uh=function(t){return{stream:Oh(t)}};function Oh(t){return function(n){var e=new Yh;for(var r in t)e[r]=t[r];return e.stream=n,e}}function Yh(){}function Fh(t,n,e){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=r&&t.clipExtent(null),xf(e,t.stream(eh)),n(eh.result()),null!=r&&t.clipExtent(r),t}function Bh(t,n,e){return Fh(t,function(e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],u=Math.min(r/(e[1][0]-e[0][0]),i/(e[1][1]-e[0][1])),o=+n[0][0]+(r-u*(e[1][0]+e[0][0]))/2,a=+n[0][1]+(i-u*(e[1][1]+e[0][1]))/2;t.scale(150*u).translate([o,a])},e)}function Ih(t,n,e){return Bh(t,[[0,0],n],e)}function jh(t,n,e){return Fh(t,function(e){var r=+n,i=r/(e[1][0]-e[0][0]),u=(r-i*(e[1][0]+e[0][0]))/2,o=-i*e[0][1];t.scale(150*i).translate([u,o])},e)}function Xh(t,n,e){return Fh(t,function(e){var r=+n,i=r/(e[1][1]-e[0][1]),u=-i*e[0][0],o=(r-i*(e[1][1]+e[0][1]))/2;t.scale(150*i).translate([u,o])},e)}Yh.prototype={constructor:Yh,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var Hh=16,Gh=Qc(30*Vc),Vh=function(t,n){return+n?function(t,n){function e(r,i,u,o,a,c,f,s,l,h,d,p,v,g){var y=f-r,b=s-i,_=y*y+b*b;if(_>4*n&&v--){var m=o+h,x=a+d,w=c+p,M=uf(m*m+x*x+w*w),A=cf(w/=M),N=$c($c(w)-1)<Fc||$c(u-l)<Fc?(u+l)/2:Zc(x,m),k=t(N,A),T=k[0],S=k[1],E=T-r,C=S-i,P=b*E-y*C;(P*P/_>n||$c((y*E+b*C)/_-.5)>.3||o*h+a*d+c*p<Gh)&&(e(r,i,u,o,a,c,T,S,N,m/=M,x/=M,w,v,g),g.point(T,S),e(T,S,N,m,x,w,f,s,l,h,d,p,v,g))}}return function(n){var r,i,u,o,a,c,f,s,l,h,d,p,v={point:g,lineStart:y,lineEnd:_,polygonStart:function(){n.polygonStart(),v.lineStart=m},polygonEnd:function(){n.polygonEnd(),v.lineStart=y}};function g(e,r){e=t(e,r),n.point(e[0],e[1])}function y(){s=NaN,v.point=b,n.lineStart()}function b(r,i){var u=Pf([r,i]),o=t(r,i);e(s,l,f,h,d,p,s=o[0],l=o[1],f=r,h=u[0],d=u[1],p=u[2],Hh,n),n.point(s,l)}function _(){v.point=g,n.lineEnd()}function m(){y(),v.point=x,v.lineEnd=w}function x(t,n){b(r=t,n),i=s,u=l,o=h,a=d,c=p,v.point=b}function w(){e(s,l,f,h,d,p,i,u,r,o,a,c,Hh,n),v.lineEnd=_,_()}return v}}(t,n):function(t){return Oh({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)};var $h=Oh({point:function(t,n){this.stream.point(t*Vc,n*Vc)}});function Wh(t,n,e,r){var i=Qc(r),u=ef(r),o=i*t,a=u*t,c=i/t,f=u/t,s=(u*e-i*n)/t,l=(u*n+i*e)/t;function h(t,r){return[o*t-a*r+n,e-a*t-o*r]}return h.invert=function(t,n){return[c*t-f*n+s,l-f*t-c*n]},h}function Zh(t){return Qh(function(){return t})()}function Qh(t){var n,e,r,i,u,o,a,c,f,s,l=150,h=480,d=250,p=0,v=0,g=0,y=0,b=0,_=0,m=null,x=el,w=null,M=Yl,A=.5;function N(t){return c(t[0]*Vc,t[1]*Vc)}function k(t){return(t=c.invert(t[0],t[1]))&&[t[0]*Gc,t[1]*Gc]}function T(){var t=Wh(l,0,0,_).apply(null,n(p,v)),r=(_?Wh:function(t,n,e){function r(r,i){return[n+t*r,e-t*i]}return r.invert=function(r,i){return[(r-n)/t,(e-i)/t]},r})(l,h-t[0],d-t[1],_);return e=Us(g,y,b),a=Ds(n,r),c=Ds(e,a),o=Vh(a,A),S()}function S(){return f=s=null,N}return N.stream=function(t){return f&&s===t?f:f=$h(function(t){return Oh({point:function(n,e){var r=t(n,e);return this.stream.point(r[0],r[1])}})}(e)(x(o(M(s=t)))))},N.preclip=function(t){return arguments.length?(x=t,m=void 0,S()):x},N.postclip=function(t){return arguments.length?(M=t,w=r=i=u=null,S()):M},N.clipAngle=function(t){return arguments.length?(x=+t?rl(m=t*Vc):(m=null,el),S()):m*Gc},N.clipExtent=function(t){return arguments.length?(M=null==t?(w=r=i=u=null,Yl):al(w=+t[0][0],r=+t[0][1],i=+t[1][0],u=+t[1][1]),S()):null==w?null:[[w,r],[i,u]]},N.scale=function(t){return arguments.length?(l=+t,T()):l},N.translate=function(t){return arguments.length?(h=+t[0],d=+t[1],T()):[h,d]},N.center=function(t){return arguments.length?(p=t[0]%360*Vc,v=t[1]%360*Vc,T()):[p*Gc,v*Gc]},N.rotate=function(t){return arguments.length?(g=t[0]%360*Vc,y=t[1]%360*Vc,b=t.length>2?t[2]%360*Vc:0,T()):[g*Gc,y*Gc,b*Gc]},N.angle=function(t){return arguments.length?(_=t%360*Vc,T()):_*Gc},N.precision=function(t){return arguments.length?(o=Vh(a,A=t*t),S()):uf(A)},N.fitExtent=function(t,n){return Bh(N,t,n)},N.fitSize=function(t,n){return Ih(N,t,n)},N.fitWidth=function(t,n){return jh(N,t,n)},N.fitHeight=function(t,n){return Xh(N,t,n)},function(){return n=t.apply(this,arguments),N.invert=n.invert&&k,T()}}function Jh(t){var n=0,e=Ic/3,r=Qh(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*Vc,e=t[1]*Vc):[n*Gc,e*Gc]},i}function Kh(t,n){var e=ef(t),r=(e+ef(n))/2;if($c(r)<Fc)return function(t){var n=Qc(t);function e(t,e){return[t*n,ef(e)/n]}return e.invert=function(t,e){return[t/n,cf(e*n)]},e}(t);var i=1+e*(2*r-e),u=uf(i)/r;function o(t,n){var e=uf(i-2*r*ef(n))/r;return[e*ef(t*=r),u-e*Qc(t)]}return o.invert=function(t,n){var e=u-n;return[Zc(t,$c(e))/r*rf(e),cf((i-(t*t+e*e)*r*r)/(2*r))]},o}var td=function(){return Jh(Kh).scale(155.424).center([0,33.6442])},nd=function(){return td().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])};var ed=function(){var t,n,e,r,i,u,o=nd(),a=td().rotate([154,0]).center([-2,58.5]).parallels([55,65]),c=td().rotate([157,0]).center([-3,19.9]).parallels([8,18]),f={point:function(t,n){u=[t,n]}};function s(t){var n=t[0],o=t[1];return u=null,e.point(n,o),u||(r.point(n,o),u)||(i.point(n,o),u)}function l(){return t=n=null,s}return s.invert=function(t){var n=o.scale(),e=o.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?a:i>=.166&&i<.234&&r>=-.214&&r<-.115?c:o).invert(t)},s.stream=function(e){return t&&n===e?t:(r=[o.stream(n=e),a.stream(e),c.stream(e)],i=r.length,t={point:function(t,n){for(var e=-1;++e<i;)r[e].point(t,n)},sphere:function(){for(var t=-1;++t<i;)r[t].sphere()},lineStart:function(){for(var t=-1;++t<i;)r[t].lineStart()},lineEnd:function(){for(var t=-1;++t<i;)r[t].lineEnd()},polygonStart:function(){for(var t=-1;++t<i;)r[t].polygonStart()},polygonEnd:function(){for(var t=-1;++t<i;)r[t].polygonEnd()}});var r,i},s.precision=function(t){return arguments.length?(o.precision(t),a.precision(t),c.precision(t),l()):o.precision()},s.scale=function(t){return arguments.length?(o.scale(t),a.scale(.35*t),c.scale(t),s.translate(o.translate())):o.scale()},s.translate=function(t){if(!arguments.length)return o.translate();var n=o.scale(),u=+t[0],s=+t[1];return e=o.translate(t).clipExtent([[u-.455*n,s-.238*n],[u+.455*n,s+.238*n]]).stream(f),r=a.translate([u-.307*n,s+.201*n]).clipExtent([[u-.425*n+Fc,s+.12*n+Fc],[u-.214*n-Fc,s+.234*n-Fc]]).stream(f),i=c.translate([u-.205*n,s+.212*n]).clipExtent([[u-.214*n+Fc,s+.166*n+Fc],[u-.115*n-Fc,s+.234*n-Fc]]).stream(f),l()},s.fitExtent=function(t,n){return Bh(s,t,n)},s.fitSize=function(t,n){return Ih(s,t,n)},s.fitWidth=function(t,n){return jh(s,t,n)},s.fitHeight=function(t,n){return Xh(s,t,n)},s.scale(1070)};function rd(t){return function(n,e){var r=Qc(n),i=Qc(e),u=t(r*i);return[u*i*ef(n),u*ef(e)]}}function id(t){return function(n,e){var r=uf(n*n+e*e),i=t(r),u=ef(i),o=Qc(i);return[Zc(n*u,r*o),cf(r&&e*u/r)]}}var ud=rd(function(t){return uf(2/(1+t))});ud.invert=id(function(t){return 2*cf(t/2)});var od=function(){return Zh(ud).scale(124.75).clipAngle(179.999)},ad=rd(function(t){return(t=af(t))&&t/ef(t)});ad.invert=id(function(t){return t});var cd=function(){return Zh(ad).scale(79.4188).clipAngle(179.999)};function fd(t,n){return[t,tf(of((jc+n)/2))]}fd.invert=function(t,n){return[t,2*Wc(Kc(n))-jc]};var sd=function(){return ld(fd).scale(961/Hc)};function ld(t){var n,e,r,i=Zh(t),u=i.center,o=i.scale,a=i.translate,c=i.clipExtent,f=null;function s(){var u=Ic*o(),a=i(Bs(i.rotate()).invert([0,0]));return c(null==f?[[a[0]-u,a[1]-u],[a[0]+u,a[1]+u]]:t===fd?[[Math.max(a[0]-u,f),n],[Math.min(a[0]+u,e),r]]:[[f,Math.max(a[1]-u,n)],[e,Math.min(a[1]+u,r)]])}return i.scale=function(t){return arguments.length?(o(t),s()):o()},i.translate=function(t){return arguments.length?(a(t),s()):a()},i.center=function(t){return arguments.length?(u(t),s()):u()},i.clipExtent=function(t){return arguments.length?(null==t?f=n=e=r=null:(f=+t[0][0],n=+t[0][1],e=+t[1][0],r=+t[1][1]),s()):null==f?null:[[f,n],[e,r]]},s()}function hd(t){return of((jc+t)/2)}function dd(t,n){var e=Qc(t),r=t===n?ef(t):tf(e/Qc(n))/tf(hd(n)/hd(t)),i=e*nf(hd(t),r)/r;if(!r)return fd;function u(t,n){i>0?n<-jc+Fc&&(n=-jc+Fc):n>jc-Fc&&(n=jc-Fc);var e=i/nf(hd(n),r);return[e*ef(r*t),i-e*Qc(r*t)]}return u.invert=function(t,n){var e=i-n,u=rf(r)*uf(t*t+e*e);return[Zc(t,$c(e))/r*rf(e),2*Wc(nf(i/u,1/r))-jc]},u}var pd=function(){return Jh(dd).scale(109.5).parallels([30,30])};function vd(t,n){return[t,n]}vd.invert=vd;var gd=function(){return Zh(vd).scale(152.63)};function yd(t,n){var e=Qc(t),r=t===n?ef(t):(e-Qc(n))/(n-t),i=e/r+t;if($c(r)<Fc)return vd;function u(t,n){var e=i-n,u=r*t;return[e*ef(u),i-e*Qc(u)]}return u.invert=function(t,n){var e=i-n;return[Zc(t,$c(e))/r*rf(e),i-rf(r)*uf(t*t+e*e)]},u}var bd=function(){return Jh(yd).scale(131.154).center([0,13.9389])},_d=1.340264,md=-.081106,xd=893e-6,wd=.003796,Md=uf(3)/2;function Ad(t,n){var e=cf(Md*ef(n)),r=e*e,i=r*r*r;return[t*Qc(e)/(Md*(_d+3*md*r+i*(7*xd+9*wd*r))),e*(_d+md*r+i*(xd+wd*r))]}Ad.invert=function(t,n){for(var e,r=n,i=r*r,u=i*i*i,o=0;o<12&&(u=(i=(r-=e=(r*(_d+md*i+u*(xd+wd*i))-n)/(_d+3*md*i+u*(7*xd+9*wd*i)))*r)*i*i,!($c(e)<Bc));++o);return[Md*t*(_d+3*md*i+u*(7*xd+9*wd*i))/Qc(r),cf(ef(r)/Md)]};var Nd=function(){return Zh(Ad).scale(177.158)};function kd(t,n){var e=Qc(n),r=Qc(t)*e;return[e*ef(t)/r,ef(n)/r]}kd.invert=id(Wc);var Td=function(){return Zh(kd).scale(144.049).clipAngle(60)};function Sd(t,n,e,r){return 1===t&&1===n&&0===e&&0===r?Yl:Oh({point:function(i,u){this.stream.point(i*t+e,u*n+r)}})}var Ed=function(){var t,n,e,r,i,u,o=1,a=0,c=0,f=1,s=1,l=Yl,h=null,d=Yl;function p(){return r=i=null,u}return u={stream:function(t){return r&&i===t?r:r=l(d(i=t))},postclip:function(r){return arguments.length?(d=r,h=t=n=e=null,p()):d},clipExtent:function(r){return arguments.length?(d=null==r?(h=t=n=e=null,Yl):al(h=+r[0][0],t=+r[0][1],n=+r[1][0],e=+r[1][1]),p()):null==h?null:[[h,t],[n,e]]},scale:function(t){return arguments.length?(l=Sd((o=+t)*f,o*s,a,c),p()):o},translate:function(t){return arguments.length?(l=Sd(o*f,o*s,a=+t[0],c=+t[1]),p()):[a,c]},reflectX:function(t){return arguments.length?(l=Sd(o*(f=t?-1:1),o*s,a,c),p()):f<0},reflectY:function(t){return arguments.length?(l=Sd(o*f,o*(s=t?-1:1),a,c),p()):s<0},fitExtent:function(t,n){return Bh(u,t,n)},fitSize:function(t,n){return Ih(u,t,n)},fitWidth:function(t,n){return jh(u,t,n)},fitHeight:function(t,n){return Xh(u,t,n)}}};function Cd(t,n){var e=n*n,r=e*e;return[t*(.8707-.131979*e+r*(r*(.003971*e-.001529*r)-.013791)),n*(1.007226+e*(.015085+r*(.028874*e-.044475-.005916*r)))]}Cd.invert=function(t,n){var e,r=n,i=25;do{var u=r*r,o=u*u;r-=e=(r*(1.007226+u*(.015085+o*(.028874*u-.044475-.005916*o)))-n)/(1.007226+u*(.045255+o*(.259866*u-.311325-.005916*11*o)))}while($c(e)>Fc&&--i>0);return[t/(.8707+(u=r*r)*(u*(u*u*u*(.003971-.001529*u)-.013791)-.131979)),r]};var Pd=function(){return Zh(Cd).scale(175.295)};function zd(t,n){return[Qc(n)*ef(t),ef(n)]}zd.invert=id(cf);var Rd=function(){return Zh(zd).scale(249.5).clipAngle(90+Fc)};function Ld(t,n){var e=Qc(n),r=1+Qc(t)*e;return[e*ef(t)/r,ef(n)/r]}Ld.invert=id(function(t){return 2*Wc(t)});var Dd=function(){return Zh(Ld).scale(250).clipAngle(142)};function qd(t,n){return[tf(of((jc+n)/2)),-t]}qd.invert=function(t,n){return[-n,2*Wc(Kc(t))-jc]};var Ud=function(){var t=ld(qd),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):[(t=n())[1],-t[0]]},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):[(t=e())[0],t[1],t[2]-90]},e([0,0,90]).scale(159.155)};function Od(t,n){return t.parent===n.parent?1:2}function Yd(t,n){return t+n.x}function Fd(t,n){return Math.max(t,n.y)}var Bd=function(){var t=Od,n=1,e=1,r=!1;function i(i){var u,o=0;i.eachAfter(function(n){var e=n.children;e?(n.x=function(t){return t.reduce(Yd,0)/t.length}(e),n.y=function(t){return 1+t.reduce(Fd,0)}(e)):(n.x=u?o+=t(n,u):0,n.y=0,u=n)});var a=function(t){for(var n;n=t.children;)t=n[0];return t}(i),c=function(t){for(var n;n=t.children;)t=n[n.length-1];return t}(i),f=a.x-t(a,c)/2,s=c.x+t(c,a)/2;return i.eachAfter(r?function(t){t.x=(t.x-i.x)*n,t.y=(i.y-t.y)*e}:function(t){t.x=(t.x-f)/(s-f)*n,t.y=(1-(i.y?t.y/i.y:1))*e})}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i};function Id(t){var n=0,e=t.children,r=e&&e.length;if(r)for(;--r>=0;)n+=e[r].value;else n=1;t.value=n}function jd(t,n){var e,r,i,u,o,a=new Vd(t),c=+t.value&&(a.value=t.value),f=[a];for(null==n&&(n=Xd);e=f.pop();)if(c&&(e.value=+e.data.value),(i=n(e.data))&&(o=i.length))for(e.children=new Array(o),u=o-1;u>=0;--u)f.push(r=e.children[u]=new Vd(i[u])),r.parent=e,r.depth=e.depth+1;return a.eachBefore(Gd)}function Xd(t){return t.children}function Hd(t){t.data=t.data.data}function Gd(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function Vd(t){this.data=t,this.depth=this.height=0,this.parent=null}Vd.prototype=jd.prototype={constructor:Vd,count:function(){return this.eachAfter(Id)},each:function(t){var n,e,r,i,u=this,o=[u];do{for(n=o.reverse(),o=[];u=n.pop();)if(t(u),e=u.children)for(r=0,i=e.length;r<i;++r)o.push(e[r])}while(o.length);return this},eachAfter:function(t){for(var n,e,r,i=this,u=[i],o=[];i=u.pop();)if(o.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)u.push(n[e]);for(;i=o.pop();)t(i);return this},eachBefore:function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},sum:function(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e})},sort:function(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})},path:function(t){for(var n=this,e=function(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},descendants:function(){var t=[];return this.each(function(n){t.push(n)}),t},leaves:function(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t},links:function(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n},copy:function(){return jd(this).eachBefore(Hd)}};var $d=Array.prototype.slice;var Wd=function(t){for(var n,e,r=0,i=(t=function(t){for(var n,e,r=t.length;r;)e=Math.random()*r--|0,n=t[r],t[r]=t[e],t[e]=n;return t}($d.call(t))).length,u=[];r<i;)n=t[r],e&&Jd(e,n)?++r:(e=tp(u=Zd(u,n)),r=0);return e};function Zd(t,n){var e,r;if(Kd(n,t))return[n];for(e=0;e<t.length;++e)if(Qd(n,t[e])&&Kd(np(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(r=e+1;r<t.length;++r)if(Qd(np(t[e],t[r]),n)&&Qd(np(t[e],n),t[r])&&Qd(np(t[r],n),t[e])&&Kd(ep(t[e],t[r],n),t))return[t[e],t[r],n];throw new Error}function Qd(t,n){var e=t.r-n.r,r=n.x-t.x,i=n.y-t.y;return e<0||e*e<r*r+i*i}function Jd(t,n){var e=t.r-n.r+1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function Kd(t,n){for(var e=0;e<n.length;++e)if(!Jd(t,n[e]))return!1;return!0}function tp(t){switch(t.length){case 1:return{x:(n=t[0]).x,y:n.y,r:n.r};case 2:return np(t[0],t[1]);case 3:return ep(t[0],t[1],t[2])}var n}function np(t,n){var e=t.x,r=t.y,i=t.r,u=n.x,o=n.y,a=n.r,c=u-e,f=o-r,s=a-i,l=Math.sqrt(c*c+f*f);return{x:(e+u+c/l*s)/2,y:(r+o+f/l*s)/2,r:(l+i+a)/2}}function ep(t,n,e){var r=t.x,i=t.y,u=t.r,o=n.x,a=n.y,c=n.r,f=e.x,s=e.y,l=e.r,h=r-o,d=r-f,p=i-a,v=i-s,g=c-u,y=l-u,b=r*r+i*i-u*u,_=b-o*o-a*a+c*c,m=b-f*f-s*s+l*l,x=d*p-h*v,w=(p*m-v*_)/(2*x)-r,M=(v*g-p*y)/x,A=(d*_-h*m)/(2*x)-i,N=(h*y-d*g)/x,k=M*M+N*N-1,T=2*(u+w*M+A*N),S=w*w+A*A-u*u,E=-(k?(T+Math.sqrt(T*T-4*k*S))/(2*k):S/T);return{x:r+w+M*E,y:i+A+N*E,r:E}}function rp(t,n,e){var r,i,u,o,a=t.x-n.x,c=t.y-n.y,f=a*a+c*c;f?(i=n.r+e.r,i*=i,o=t.r+e.r,i>(o*=o)?(r=(f+o-i)/(2*f),u=Math.sqrt(Math.max(0,o/f-r*r)),e.x=t.x-r*a-u*c,e.y=t.y-r*c+u*a):(r=(f+i-o)/(2*f),u=Math.sqrt(Math.max(0,i/f-r*r)),e.x=n.x+r*a-u*c,e.y=n.y+r*c+u*a)):(e.x=n.x+e.r,e.y=n.y)}function ip(t,n){var e=t.r+n.r-1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function up(t){var n=t._,e=t.next._,r=n.r+e.r,i=(n.x*e.r+e.x*n.r)/r,u=(n.y*e.r+e.y*n.r)/r;return i*i+u*u}function op(t){this._=t,this.next=null,this.previous=null}function ap(t){if(!(i=t.length))return 0;var n,e,r,i,u,o,a,c,f,s,l;if((n=t[0]).x=0,n.y=0,!(i>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(i>2))return n.r+e.r;rp(e,n,r=t[2]),n=new op(n),e=new op(e),r=new op(r),n.next=r.previous=e,e.next=n.previous=r,r.next=e.previous=n;t:for(a=3;a<i;++a){rp(n._,e._,r=t[a]),r=new op(r),c=e.next,f=n.previous,s=e._.r,l=n._.r;do{if(s<=l){if(ip(c._,r._)){e=c,n.next=e,e.previous=n,--a;continue t}s+=c._.r,c=c.next}else{if(ip(f._,r._)){(n=f).next=e,e.previous=n,--a;continue t}l+=f._.r,f=f.previous}}while(c!==f.next);for(r.previous=n,r.next=e,n.next=e.previous=e=r,u=up(n);(r=r.next)!==e;)(o=up(r))<u&&(n=r,u=o);e=n.next}for(n=[e._],r=e;(r=r.next)!==e;)n.push(r._);for(r=Wd(n),a=0;a<i;++a)(n=t[a]).x-=r.x,n.y-=r.y;return r.r}var cp=function(t){return ap(t),t};function fp(t){return null==t?null:sp(t)}function sp(t){if("function"!=typeof t)throw new Error;return t}function lp(){return 0}var hp=function(t){return function(){return t}};function dp(t){return Math.sqrt(t.value)}var pp=function(){var t=null,n=1,e=1,r=lp;function i(i){return i.x=n/2,i.y=e/2,t?i.eachBefore(vp(t)).eachAfter(gp(r,.5)).eachBefore(yp(1)):i.eachBefore(vp(dp)).eachAfter(gp(lp,1)).eachAfter(gp(r,i.r/Math.min(n,e))).eachBefore(yp(Math.min(n,e)/(2*i.r))),i}return i.radius=function(n){return arguments.length?(t=fp(n),i):t},i.size=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.padding=function(t){return arguments.length?(r="function"==typeof t?t:hp(+t),i):r},i};function vp(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function gp(t,n){return function(e){if(r=e.children){var r,i,u,o=r.length,a=t(e)*n||0;if(a)for(i=0;i<o;++i)r[i].r+=a;if(u=ap(r),a)for(i=0;i<o;++i)r[i].r-=a;e.r=u+a}}}function yp(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}var bp=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)},_p=function(t,n,e,r,i){for(var u,o=t.children,a=-1,c=o.length,f=t.value&&(r-n)/t.value;++a<c;)(u=o[a]).y0=e,u.y1=i,u.x0=n,u.x1=n+=u.value*f},mp=function(){var t=1,n=1,e=0,r=!1;function i(i){var u=i.height+1;return i.x0=i.y0=e,i.x1=t,i.y1=n/u,i.eachBefore(function(t,n){return function(r){r.children&&_p(r,r.x0,t*(r.depth+1)/n,r.x1,t*(r.depth+2)/n);var i=r.x0,u=r.y0,o=r.x1-e,a=r.y1-e;o<i&&(i=o=(i+o)/2),a<u&&(u=a=(u+a)/2),r.x0=i,r.y0=u,r.x1=o,r.y1=a}}(n,u)),r&&i.eachBefore(bp),i}return i.round=function(t){return arguments.length?(r=!!t,i):r},i.size=function(e){return arguments.length?(t=+e[0],n=+e[1],i):[t,n]},i.padding=function(t){return arguments.length?(e=+t,i):e},i},xp="$",wp={depth:-1},Mp={};function Ap(t){return t.id}function Np(t){return t.parentId}var kp=function(){var t=Ap,n=Np;function e(e){var r,i,u,o,a,c,f,s=e.length,l=new Array(s),h={};for(i=0;i<s;++i)r=e[i],a=l[i]=new Vd(r),null!=(c=t(r,i,e))&&(c+="")&&(h[f=xp+(a.id=c)]=f in h?Mp:a);for(i=0;i<s;++i)if(a=l[i],null!=(c=n(e[i],i,e))&&(c+="")){if(!(o=h[xp+c]))throw new Error("missing: "+c);if(o===Mp)throw new Error("ambiguous: "+c);o.children?o.children.push(a):o.children=[a],a.parent=o}else{if(u)throw new Error("multiple roots");u=a}if(!u)throw new Error("no root");if(u.parent=wp,u.eachBefore(function(t){t.depth=t.parent.depth+1,--s}).eachBefore(Gd),u.parent=null,s>0)throw new Error("cycle");return u}return e.id=function(n){return arguments.length?(t=sp(n),e):t},e.parentId=function(t){return arguments.length?(n=sp(t),e):n},e};function Tp(t,n){return t.parent===n.parent?1:2}function Sp(t){var n=t.children;return n?n[0]:t.t}function Ep(t){var n=t.children;return n?n[n.length-1]:t.t}function Cp(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function Pp(t,n,e){return t.a.parent===n.parent?t.a:e}function zp(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}zp.prototype=Object.create(Vd.prototype);var Rp=function(){var t=Tp,n=1,e=1,r=null;function i(i){var c=function(t){for(var n,e,r,i,u,o=new zp(t,0),a=[o];n=a.pop();)if(r=n._.children)for(n.children=new Array(u=r.length),i=u-1;i>=0;--i)a.push(e=n.children[i]=new zp(r[i],i)),e.parent=n;return(o.parent=new zp(null,0)).children=[o],o}(i);if(c.eachAfter(u),c.parent.m=-c.z,c.eachBefore(o),r)i.eachBefore(a);else{var f=i,s=i,l=i;i.eachBefore(function(t){t.x<f.x&&(f=t),t.x>s.x&&(s=t),t.depth>l.depth&&(l=t)});var h=f===s?1:t(f,s)/2,d=h-f.x,p=n/(s.x+h+d),v=e/(l.depth||1);i.eachBefore(function(t){t.x=(t.x+d)*p,t.y=t.depth*v})}return i}function u(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e){!function(t){for(var n,e=0,r=0,i=t.children,u=i.length;--u>=0;)(n=i[u]).z+=e,n.m+=e,e+=n.s+(r+=n.c)}(n);var u=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-u):n.z=u}else i&&(n.z=i.z+t(n._,i._));n.parent.A=function(n,e,r){if(e){for(var i,u=n,o=n,a=e,c=u.parent.children[0],f=u.m,s=o.m,l=a.m,h=c.m;a=Ep(a),u=Sp(u),a&&u;)c=Sp(c),(o=Ep(o)).a=n,(i=a.z+l-u.z-f+t(a._,u._))>0&&(Cp(Pp(a,n,r),n,i),f+=i,s+=i),l+=a.m,f+=u.m,h+=c.m,s+=o.m;a&&!Ep(o)&&(o.t=a,o.m+=l-s),u&&!Sp(c)&&(c.t=u,c.m+=f-h,r=n)}return r}(n,i,n.parent.A||r[0])}function o(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function a(t){t.x*=n,t.y=t.depth*e}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},Lp=function(t,n,e,r,i){for(var u,o=t.children,a=-1,c=o.length,f=t.value&&(i-e)/t.value;++a<c;)(u=o[a]).x0=n,u.x1=r,u.y0=e,u.y1=e+=u.value*f},Dp=(1+Math.sqrt(5))/2;function qp(t,n,e,r,i,u){for(var o,a,c,f,s,l,h,d,p,v,g,y=[],b=n.children,_=0,m=0,x=b.length,w=n.value;_<x;){c=i-e,f=u-r;do{s=b[m++].value}while(!s&&m<x);for(l=h=s,g=s*s*(v=Math.max(f/c,c/f)/(w*t)),p=Math.max(h/g,g/l);m<x;++m){if(s+=a=b[m].value,a<l&&(l=a),a>h&&(h=a),g=s*s*v,(d=Math.max(h/g,g/l))>p){s-=a;break}p=d}y.push(o={value:s,dice:c<f,children:b.slice(_,m)}),o.dice?_p(o,e,r,i,w?r+=f*s/w:u):Lp(o,e,r,w?e+=c*s/w:i,u),w-=s,_=m}return y}var Up=function t(n){function e(t,e,r,i,u){qp(n,t,e,r,i,u)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Dp),Op=function(){var t=Up,n=!1,e=1,r=1,i=[0],u=lp,o=lp,a=lp,c=lp,f=lp;function s(t){return t.x0=t.y0=0,t.x1=e,t.y1=r,t.eachBefore(l),i=[0],n&&t.eachBefore(bp),t}function l(n){var e=i[n.depth],r=n.x0+e,s=n.y0+e,l=n.x1-e,h=n.y1-e;l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),n.x0=r,n.y0=s,n.x1=l,n.y1=h,n.children&&(e=i[n.depth+1]=u(n)/2,r+=f(n)-e,s+=o(n)-e,(l-=a(n)-e)<r&&(r=l=(r+l)/2),(h-=c(n)-e)<s&&(s=h=(s+h)/2),t(n,r,s,l,h))}return s.round=function(t){return arguments.length?(n=!!t,s):n},s.size=function(t){return arguments.length?(e=+t[0],r=+t[1],s):[e,r]},s.tile=function(n){return arguments.length?(t=sp(n),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(u="function"==typeof t?t:hp(+t),s):u},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(o="function"==typeof t?t:hp(+t),s):o},s.paddingRight=function(t){return arguments.length?(a="function"==typeof t?t:hp(+t),s):a},s.paddingBottom=function(t){return arguments.length?(c="function"==typeof t?t:hp(+t),s):c},s.paddingLeft=function(t){return arguments.length?(f="function"==typeof t?t:hp(+t),s):f},s},Yp=function(t,n,e,r,i){var u,o,a=t.children,c=a.length,f=new Array(c+1);for(f[0]=o=u=0;u<c;++u)f[u+1]=o+=a[u].value;!function t(n,e,r,i,u,o,c){if(n>=e-1){var s=a[n];return s.x0=i,s.y0=u,s.x1=o,void(s.y1=c)}var l=f[n],h=r/2+l,d=n+1,p=e-1;for(;d<p;){var v=d+p>>>1;f[v]<h?d=v+1:p=v}h-f[d-1]<f[d]-h&&n+1<d&&--d;var g=f[d]-l,y=r-g;if(o-i>c-u){var b=(i*y+o*g)/r;t(n,d,g,i,u,b,c),t(d,e,y,b,u,o,c)}else{var _=(u*y+c*g)/r;t(n,d,g,i,u,o,_),t(d,e,y,i,_,o,c)}}(0,c,t.value,n,e,r,i)},Fp=function(t,n,e,r,i){(1&t.depth?Lp:_p)(t,n,e,r,i)},Bp=function t(n){function e(t,e,r,i,u){if((o=t._squarify)&&o.ratio===n)for(var o,a,c,f,s,l=-1,h=o.length,d=t.value;++l<h;){for(c=(a=o[l]).children,f=a.value=0,s=c.length;f<s;++f)a.value+=c[f].value;a.dice?_p(a,e,r,i,r+=(u-r)*a.value/d):Lp(a,e,r,e+=(i-e)*a.value/d,u),d-=a.value}else t._squarify=o=qp(n,t,e,r,i,u),o.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Dp),Ip=function(t){for(var n,e=-1,r=t.length,i=t[r-1],u=0;++e<r;)n=i,i=t[e],u+=n[1]*i[0]-n[0]*i[1];return u/2},jp=function(t){for(var n,e,r=-1,i=t.length,u=0,o=0,a=t[i-1],c=0;++r<i;)n=a,a=t[r],c+=e=n[0]*a[1]-a[0]*n[1],u+=(n[0]+a[0])*e,o+=(n[1]+a[1])*e;return[u/(c*=3),o/c]},Xp=function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])};function Hp(t,n){return t[0]-n[0]||t[1]-n[1]}function Gp(t){for(var n=t.length,e=[0,1],r=2,i=2;i<n;++i){for(;r>1&&Xp(t[e[r-2]],t[e[r-1]],t[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}var Vp=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort(Hp),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var u=Gp(r),o=Gp(i),a=o[0]===u[0],c=o[o.length-1]===u[u.length-1],f=[];for(n=u.length-1;n>=0;--n)f.push(t[r[u[n]][2]]);for(n=+a;n<o.length-c;++n)f.push(t[r[o[n]][2]]);return f},$p=function(t,n){for(var e,r,i=t.length,u=t[i-1],o=n[0],a=n[1],c=u[0],f=u[1],s=!1,l=0;l<i;++l)e=(u=t[l])[0],(r=u[1])>a!=f>a&&o<(c-e)*(a-r)/(f-r)+e&&(s=!s),c=e,f=r;return s},Wp=function(t){for(var n,e,r=-1,i=t.length,u=t[i-1],o=u[0],a=u[1],c=0;++r<i;)n=o,e=a,n-=o=(u=t[r])[0],e-=a=u[1],c+=Math.sqrt(n*n+e*e);return c},Zp=function(){return Math.random()},Qp=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,1===arguments.length?(e=t,t=0):e-=t,function(){return n()*e+t}}return e.source=t,e}(Zp),Jp=function t(n){function e(t,e){var r,i;return t=null==t?0:+t,e=null==e?1:+e,function(){var u;if(null!=r)u=r,r=null;else do{r=2*n()-1,u=2*n()-1,i=r*r+u*u}while(!i||i>1);return t+e*u*Math.sqrt(-2*Math.log(i)/i)}}return e.source=t,e}(Zp),Kp=function t(n){function e(){var t=Jp.source(n).apply(this,arguments);return function(){return Math.exp(t())}}return e.source=t,e}(Zp),tv=function t(n){function e(t){return function(){for(var e=0,r=0;r<t;++r)e+=n();return e}}return e.source=t,e}(Zp),nv=function t(n){function e(t){var e=tv.source(n)(t);return function(){return e()/t}}return e.source=t,e}(Zp),ev=function t(n){function e(t){return function(){return-Math.log(1-n())/t}}return e.source=t,e}(Zp);function rv(t,n){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(n).domain(t)}return this}function iv(t,n){switch(arguments.length){case 0:break;case 1:this.interpolator(t);break;default:this.interpolator(n).domain(t)}return this}var uv=Array.prototype,ov=uv.map,av=uv.slice,cv={name:"implicit"};function fv(){var t=Co(),n=[],e=[],r=cv;function i(i){var u=i+"",o=t.get(u);if(!o){if(r!==cv)return r;t.set(u,o=n.push(i))}return e[(o-1)%e.length]}return i.domain=function(e){if(!arguments.length)return n.slice();n=[],t=Co();for(var r,u,o=-1,a=e.length;++o<a;)t.has(u=(r=e[o])+"")||t.set(u,n.push(r));return i},i.range=function(t){return arguments.length?(e=av.call(t),i):e.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return fv(n,e).unknown(r)},rv.apply(i,arguments),i}function sv(){var t,n,e=fv().unknown(void 0),r=e.domain,i=e.range,u=[0,1],o=!1,a=0,c=0,f=.5;function s(){var e=r().length,s=u[1]<u[0],l=u[s-0],h=u[1-s];t=(h-l)/Math.max(1,e-a+2*c),o&&(t=Math.floor(t)),l+=(h-l-t*(e-a))*f,n=t*(1-a),o&&(l=Math.round(l),n=Math.round(n));var d=w(e).map(function(n){return l+t*n});return i(s?d.reverse():d)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),s()):r()},e.range=function(t){return arguments.length?(u=[+t[0],+t[1]],s()):u.slice()},e.rangeRound=function(t){return u=[+t[0],+t[1]],o=!0,s()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(o=!!t,s()):o},e.padding=function(t){return arguments.length?(a=Math.min(1,c=+t),s()):a},e.paddingInner=function(t){return arguments.length?(a=Math.min(1,t),s()):a},e.paddingOuter=function(t){return arguments.length?(c=+t,s()):c},e.align=function(t){return arguments.length?(f=Math.max(0,Math.min(1,t)),s()):f},e.copy=function(){return sv(r(),u).round(o).paddingInner(a).paddingOuter(c).align(f)},rv.apply(s(),arguments)}function lv(){return function t(n){var e=n.copy;return n.padding=n.paddingOuter,delete n.paddingInner,delete n.paddingOuter,n.copy=function(){return t(e())},n}(sv.apply(null,arguments).paddingInner(1))}var hv=function(t){return function(){return t}},dv=function(t){return+t},pv=[0,1];function vv(t){return t}function gv(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:hv(isNaN(n)?NaN:.5)}function yv(t){var n,e=t[0],r=t[t.length-1];return e>r&&(n=e,e=r,r=n),function(t){return Math.max(e,Math.min(r,t))}}function bv(t,n,e){var r=t[0],i=t[1],u=n[0],o=n[1];return i<r?(r=gv(i,r),u=e(o,u)):(r=gv(r,i),u=e(u,o)),function(t){return u(r(t))}}function _v(t,n,e){var r=Math.min(t.length,n.length)-1,i=new Array(r),u=new Array(r),o=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++o<r;)i[o]=gv(t[o],t[o+1]),u[o]=e(n[o],n[o+1]);return function(n){var e=c(t,n,1,r)-1;return u[e](i[e](n))}}function mv(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function xv(){var t,n,e,r,i,u,o=pv,a=pv,c=gr,f=vv;function s(){return r=Math.min(o.length,a.length)>2?_v:bv,i=u=null,l}function l(n){return isNaN(n=+n)?e:(i||(i=r(o.map(t),a,c)))(t(f(n)))}return l.invert=function(e){return f(n((u||(u=r(a,o.map(t),ar)))(e)))},l.domain=function(t){return arguments.length?(o=ov.call(t,dv),f===vv||(f=yv(o)),s()):o.slice()},l.range=function(t){return arguments.length?(a=av.call(t),s()):a.slice()},l.rangeRound=function(t){return a=av.call(t),c=_r,s()},l.clamp=function(t){return arguments.length?(f=t?yv(o):vv,l):f!==vv},l.interpolate=function(t){return arguments.length?(c=t,s()):c},l.unknown=function(t){return arguments.length?(e=t,l):e},function(e,r){return t=e,n=r,s()}}function wv(t,n){return xv()(t,n)}var Mv=function(t,n,e,r){var i,u=S(t,n,e);switch((r=mc(null==r?",f":r)).type){case"s":var o=Math.max(Math.abs(t),Math.abs(n));return null!=r.precision||isNaN(i=Lc(u,o))||(r.precision=i),Nc(r,o);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(i=Dc(u,Math.max(Math.abs(t),Math.abs(n))))||(r.precision=i-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(i=Rc(u))||(r.precision=i-2*("%"===r.type))}return Ac(r)};function Av(t){var n=t.domain;return t.ticks=function(t){var e=n();return k(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){var r=n();return Mv(r[0],r[r.length-1],null==t?10:t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),u=0,o=i.length-1,a=i[u],c=i[o];return c<a&&(r=a,a=c,c=r,r=u,u=o,o=r),(r=T(a,c,e))>0?r=T(a=Math.floor(a/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=T(a=Math.ceil(a*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[u]=Math.floor(a/r)*r,i[o]=Math.ceil(c/r)*r,n(i)):r<0&&(i[u]=Math.ceil(a*r)/r,i[o]=Math.floor(c*r)/r,n(i)),t},t}function Nv(){var t=wv(vv,vv);return t.copy=function(){return mv(t,Nv())},rv.apply(t,arguments),Av(t)}function kv(t){var n;function e(t){return isNaN(t=+t)?n:t}return e.invert=e,e.domain=e.range=function(n){return arguments.length?(t=ov.call(n,dv),e):t.slice()},e.unknown=function(t){return arguments.length?(n=t,e):n},e.copy=function(){return kv(t).unknown(n)},t=arguments.length?ov.call(t,dv):[0,1],Av(e)}var Tv=function(t,n){var e,r=0,i=(t=t.slice()).length-1,u=t[r],o=t[i];return o<u&&(e=r,r=i,i=e,e=u,u=o,o=e),t[r]=n.floor(u),t[i]=n.ceil(o),t};function Sv(t){return Math.log(t)}function Ev(t){return Math.exp(t)}function Cv(t){return-Math.log(-t)}function Pv(t){return-Math.exp(-t)}function zv(t){return isFinite(t)?+("1e"+t):t<0?0:t}function Rv(t){return function(n){return-t(-n)}}function Lv(t){var n,e,r=t(Sv,Ev),i=r.domain,u=10;function o(){return n=function(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}(u),e=function(t){return 10===t?zv:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}(u),i()[0]<0?(n=Rv(n),e=Rv(e),t(Cv,Pv)):t(Sv,Ev),r}return r.base=function(t){return arguments.length?(u=+t,o()):u},r.domain=function(t){return arguments.length?(i(t),o()):i()},r.ticks=function(t){var r,o=i(),a=o[0],c=o[o.length-1];(r=c<a)&&(h=a,a=c,c=h);var f,s,l,h=n(a),d=n(c),p=null==t?10:+t,v=[];if(!(u%1)&&d-h<p){if(h=Math.round(h)-1,d=Math.round(d)+1,a>0){for(;h<d;++h)for(s=1,f=e(h);s<u;++s)if(!((l=f*s)<a)){if(l>c)break;v.push(l)}}else for(;h<d;++h)for(s=u-1,f=e(h);s>=1;--s)if(!((l=f*s)<a)){if(l>c)break;v.push(l)}}else v=k(h,d,Math.min(d-h,p)).map(e);return r?v.reverse():v},r.tickFormat=function(t,i){if(null==i&&(i=10===u?".0e":","),"function"!=typeof i&&(i=Ac(i)),t===1/0)return i;null==t&&(t=10);var o=Math.max(1,u*t/r.ticks().length);return function(t){var r=t/e(Math.round(n(t)));return r*u<u-.5&&(r*=u),r<=o?i(t):""}},r.nice=function(){return i(Tv(i(),{floor:function(t){return e(Math.floor(n(t)))},ceil:function(t){return e(Math.ceil(n(t)))}}))},r}function Dv(){var t=Lv(xv()).domain([1,10]);return t.copy=function(){return mv(t,Dv()).base(t.base())},rv.apply(t,arguments),t}function qv(t){return function(n){return Math.sign(n)*Math.log1p(Math.abs(n/t))}}function Uv(t){return function(n){return Math.sign(n)*Math.expm1(Math.abs(n))*t}}function Ov(t){var n=1,e=t(qv(n),Uv(n));return e.constant=function(e){return arguments.length?t(qv(n=+e),Uv(n)):n},Av(e)}function Yv(){var t=Ov(xv());return t.copy=function(){return mv(t,Yv()).constant(t.constant())},rv.apply(t,arguments)}function Fv(t){return function(n){return n<0?-Math.pow(-n,t):Math.pow(n,t)}}function Bv(t){return t<0?-Math.sqrt(-t):Math.sqrt(t)}function Iv(t){return t<0?-t*t:t*t}function jv(t){var n=t(vv,vv),e=1;function r(){return 1===e?t(vv,vv):.5===e?t(Bv,Iv):t(Fv(e),Fv(1/e))}return n.exponent=function(t){return arguments.length?(e=+t,r()):e},Av(n)}function Xv(){var t=jv(xv());return t.copy=function(){return mv(t,Xv()).exponent(t.exponent())},rv.apply(t,arguments),t}function Hv(){return Xv.apply(null,arguments).exponent(.5)}function Gv(){var t,n=[],e=[],i=[];function u(){var t=0,r=Math.max(1,e.length);for(i=new Array(r-1);++t<r;)i[t-1]=P(n,t/r);return o}function o(n){return isNaN(n=+n)?t:e[c(i,n)]}return o.invertExtent=function(t){var r=e.indexOf(t);return r<0?[NaN,NaN]:[r>0?i[r-1]:n[0],r<i.length?i[r]:n[n.length-1]]},o.domain=function(t){if(!arguments.length)return n.slice();n=[];for(var e,i=0,o=t.length;i<o;++i)null==(e=t[i])||isNaN(e=+e)||n.push(e);return n.sort(r),u()},o.range=function(t){return arguments.length?(e=av.call(t),u()):e.slice()},o.unknown=function(n){return arguments.length?(t=n,o):t},o.quantiles=function(){return i.slice()},o.copy=function(){return Gv().domain(n).range(e).unknown(t)},rv.apply(o,arguments)}function Vv(){var t,n=0,e=1,r=1,i=[.5],u=[0,1];function o(n){return n<=n?u[c(i,n,0,r)]:t}function a(){var t=-1;for(i=new Array(r);++t<r;)i[t]=((t+1)*e-(t-r)*n)/(r+1);return o}return o.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],a()):[n,e]},o.range=function(t){return arguments.length?(r=(u=av.call(t)).length-1,a()):u.slice()},o.invertExtent=function(t){var o=u.indexOf(t);return o<0?[NaN,NaN]:o<1?[n,i[0]]:o>=r?[i[r-1],e]:[i[o-1],i[o]]},o.unknown=function(n){return arguments.length?(t=n,o):o},o.thresholds=function(){return i.slice()},o.copy=function(){return Vv().domain([n,e]).range(u).unknown(t)},rv.apply(Av(o),arguments)}function $v(){var t,n=[.5],e=[0,1],r=1;function i(i){return i<=i?e[c(n,i,0,r)]:t}return i.domain=function(t){return arguments.length?(n=av.call(t),r=Math.min(n.length,e.length-1),i):n.slice()},i.range=function(t){return arguments.length?(e=av.call(t),r=Math.min(n.length,e.length-1),i):e.slice()},i.invertExtent=function(t){var r=e.indexOf(t);return[n[r-1],n[r]]},i.unknown=function(n){return arguments.length?(t=n,i):t},i.copy=function(){return $v().domain(n).range(e).unknown(t)},rv.apply(i,arguments)}var Wv=new Date,Zv=new Date;function Qv(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,u){var o,a=[];if(e=i.ceil(e),u=null==u?1:Math.floor(u),!(e<r&&u>0))return a;do{a.push(o=new Date(+e)),n(e,u),t(e)}while(o<e&&e<r);return a},i.filter=function(e){return Qv(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return Wv.setTime(+n),Zv.setTime(+r),t(Wv),t(Zv),Math.floor(e(Wv,Zv))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var Jv=Qv(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});Jv.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Qv(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):Jv:null};var Kv=Jv,tg=Jv.range,ng=6e4,eg=6048e5,rg=Qv(function(t){t.setTime(t-t.getMilliseconds())},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),ig=rg,ug=rg.range,og=Qv(function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds())},function(t,n){t.setTime(+t+n*ng)},function(t,n){return(n-t)/ng},function(t){return t.getMinutes()}),ag=og,cg=og.range,fg=Qv(function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds()-t.getMinutes()*ng)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()}),sg=fg,lg=fg.range,hg=Qv(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*ng)/864e5},function(t){return t.getDate()-1}),dg=hg,pg=hg.range;function vg(t){return Qv(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*ng)/eg})}var gg=vg(0),yg=vg(1),bg=vg(2),_g=vg(3),mg=vg(4),xg=vg(5),wg=vg(6),Mg=gg.range,Ag=yg.range,Ng=bg.range,kg=_g.range,Tg=mg.range,Sg=xg.range,Eg=wg.range,Cg=Qv(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}),Pg=Cg,zg=Cg.range,Rg=Qv(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});Rg.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Qv(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var Lg=Rg,Dg=Rg.range,qg=Qv(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*ng)},function(t,n){return(n-t)/ng},function(t){return t.getUTCMinutes()}),Ug=qg,Og=qg.range,Yg=Qv(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()}),Fg=Yg,Bg=Yg.range,Ig=Qv(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1}),jg=Ig,Xg=Ig.range;function Hg(t){return Qv(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/eg})}var Gg=Hg(0),Vg=Hg(1),$g=Hg(2),Wg=Hg(3),Zg=Hg(4),Qg=Hg(5),Jg=Hg(6),Kg=Gg.range,ty=Vg.range,ny=$g.range,ey=Wg.range,ry=Zg.range,iy=Qg.range,uy=Jg.range,oy=Qv(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}),ay=oy,cy=oy.range,fy=Qv(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});fy.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Qv(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var sy=fy,ly=fy.range;function hy(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function dy(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function py(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}function vy(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,u=t.days,o=t.shortDays,a=t.months,c=t.shortMonths,f=Ty(i),s=Sy(i),l=Ty(u),h=Sy(u),d=Ty(o),p=Sy(o),v=Ty(a),g=Sy(a),y=Ty(c),b=Sy(c),_={a:function(t){return o[t.getDay()]},A:function(t){return u[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:$y,e:$y,f:Ky,H:Wy,I:Zy,j:Qy,L:Jy,m:tb,M:nb,p:function(t){return i[+(t.getHours()>=12)]},Q:Eb,s:Cb,S:eb,u:rb,U:ib,V:ub,w:ob,W:ab,x:null,X:null,y:cb,Y:fb,Z:sb,"%":Sb},m={a:function(t){return o[t.getUTCDay()]},A:function(t){return u[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:lb,e:lb,f:gb,H:hb,I:db,j:pb,L:vb,m:yb,M:bb,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:Eb,s:Cb,S:_b,u:mb,U:xb,V:wb,w:Mb,W:Ab,x:null,X:null,y:Nb,Y:kb,Z:Tb,"%":Sb},x={a:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=y.exec(n.slice(e));return r?(t.m=b[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=g[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return A(t,n,e,r)},d:Oy,e:Oy,f:Xy,H:Fy,I:Fy,j:Yy,L:jy,m:Uy,M:By,p:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},Q:Gy,s:Vy,S:Iy,u:Cy,U:Py,V:zy,w:Ey,W:Ry,x:function(t,n,r){return A(t,e,n,r)},X:function(t,n,e){return A(t,r,n,e)},y:Dy,Y:Ly,Z:qy,"%":Hy};function w(t,n){return function(e){var r,i,u,o=[],a=-1,c=0,f=t.length;for(e instanceof Date||(e=new Date(+e));++a<f;)37===t.charCodeAt(a)&&(o.push(t.slice(c,a)),null!=(i=xy[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(u=n[r])&&(r=u(e,i)),o.push(r),c=a+1);return o.push(t.slice(c,a)),o.join("")}}function M(t,n){return function(e){var r,i,u=py(1900);if(A(u,t,e+="",0)!=e.length)return null;if("Q"in u)return new Date(u.Q);if("p"in u&&(u.H=u.H%12+12*u.p),"V"in u){if(u.V<1||u.V>53)return null;"w"in u||(u.w=1),"Z"in u?(i=(r=dy(py(u.y))).getUTCDay(),r=i>4||0===i?Vg.ceil(r):Vg(r),r=jg.offset(r,7*(u.V-1)),u.y=r.getUTCFullYear(),u.m=r.getUTCMonth(),u.d=r.getUTCDate()+(u.w+6)%7):(i=(r=n(py(u.y))).getDay(),r=i>4||0===i?yg.ceil(r):yg(r),r=dg.offset(r,7*(u.V-1)),u.y=r.getFullYear(),u.m=r.getMonth(),u.d=r.getDate()+(u.w+6)%7)}else("W"in u||"U"in u)&&("w"in u||(u.w="u"in u?u.u%7:"W"in u?1:0),i="Z"in u?dy(py(u.y)).getUTCDay():n(py(u.y)).getDay(),u.m=0,u.d="W"in u?(u.w+6)%7+7*u.W-(i+5)%7:u.w+7*u.U-(i+6)%7);return"Z"in u?(u.H+=u.Z/100|0,u.M+=u.Z%100,dy(u)):n(u)}}function A(t,n,e,r){for(var i,u,o=0,a=n.length,c=e.length;o<a;){if(r>=c)return-1;if(37===(i=n.charCodeAt(o++))){if(i=n.charAt(o++),!(u=x[i in xy?n.charAt(o++):i])||(r=u(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return _.x=w(e,_),_.X=w(r,_),_.c=w(n,_),m.x=w(e,m),m.X=w(r,m),m.c=w(n,m),{format:function(t){var n=w(t+="",_);return n.toString=function(){return t},n},parse:function(t){var n=M(t+="",hy);return n.toString=function(){return t},n},utcFormat:function(t){var n=w(t+="",m);return n.toString=function(){return t},n},utcParse:function(t){var n=M(t,dy);return n.toString=function(){return t},n}}}var gy,yy,by,_y,my,xy={"-":"",_:" ",0:"0"},wy=/^\s*\d+/,My=/^%/,Ay=/[\\^$*+?|[\]().{}]/g;function Ny(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",u=i.length;return r+(u<e?new Array(e-u+1).join(n)+i:i)}function ky(t){return t.replace(Ay,"\\$&")}function Ty(t){return new RegExp("^(?:"+t.map(ky).join("|")+")","i")}function Sy(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function Ey(t,n,e){var r=wy.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function Cy(t,n,e){var r=wy.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function Py(t,n,e){var r=wy.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function zy(t,n,e){var r=wy.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function Ry(t,n,e){var r=wy.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function Ly(t,n,e){var r=wy.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Dy(t,n,e){var r=wy.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function qy(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function Uy(t,n,e){var r=wy.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function Oy(t,n,e){var r=wy.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Yy(t,n,e){var r=wy.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Fy(t,n,e){var r=wy.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function By(t,n,e){var r=wy.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Iy(t,n,e){var r=wy.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function jy(t,n,e){var r=wy.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Xy(t,n,e){var r=wy.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Hy(t,n,e){var r=My.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Gy(t,n,e){var r=wy.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function Vy(t,n,e){var r=wy.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function $y(t,n){return Ny(t.getDate(),n,2)}function Wy(t,n){return Ny(t.getHours(),n,2)}function Zy(t,n){return Ny(t.getHours()%12||12,n,2)}function Qy(t,n){return Ny(1+dg.count(Lg(t),t),n,3)}function Jy(t,n){return Ny(t.getMilliseconds(),n,3)}function Ky(t,n){return Jy(t,n)+"000"}function tb(t,n){return Ny(t.getMonth()+1,n,2)}function nb(t,n){return Ny(t.getMinutes(),n,2)}function eb(t,n){return Ny(t.getSeconds(),n,2)}function rb(t){var n=t.getDay();return 0===n?7:n}function ib(t,n){return Ny(gg.count(Lg(t),t),n,2)}function ub(t,n){var e=t.getDay();return t=e>=4||0===e?mg(t):mg.ceil(t),Ny(mg.count(Lg(t),t)+(4===Lg(t).getDay()),n,2)}function ob(t){return t.getDay()}function ab(t,n){return Ny(yg.count(Lg(t),t),n,2)}function cb(t,n){return Ny(t.getFullYear()%100,n,2)}function fb(t,n){return Ny(t.getFullYear()%1e4,n,4)}function sb(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+Ny(n/60|0,"0",2)+Ny(n%60,"0",2)}function lb(t,n){return Ny(t.getUTCDate(),n,2)}function hb(t,n){return Ny(t.getUTCHours(),n,2)}function db(t,n){return Ny(t.getUTCHours()%12||12,n,2)}function pb(t,n){return Ny(1+jg.count(sy(t),t),n,3)}function vb(t,n){return Ny(t.getUTCMilliseconds(),n,3)}function gb(t,n){return vb(t,n)+"000"}function yb(t,n){return Ny(t.getUTCMonth()+1,n,2)}function bb(t,n){return Ny(t.getUTCMinutes(),n,2)}function _b(t,n){return Ny(t.getUTCSeconds(),n,2)}function mb(t){var n=t.getUTCDay();return 0===n?7:n}function xb(t,n){return Ny(Gg.count(sy(t),t),n,2)}function wb(t,n){var e=t.getUTCDay();return t=e>=4||0===e?Zg(t):Zg.ceil(t),Ny(Zg.count(sy(t),t)+(4===sy(t).getUTCDay()),n,2)}function Mb(t){return t.getUTCDay()}function Ab(t,n){return Ny(Vg.count(sy(t),t),n,2)}function Nb(t,n){return Ny(t.getUTCFullYear()%100,n,2)}function kb(t,n){return Ny(t.getUTCFullYear()%1e4,n,4)}function Tb(){return"+0000"}function Sb(){return"%"}function Eb(t){return+t}function Cb(t){return Math.floor(+t/1e3)}function Pb(t){return gy=vy(t),yy=gy.format,by=gy.parse,_y=gy.utcFormat,my=gy.utcParse,gy}Pb({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var zb=Date.prototype.toISOString?function(t){return t.toISOString()}:_y("%Y-%m-%dT%H:%M:%S.%LZ");var Rb=+new Date("2000-01-01T00:00:00.000Z")?function(t){var n=new Date(t);return isNaN(n)?null:n}:my("%Y-%m-%dT%H:%M:%S.%LZ"),Lb=1e3,Db=60*Lb,qb=60*Db,Ub=24*qb,Ob=7*Ub,Yb=30*Ub,Fb=365*Ub;function Bb(t){return new Date(t)}function Ib(t){return t instanceof Date?+t:+new Date(+t)}function jb(t,n,e,r,u,o,a,c,f){var s=wv(vv,vv),l=s.invert,h=s.domain,d=f(".%L"),p=f(":%S"),v=f("%I:%M"),g=f("%I %p"),y=f("%a %d"),b=f("%b %d"),_=f("%B"),m=f("%Y"),x=[[a,1,Lb],[a,5,5*Lb],[a,15,15*Lb],[a,30,30*Lb],[o,1,Db],[o,5,5*Db],[o,15,15*Db],[o,30,30*Db],[u,1,qb],[u,3,3*qb],[u,6,6*qb],[u,12,12*qb],[r,1,Ub],[r,2,2*Ub],[e,1,Ob],[n,1,Yb],[n,3,3*Yb],[t,1,Fb]];function w(i){return(a(i)<i?d:o(i)<i?p:u(i)<i?v:r(i)<i?g:n(i)<i?e(i)<i?y:b:t(i)<i?_:m)(i)}function M(n,e,r,u){if(null==n&&(n=10),"number"==typeof n){var o=Math.abs(r-e)/n,a=i(function(t){return t[2]}).right(x,o);a===x.length?(u=S(e/Fb,r/Fb,n),n=t):a?(u=(a=x[o/x[a-1][2]<x[a][2]/o?a-1:a])[1],n=a[0]):(u=Math.max(S(e,r,n),1),n=c)}return null==u?n:n.every(u)}return s.invert=function(t){return new Date(l(t))},s.domain=function(t){return arguments.length?h(ov.call(t,Ib)):h().map(Bb)},s.ticks=function(t,n){var e,r=h(),i=r[0],u=r[r.length-1],o=u<i;return o&&(e=i,i=u,u=e),e=(e=M(t,i,u,n))?e.range(i,u+1):[],o?e.reverse():e},s.tickFormat=function(t,n){return null==n?w:f(n)},s.nice=function(t,n){var e=h();return(t=M(t,e[0],e[e.length-1],n))?h(Tv(e,t)):s},s.copy=function(){return mv(s,jb(t,n,e,r,u,o,a,c,f))},s}var Xb=function(){return rv.apply(jb(Lg,Pg,gg,dg,sg,ag,ig,Kv,yy).domain([new Date(2e3,0,1),new Date(2e3,0,2)]),arguments)},Hb=function(){return rv.apply(jb(sy,ay,Gg,jg,Fg,Ug,ig,Kv,_y).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)};function Gb(){var t,n,e,r,i,u=0,o=1,a=vv,c=!1;function f(n){return isNaN(n=+n)?i:a(0===e?.5:(n=(r(n)-t)*e,c?Math.max(0,Math.min(1,n)):n))}return f.domain=function(i){return arguments.length?(t=r(u=+i[0]),n=r(o=+i[1]),e=t===n?0:1/(n-t),f):[u,o]},f.clamp=function(t){return arguments.length?(c=!!t,f):c},f.interpolator=function(t){return arguments.length?(a=t,f):a},f.unknown=function(t){return arguments.length?(i=t,f):i},function(i){return r=i,t=i(u),n=i(o),e=t===n?0:1/(n-t),f}}function Vb(t,n){return n.domain(t.domain()).interpolator(t.interpolator()).clamp(t.clamp()).unknown(t.unknown())}function $b(){var t=Av(Gb()(vv));return t.copy=function(){return Vb(t,$b())},iv.apply(t,arguments)}function Wb(){var t=Lv(Gb()).domain([1,10]);return t.copy=function(){return Vb(t,Wb()).base(t.base())},iv.apply(t,arguments)}function Zb(){var t=Ov(Gb());return t.copy=function(){return Vb(t,Zb()).constant(t.constant())},iv.apply(t,arguments)}function Qb(){var t=jv(Gb());return t.copy=function(){return Vb(t,Qb()).exponent(t.exponent())},iv.apply(t,arguments)}function Jb(){return Qb.apply(null,arguments).exponent(.5)}function Kb(){var t=[],n=vv;function e(e){if(!isNaN(e=+e))return n((c(t,e)-1)/(t.length-1))}return e.domain=function(n){if(!arguments.length)return t.slice();t=[];for(var i,u=0,o=n.length;u<o;++u)null==(i=n[u])||isNaN(i=+i)||t.push(i);return t.sort(r),e},e.interpolator=function(t){return arguments.length?(n=t,e):n},e.copy=function(){return Kb(n).domain(t)},iv.apply(e,arguments)}function t_(){var t,n,e,r,i,u,o,a=0,c=.5,f=1,s=vv,l=!1;function h(t){return isNaN(t=+t)?o:(t=.5+((t=+u(t))-n)*(t<n?r:i),s(l?Math.max(0,Math.min(1,t)):t))}return h.domain=function(o){return arguments.length?(t=u(a=+o[0]),n=u(c=+o[1]),e=u(f=+o[2]),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),h):[a,c,f]},h.clamp=function(t){return arguments.length?(l=!!t,h):l},h.interpolator=function(t){return arguments.length?(s=t,h):s},h.unknown=function(t){return arguments.length?(o=t,h):o},function(o){return u=o,t=o(a),n=o(c),e=o(f),r=t===n?0:.5/(n-t),i=n===e?0:.5/(e-n),h}}function n_(){var t=Av(t_()(vv));return t.copy=function(){return Vb(t,n_())},iv.apply(t,arguments)}function e_(){var t=Lv(t_()).domain([.1,1,10]);return t.copy=function(){return Vb(t,e_()).base(t.base())},iv.apply(t,arguments)}function r_(){var t=Ov(t_());return t.copy=function(){return Vb(t,r_()).constant(t.constant())},iv.apply(t,arguments)}function i_(){var t=jv(t_());return t.copy=function(){return Vb(t,i_()).exponent(t.exponent())},iv.apply(t,arguments)}function u_(){return i_.apply(null,arguments).exponent(.5)}var o_=function(t){for(var n=t.length/6|0,e=new Array(n),r=0;r<n;)e[r]="#"+t.slice(6*r,6*++r);return e},a_=o_("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),c_=o_("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),f_=o_("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),s_=o_("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),l_=o_("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),h_=o_("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),d_=o_("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),p_=o_("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),v_=o_("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),g_=function(t){return rr(t[t.length-1])},y_=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(o_),b_=g_(y_),__=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(o_),m_=g_(__),x_=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(o_),w_=g_(x_),M_=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(o_),A_=g_(M_),N_=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(o_),k_=g_(N_),T_=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(o_),S_=g_(T_),E_=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(o_),C_=g_(E_),P_=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(o_),z_=g_(P_),R_=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(o_),L_=g_(R_),D_=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(o_),q_=g_(D_),U_=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(o_),O_=g_(U_),Y_=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(o_),F_=g_(Y_),B_=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(o_),I_=g_(B_),j_=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(o_),X_=g_(j_),H_=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(o_),G_=g_(H_),V_=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(o_),$_=g_(V_),W_=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(o_),Z_=g_(W_),Q_=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(o_),J_=g_(Q_),K_=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(o_),tm=g_(K_),nm=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(o_),em=g_(nm),rm=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(o_),im=g_(rm),um=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(o_),om=g_(um),am=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(o_),cm=g_(am),fm=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(o_),sm=g_(fm),lm=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(o_),hm=g_(lm),dm=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(o_),pm=g_(dm),vm=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(o_),gm=g_(vm),ym=Or(He(300,.5,0),He(-240,.5,1)),bm=Or(He(-100,.75,.35),He(80,1.5,.8)),_m=Or(He(260,.75,.35),He(80,1.5,.8)),mm=He(),xm=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return mm.h=360*t-100,mm.s=1.5-1.5*n,mm.l=.8-.9*n,mm+""},wm=se(),Mm=Math.PI/3,Am=2*Math.PI/3,Nm=function(t){var n;return t=(.5-t)*Math.PI,wm.r=255*(n=Math.sin(t))*n,wm.g=255*(n=Math.sin(t+Mm))*n,wm.b=255*(n=Math.sin(t+Am))*n,wm+""};function km(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}var Tm=km(o_("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),Sm=km(o_("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),Em=km(o_("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),Cm=km(o_("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),Pm=function(t){return function(){return t}},zm=Math.abs,Rm=Math.atan2,Lm=Math.cos,Dm=Math.max,qm=Math.min,Um=Math.sin,Om=Math.sqrt,Ym=1e-12,Fm=Math.PI,Bm=Fm/2,Im=2*Fm;function jm(t){return t>=1?Bm:t<=-1?-Bm:Math.asin(t)}function Xm(t){return t.innerRadius}function Hm(t){return t.outerRadius}function Gm(t){return t.startAngle}function Vm(t){return t.endAngle}function $m(t){return t&&t.padAngle}function Wm(t,n,e,r,i,u,o){var a=t-e,c=n-r,f=(o?u:-u)/Om(a*a+c*c),s=f*c,l=-f*a,h=t+s,d=n+l,p=e+s,v=r+l,g=(h+p)/2,y=(d+v)/2,b=p-h,_=v-d,m=b*b+_*_,x=i-u,w=h*v-p*d,M=(_<0?-1:1)*Om(Dm(0,x*x*m-w*w)),A=(w*_-b*M)/m,N=(-w*b-_*M)/m,k=(w*_+b*M)/m,T=(-w*b+_*M)/m,S=A-g,E=N-y,C=k-g,P=T-y;return S*S+E*E>C*C+P*P&&(A=k,N=T),{cx:A,cy:N,x01:-s,y01:-l,x11:A*(i/x-1),y11:N*(i/x-1)}}var Zm=function(){var t=Xm,n=Hm,e=Pm(0),r=null,i=Gm,u=Vm,o=$m,a=null;function c(){var c,f,s,l=+t.apply(this,arguments),h=+n.apply(this,arguments),d=i.apply(this,arguments)-Bm,p=u.apply(this,arguments)-Bm,v=zm(p-d),g=p>d;if(a||(a=c=xo()),h<l&&(f=h,h=l,l=f),h>Ym)if(v>Im-Ym)a.moveTo(h*Lm(d),h*Um(d)),a.arc(0,0,h,d,p,!g),l>Ym&&(a.moveTo(l*Lm(p),l*Um(p)),a.arc(0,0,l,p,d,g));else{var y,b,_=d,m=p,x=d,w=p,M=v,A=v,N=o.apply(this,arguments)/2,k=N>Ym&&(r?+r.apply(this,arguments):Om(l*l+h*h)),T=qm(zm(h-l)/2,+e.apply(this,arguments)),S=T,E=T;if(k>Ym){var C=jm(k/l*Um(N)),P=jm(k/h*Um(N));(M-=2*C)>Ym?(x+=C*=g?1:-1,w-=C):(M=0,x=w=(d+p)/2),(A-=2*P)>Ym?(_+=P*=g?1:-1,m-=P):(A=0,_=m=(d+p)/2)}var z=h*Lm(_),R=h*Um(_),L=l*Lm(w),D=l*Um(w);if(T>Ym){var q,U=h*Lm(m),O=h*Um(m),Y=l*Lm(x),F=l*Um(x);if(v<Fm&&(q=function(t,n,e,r,i,u,o,a){var c=e-t,f=r-n,s=o-i,l=a-u,h=l*c-s*f;if(!(h*h<Ym))return[t+(h=(s*(n-u)-l*(t-i))/h)*c,n+h*f]}(z,R,Y,F,U,O,L,D))){var B=z-q[0],I=R-q[1],j=U-q[0],X=O-q[1],H=1/Um(((s=(B*j+I*X)/(Om(B*B+I*I)*Om(j*j+X*X)))>1?0:s<-1?Fm:Math.acos(s))/2),G=Om(q[0]*q[0]+q[1]*q[1]);S=qm(T,(l-G)/(H-1)),E=qm(T,(h-G)/(H+1))}}A>Ym?E>Ym?(y=Wm(Y,F,z,R,h,E,g),b=Wm(U,O,L,D,h,E,g),a.moveTo(y.cx+y.x01,y.cy+y.y01),E<T?a.arc(y.cx,y.cy,E,Rm(y.y01,y.x01),Rm(b.y01,b.x01),!g):(a.arc(y.cx,y.cy,E,Rm(y.y01,y.x01),Rm(y.y11,y.x11),!g),a.arc(0,0,h,Rm(y.cy+y.y11,y.cx+y.x11),Rm(b.cy+b.y11,b.cx+b.x11),!g),a.arc(b.cx,b.cy,E,Rm(b.y11,b.x11),Rm(b.y01,b.x01),!g))):(a.moveTo(z,R),a.arc(0,0,h,_,m,!g)):a.moveTo(z,R),l>Ym&&M>Ym?S>Ym?(y=Wm(L,D,U,O,l,-S,g),b=Wm(z,R,Y,F,l,-S,g),a.lineTo(y.cx+y.x01,y.cy+y.y01),S<T?a.arc(y.cx,y.cy,S,Rm(y.y01,y.x01),Rm(b.y01,b.x01),!g):(a.arc(y.cx,y.cy,S,Rm(y.y01,y.x01),Rm(y.y11,y.x11),!g),a.arc(0,0,l,Rm(y.cy+y.y11,y.cx+y.x11),Rm(b.cy+b.y11,b.cx+b.x11),g),a.arc(b.cx,b.cy,S,Rm(b.y11,b.x11),Rm(b.y01,b.x01),!g))):a.arc(0,0,l,w,x,g):a.lineTo(L,D)}else a.moveTo(0,0);if(a.closePath(),c)return a=null,c+""||null}return c.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +u.apply(this,arguments))/2-Fm/2;return[Lm(r)*e,Um(r)*e]},c.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:Pm(+n),c):t},c.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:Pm(+t),c):n},c.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:Pm(+t),c):e},c.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:Pm(+t),c):r},c.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:Pm(+t),c):i},c.endAngle=function(t){return arguments.length?(u="function"==typeof t?t:Pm(+t),c):u},c.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:Pm(+t),c):o},c.context=function(t){return arguments.length?(a=null==t?null:t,c):a},c};function Qm(t){this._context=t}Qm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var Jm=function(t){return new Qm(t)};function Km(t){return t[0]}function tx(t){return t[1]}var nx=function(){var t=Km,n=tx,e=Pm(!0),r=null,i=Jm,u=null;function o(o){var a,c,f,s=o.length,l=!1;for(null==r&&(u=i(f=xo())),a=0;a<=s;++a)!(a<s&&e(c=o[a],a,o))===l&&((l=!l)?u.lineStart():u.lineEnd()),l&&u.point(+t(c,a,o),+n(c,a,o));if(f)return u=null,f+""||null}return o.x=function(n){return arguments.length?(t="function"==typeof n?n:Pm(+n),o):t},o.y=function(t){return arguments.length?(n="function"==typeof t?t:Pm(+t),o):n},o.defined=function(t){return arguments.length?(e="function"==typeof t?t:Pm(!!t),o):e},o.curve=function(t){return arguments.length?(i=t,null!=r&&(u=i(r)),o):i},o.context=function(t){return arguments.length?(null==t?r=u=null:u=i(r=t),o):r},o},ex=function(){var t=Km,n=null,e=Pm(0),r=tx,i=Pm(!0),u=null,o=Jm,a=null;function c(c){var f,s,l,h,d,p=c.length,v=!1,g=new Array(p),y=new Array(p);for(null==u&&(a=o(d=xo())),f=0;f<=p;++f){if(!(f<p&&i(h=c[f],f,c))===v)if(v=!v)s=f,a.areaStart(),a.lineStart();else{for(a.lineEnd(),a.lineStart(),l=f-1;l>=s;--l)a.point(g[l],y[l]);a.lineEnd(),a.areaEnd()}v&&(g[f]=+t(h,f,c),y[f]=+e(h,f,c),a.point(n?+n(h,f,c):g[f],r?+r(h,f,c):y[f]))}if(d)return a=null,d+""||null}function f(){return nx().defined(i).curve(o).context(u)}return c.x=function(e){return arguments.length?(t="function"==typeof e?e:Pm(+e),n=null,c):t},c.x0=function(n){return arguments.length?(t="function"==typeof n?n:Pm(+n),c):t},c.x1=function(t){return arguments.length?(n=null==t?null:"function"==typeof t?t:Pm(+t),c):n},c.y=function(t){return arguments.length?(e="function"==typeof t?t:Pm(+t),r=null,c):e},c.y0=function(t){return arguments.length?(e="function"==typeof t?t:Pm(+t),c):e},c.y1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:Pm(+t),c):r},c.lineX0=c.lineY0=function(){return f().x(t).y(e)},c.lineY1=function(){return f().x(t).y(r)},c.lineX1=function(){return f().x(n).y(e)},c.defined=function(t){return arguments.length?(i="function"==typeof t?t:Pm(!!t),c):i},c.curve=function(t){return arguments.length?(o=t,null!=u&&(a=o(u)),c):o},c.context=function(t){return arguments.length?(null==t?u=a=null:a=o(u=t),c):u},c},rx=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},ix=function(t){return t},ux=function(){var t=ix,n=rx,e=null,r=Pm(0),i=Pm(Im),u=Pm(0);function o(o){var a,c,f,s,l,h=o.length,d=0,p=new Array(h),v=new Array(h),g=+r.apply(this,arguments),y=Math.min(Im,Math.max(-Im,i.apply(this,arguments)-g)),b=Math.min(Math.abs(y)/h,u.apply(this,arguments)),_=b*(y<0?-1:1);for(a=0;a<h;++a)(l=v[p[a]=a]=+t(o[a],a,o))>0&&(d+=l);for(null!=n?p.sort(function(t,e){return n(v[t],v[e])}):null!=e&&p.sort(function(t,n){return e(o[t],o[n])}),a=0,f=d?(y-h*_)/d:0;a<h;++a,g=s)c=p[a],s=g+((l=v[c])>0?l*f:0)+_,v[c]={data:o[c],index:a,value:l,startAngle:g,endAngle:s,padAngle:b};return v}return o.value=function(n){return arguments.length?(t="function"==typeof n?n:Pm(+n),o):t},o.sortValues=function(t){return arguments.length?(n=t,e=null,o):n},o.sort=function(t){return arguments.length?(e=t,n=null,o):e},o.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:Pm(+t),o):r},o.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:Pm(+t),o):i},o.padAngle=function(t){return arguments.length?(u="function"==typeof t?t:Pm(+t),o):u},o},ox=cx(Jm);function ax(t){this._curve=t}function cx(t){function n(n){return new ax(t(n))}return n._curve=t,n}function fx(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(cx(t)):n()._curve},t}ax.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var sx=function(){return fx(nx().curve(ox))},lx=function(){var t=ex().curve(ox),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,u=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return fx(e())},delete t.lineX0,t.lineEndAngle=function(){return fx(r())},delete t.lineX1,t.lineInnerRadius=function(){return fx(i())},delete t.lineY0,t.lineOuterRadius=function(){return fx(u())},delete t.lineY1,t.curve=function(t){return arguments.length?n(cx(t)):n()._curve},t},hx=function(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]},dx=Array.prototype.slice;function px(t){return t.source}function vx(t){return t.target}function gx(t){var n=px,e=vx,r=Km,i=tx,u=null;function o(){var o,a=dx.call(arguments),c=n.apply(this,a),f=e.apply(this,a);if(u||(u=o=xo()),t(u,+r.apply(this,(a[0]=c,a)),+i.apply(this,a),+r.apply(this,(a[0]=f,a)),+i.apply(this,a)),o)return u=null,o+""||null}return o.source=function(t){return arguments.length?(n=t,o):n},o.target=function(t){return arguments.length?(e=t,o):e},o.x=function(t){return arguments.length?(r="function"==typeof t?t:Pm(+t),o):r},o.y=function(t){return arguments.length?(i="function"==typeof t?t:Pm(+t),o):i},o.context=function(t){return arguments.length?(u=null==t?null:t,o):u},o}function yx(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n=(n+r)/2,e,n,i,r,i)}function bx(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n,e=(e+i)/2,r,e,r,i)}function _x(t,n,e,r,i){var u=hx(n,e),o=hx(n,e=(e+i)/2),a=hx(r,e),c=hx(r,i);t.moveTo(u[0],u[1]),t.bezierCurveTo(o[0],o[1],a[0],a[1],c[0],c[1])}function mx(){return gx(yx)}function xx(){return gx(bx)}function wx(){var t=gx(_x);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}var Mx={draw:function(t,n){var e=Math.sqrt(n/Fm);t.moveTo(e,0),t.arc(0,0,e,0,Im)}},Ax={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},Nx=Math.sqrt(1/3),kx=2*Nx,Tx={draw:function(t,n){var e=Math.sqrt(n/kx),r=e*Nx;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},Sx=Math.sin(Fm/10)/Math.sin(7*Fm/10),Ex=Math.sin(Im/10)*Sx,Cx=-Math.cos(Im/10)*Sx,Px={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),r=Ex*e,i=Cx*e;t.moveTo(0,-e),t.lineTo(r,i);for(var u=1;u<5;++u){var o=Im*u/5,a=Math.cos(o),c=Math.sin(o);t.lineTo(c*e,-a*e),t.lineTo(a*r-c*i,c*r+a*i)}t.closePath()}},zx={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},Rx=Math.sqrt(3),Lx={draw:function(t,n){var e=-Math.sqrt(n/(3*Rx));t.moveTo(0,2*e),t.lineTo(-Rx*e,-e),t.lineTo(Rx*e,-e),t.closePath()}},Dx=Math.sqrt(3)/2,qx=1/Math.sqrt(12),Ux=3*(qx/2+1),Ox={draw:function(t,n){var e=Math.sqrt(n/Ux),r=e/2,i=e*qx,u=r,o=e*qx+e,a=-u,c=o;t.moveTo(r,i),t.lineTo(u,o),t.lineTo(a,c),t.lineTo(-.5*r-Dx*i,Dx*r+-.5*i),t.lineTo(-.5*u-Dx*o,Dx*u+-.5*o),t.lineTo(-.5*a-Dx*c,Dx*a+-.5*c),t.lineTo(-.5*r+Dx*i,-.5*i-Dx*r),t.lineTo(-.5*u+Dx*o,-.5*o-Dx*u),t.lineTo(-.5*a+Dx*c,-.5*c-Dx*a),t.closePath()}},Yx=[Mx,Ax,Tx,zx,Px,Lx,Ox],Fx=function(){var t=Pm(Mx),n=Pm(64),e=null;function r(){var r;if(e||(e=r=xo()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),r)return e=null,r+""||null}return r.type=function(n){return arguments.length?(t="function"==typeof n?n:Pm(n),r):t},r.size=function(t){return arguments.length?(n="function"==typeof t?t:Pm(+t),r):n},r.context=function(t){return arguments.length?(e=null==t?null:t,r):e},r},Bx=function(){};function Ix(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function jx(t){this._context=t}jx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Ix(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Ix(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Xx=function(t){return new jx(t)};function Hx(t){this._context=t}Hx.prototype={areaStart:Bx,areaEnd:Bx,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:Ix(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Gx=function(t){return new Hx(t)};function Vx(t){this._context=t}Vx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:Ix(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var $x=function(t){return new Vx(t)};function Wx(t,n){this._basis=new jx(t),this._beta=n}Wx.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],u=n[0],o=t[e]-i,a=n[e]-u,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*t[c]+(1-this._beta)*(i+r*o),this._beta*n[c]+(1-this._beta)*(u+r*a));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var Zx=function t(n){function e(t){return 1===n?new jx(t):new Wx(t,n)}return e.beta=function(n){return t(+n)},e}(.85);function Qx(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function Jx(t,n){this._context=t,this._k=(1-n)/6}Jx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:Qx(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:Qx(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Kx=function t(n){function e(t){return new Jx(t,n)}return e.tension=function(n){return t(+n)},e}(0);function tw(t,n){this._context=t,this._k=(1-n)/6}tw.prototype={areaStart:Bx,areaEnd:Bx,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Qx(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var nw=function t(n){function e(t){return new tw(t,n)}return e.tension=function(n){return t(+n)},e}(0);function ew(t,n){this._context=t,this._k=(1-n)/6}ew.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Qx(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var rw=function t(n){function e(t){return new ew(t,n)}return e.tension=function(n){return t(+n)},e}(0);function iw(t,n,e){var r=t._x1,i=t._y1,u=t._x2,o=t._y2;if(t._l01_a>Ym){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,i=(i*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>Ym){var f=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,s=3*t._l23_a*(t._l23_a+t._l12_a);u=(u*f+t._x1*t._l23_2a-n*t._l12_2a)/s,o=(o*f+t._y1*t._l23_2a-e*t._l12_2a)/s}t._context.bezierCurveTo(r,i,u,o,t._x2,t._y2)}function uw(t,n){this._context=t,this._alpha=n}uw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:iw(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var ow=function t(n){function e(t){return n?new uw(t,n):new Jx(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function aw(t,n){this._context=t,this._alpha=n}aw.prototype={areaStart:Bx,areaEnd:Bx,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:iw(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var cw=function t(n){function e(t){return n?new aw(t,n):new tw(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function fw(t,n){this._context=t,this._alpha=n}fw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:iw(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var sw=function t(n){function e(t){return n?new fw(t,n):new ew(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function lw(t){this._context=t}lw.prototype={areaStart:Bx,areaEnd:Bx,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}};var hw=function(t){return new lw(t)};function dw(t){return t<0?-1:1}function pw(t,n,e){var r=t._x1-t._x0,i=n-t._x1,u=(t._y1-t._y0)/(r||i<0&&-0),o=(e-t._y1)/(i||r<0&&-0),a=(u*i+o*r)/(r+i);return(dw(u)+dw(o))*Math.min(Math.abs(u),Math.abs(o),.5*Math.abs(a))||0}function vw(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function gw(t,n,e){var r=t._x0,i=t._y0,u=t._x1,o=t._y1,a=(u-r)/3;t._context.bezierCurveTo(r+a,i+a*n,u-a,o-a*e,u,o)}function yw(t){this._context=t}function bw(t){this._context=new _w(t)}function _w(t){this._context=t}function mw(t){return new yw(t)}function xw(t){return new bw(t)}function ww(t){this._context=t}function Mw(t){var n,e,r=t.length-1,i=new Array(r),u=new Array(r),o=new Array(r);for(i[0]=0,u[0]=2,o[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,u[n]=4,o[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,u[r-1]=7,o[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/u[n-1],u[n]-=e,o[n]-=e*o[n-1];for(i[r-1]=o[r-1]/u[r-1],n=r-2;n>=0;--n)i[n]=(o[n]-i[n+1])/u[n];for(u[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)u[n]=2*t[n+1]-i[n+1];return[i,u]}yw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:gw(this,this._t0,vw(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,gw(this,vw(this,e=pw(this,t,n)),e);break;default:gw(this,this._t0,e=pw(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(bw.prototype=Object.create(yw.prototype)).point=function(t,n){yw.prototype.point.call(this,n,t)},_w.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,u){this._context.bezierCurveTo(n,t,r,e,u,i)}},ww.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=Mw(t),i=Mw(n),u=0,o=1;o<e;++u,++o)this._context.bezierCurveTo(r[0][u],i[0][u],r[1][u],i[1][u],t[o],n[o]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var Aw=function(t){return new ww(t)};function Nw(t,n){this._context=t,this._t=n}Nw.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var kw=function(t){return new Nw(t,.5)};function Tw(t){return new Nw(t,0)}function Sw(t){return new Nw(t,1)}var Ew=function(t,n){if((i=t.length)>1)for(var e,r,i,u=1,o=t[n[0]],a=o.length;u<i;++u)for(r=o,o=t[n[u]],e=0;e<a;++e)o[e][1]+=o[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]},Cw=function(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e};function Pw(t,n){return t[n]}var zw=function(){var t=Pm([]),n=Cw,e=Ew,r=Pw;function i(i){var u,o,a=t.apply(this,arguments),c=i.length,f=a.length,s=new Array(f);for(u=0;u<f;++u){for(var l,h=a[u],d=s[u]=new Array(c),p=0;p<c;++p)d[p]=l=[0,+r(i[p],h,p,i)],l.data=i[p];d.key=h}for(u=0,o=n(s);u<f;++u)s[o[u]].index=u;return e(s,o),s}return i.keys=function(n){return arguments.length?(t="function"==typeof n?n:Pm(dx.call(n)),i):t},i.value=function(t){return arguments.length?(r="function"==typeof t?t:Pm(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?Cw:"function"==typeof t?t:Pm(dx.call(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?Ew:t,i):e},i},Rw=function(t,n){if((r=t.length)>0){for(var e,r,i,u=0,o=t[0].length;u<o;++u){for(i=e=0;e<r;++e)i+=t[e][u][1]||0;if(i)for(e=0;e<r;++e)t[e][u][1]/=i}Ew(t,n)}},Lw=function(t,n){if((a=t.length)>0)for(var e,r,i,u,o,a,c=0,f=t[n[0]].length;c<f;++c)for(u=o=0,e=0;e<a;++e)(i=(r=t[n[e]][c])[1]-r[0])>=0?(r[0]=u,r[1]=u+=i):i<0?(r[1]=o,r[0]=o+=i):r[0]=u},Dw=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],u=i.length;r<u;++r){for(var o=0,a=0;o<e;++o)a+=t[o][r][1]||0;i[r][1]+=i[r][0]=-a/2}Ew(t,n)}},qw=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,u=0,o=1;o<r;++o){for(var a=0,c=0,f=0;a<i;++a){for(var s=t[n[a]],l=s[o][1]||0,h=(l-(s[o-1][1]||0))/2,d=0;d<a;++d){var p=t[n[d]];h+=(p[o][1]||0)-(p[o-1][1]||0)}c+=l,f+=h*l}e[o-1][1]+=e[o-1][0]=u,c&&(u-=f/c)}e[o-1][1]+=e[o-1][0]=u,Ew(t,n)}},Uw=function(t){var n=t.map(Ow);return Cw(t).sort(function(t,e){return n[t]-n[e]})};function Ow(t){for(var n,e=-1,r=0,i=t.length,u=-1/0;++e<i;)(n=+t[e][1])>u&&(u=n,r=e);return r}var Yw=function(t){var n=t.map(Fw);return Cw(t).sort(function(t,e){return n[t]-n[e]})};function Fw(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}var Bw=function(t){return Yw(t).reverse()},Iw=function(t){var n,e,r=t.length,i=t.map(Fw),u=Uw(t),o=0,a=0,c=[],f=[];for(n=0;n<r;++n)e=u[n],o<a?(o+=i[e],c.push(e)):(a+=i[e],f.push(e));return f.reverse().concat(c)},jw=function(t){return Cw(t).reverse()},Xw=function(t){return function(){return t}};function Hw(t){return t[0]}function Gw(t){return t[1]}function Vw(){this._=null}function $w(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function Ww(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function Zw(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function Qw(t){for(;t.L;)t=t.L;return t}Vw.prototype={constructor:Vw,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=Qw(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)e===(r=e.U).L?(i=r.R)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(Ww(this,e),e=(t=e).U),e.C=!1,r.C=!0,Zw(this,r)):(i=r.L)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(Zw(this,e),e=(t=e).U),e.C=!1,r.C=!0,Ww(this,r)),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,u=t.L,o=t.R;if(e=u?o?Qw(o):u:o,i?i.L===t?i.L=e:i.R=e:this._=e,u&&o?(r=e.C,e.C=t.C,e.L=u,u.U=e,e!==o?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=o,o.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((n=i.R).C&&(n.C=!1,i.C=!0,Ww(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,Zw(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,Ww(this,i),t=this._;break}}else if((n=i.L).C&&(n.C=!1,i.C=!0,Zw(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,Ww(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,Zw(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var Jw=Vw;function Kw(t,n,e,r){var i=[null,null],u=MM.push(i)-1;return i.left=t,i.right=n,e&&nM(i,t,n,e),r&&nM(i,n,t,r),xM[t.index].halfedges.push(u),xM[n.index].halfedges.push(u),i}function tM(t,n,e){var r=[n,e];return r.left=t,r}function nM(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function eM(t,n,e,r,i){var u,o=t[0],a=t[1],c=o[0],f=o[1],s=0,l=1,h=a[0]-c,d=a[1]-f;if(u=n-c,h||!(u>0)){if(u/=h,h<0){if(u<s)return;u<l&&(l=u)}else if(h>0){if(u>l)return;u>s&&(s=u)}if(u=r-c,h||!(u<0)){if(u/=h,h<0){if(u>l)return;u>s&&(s=u)}else if(h>0){if(u<s)return;u<l&&(l=u)}if(u=e-f,d||!(u>0)){if(u/=d,d<0){if(u<s)return;u<l&&(l=u)}else if(d>0){if(u>l)return;u>s&&(s=u)}if(u=i-f,d||!(u<0)){if(u/=d,d<0){if(u>l)return;u>s&&(s=u)}else if(d>0){if(u<s)return;u<l&&(l=u)}return!(s>0||l<1)||(s>0&&(t[0]=[c+s*h,f+s*d]),l<1&&(t[1]=[c+l*h,f+l*d]),!0)}}}}}function rM(t,n,e,r,i){var u=t[1];if(u)return!0;var o,a,c=t[0],f=t.left,s=t.right,l=f[0],h=f[1],d=s[0],p=s[1],v=(l+d)/2,g=(h+p)/2;if(p===h){if(v<n||v>=r)return;if(l>d){if(c){if(c[1]>=i)return}else c=[v,e];u=[v,i]}else{if(c){if(c[1]<e)return}else c=[v,i];u=[v,e]}}else if(a=g-(o=(l-d)/(p-h))*v,o<-1||o>1)if(l>d){if(c){if(c[1]>=i)return}else c=[(e-a)/o,e];u=[(i-a)/o,i]}else{if(c){if(c[1]<e)return}else c=[(i-a)/o,i];u=[(e-a)/o,e]}else if(h<p){if(c){if(c[0]>=r)return}else c=[n,o*n+a];u=[r,o*r+a]}else{if(c){if(c[0]<n)return}else c=[r,o*r+a];u=[n,o*n+a]}return t[0]=c,t[1]=u,!0}function iM(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function uM(t,n){return n[+(n.left!==t.site)]}function oM(t,n){return n[+(n.left===t.site)]}var aM,cM=[];function fM(){$w(this),this.x=this.y=this.arc=this.site=this.cy=null}function sM(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,u=e.site;if(r!==u){var o=i[0],a=i[1],c=r[0]-o,f=r[1]-a,s=u[0]-o,l=u[1]-a,h=2*(c*l-f*s);if(!(h>=-NM)){var d=c*c+f*f,p=s*s+l*l,v=(l*d-f*p)/h,g=(c*p-s*d)/h,y=cM.pop()||new fM;y.arc=t,y.site=i,y.x=v+o,y.y=(y.cy=g+a)+Math.sqrt(v*v+g*g),t.circle=y;for(var b=null,_=wM._;_;)if(y.y<_.y||y.y===_.y&&y.x<=_.x){if(!_.L){b=_.P;break}_=_.L}else{if(!_.R){b=_;break}_=_.R}wM.insert(b,y),b||(aM=y)}}}}function lM(t){var n=t.circle;n&&(n.P||(aM=n.N),wM.remove(n),cM.push(n),$w(n),t.circle=null)}var hM=[];function dM(){$w(this),this.edge=this.site=this.circle=null}function pM(t){var n=hM.pop()||new dM;return n.site=t,n}function vM(t){lM(t),mM.remove(t),hM.push(t),$w(t)}function gM(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],u=t.P,o=t.N,a=[t];vM(t);for(var c=u;c.circle&&Math.abs(e-c.circle.x)<AM&&Math.abs(r-c.circle.cy)<AM;)u=c.P,a.unshift(c),vM(c),c=u;a.unshift(c),lM(c);for(var f=o;f.circle&&Math.abs(e-f.circle.x)<AM&&Math.abs(r-f.circle.cy)<AM;)o=f.N,a.push(f),vM(f),f=o;a.push(f),lM(f);var s,l=a.length;for(s=1;s<l;++s)f=a[s],c=a[s-1],nM(f.edge,c.site,f.site,i);c=a[0],(f=a[l-1]).edge=Kw(c.site,f.site,null,i),sM(c),sM(f)}function yM(t){for(var n,e,r,i,u=t[0],o=t[1],a=mM._;a;)if((r=bM(a,o)-u)>AM)a=a.L;else{if(!((i=u-_M(a,o))>AM)){r>-AM?(n=a.P,e=a):i>-AM?(n=a,e=a.N):n=e=a;break}if(!a.R){n=a;break}a=a.R}!function(t){xM[t.index]={site:t,halfedges:[]}}(t);var c=pM(t);if(mM.insert(n,c),n||e){if(n===e)return lM(n),e=pM(n.site),mM.insert(c,e),c.edge=e.edge=Kw(n.site,c.site),sM(n),void sM(e);if(e){lM(n),lM(e);var f=n.site,s=f[0],l=f[1],h=t[0]-s,d=t[1]-l,p=e.site,v=p[0]-s,g=p[1]-l,y=2*(h*g-d*v),b=h*h+d*d,_=v*v+g*g,m=[(g*b-d*_)/y+s,(h*_-v*b)/y+l];nM(e.edge,f,p,m),c.edge=Kw(f,t,null,m),e.edge=Kw(t,p,null,m),sM(n),sM(e)}else c.edge=Kw(n.site,c.site)}}function bM(t,n){var e=t.site,r=e[0],i=e[1],u=i-n;if(!u)return r;var o=t.P;if(!o)return-1/0;var a=(e=o.site)[0],c=e[1],f=c-n;if(!f)return a;var s=a-r,l=1/u-1/f,h=s/f;return l?(-h+Math.sqrt(h*h-2*l*(s*s/(-2*f)-c+f/2+i-u/2)))/l+r:(r+a)/2}function _M(t,n){var e=t.N;if(e)return bM(e,n);var r=t.site;return r[1]===n?r[0]:1/0}var mM,xM,wM,MM,AM=1e-6,NM=1e-12;function kM(t,n){return n[1]-t[1]||n[0]-t[0]}function TM(t,n){var e,r,i,u=t.sort(kM).pop();for(MM=[],xM=new Array(t.length),mM=new Jw,wM=new Jw;;)if(i=aM,u&&(!i||u[1]<i.y||u[1]===i.y&&u[0]<i.x))u[0]===e&&u[1]===r||(yM(u),e=u[0],r=u[1]),u=t.pop();else{if(!i)break;gM(i.arc)}if(function(){for(var t,n,e,r,i=0,u=xM.length;i<u;++i)if((t=xM[i])&&(r=(n=t.halfedges).length)){var o=new Array(r),a=new Array(r);for(e=0;e<r;++e)o[e]=e,a[e]=iM(t,MM[n[e]]);for(o.sort(function(t,n){return a[n]-a[t]}),e=0;e<r;++e)a[e]=n[o[e]];for(e=0;e<r;++e)n[e]=a[e]}}(),n){var o=+n[0][0],a=+n[0][1],c=+n[1][0],f=+n[1][1];!function(t,n,e,r){for(var i,u=MM.length;u--;)rM(i=MM[u],t,n,e,r)&&eM(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>AM||Math.abs(i[0][1]-i[1][1])>AM)||delete MM[u]}(o,a,c,f),function(t,n,e,r){var i,u,o,a,c,f,s,l,h,d,p,v,g=xM.length,y=!0;for(i=0;i<g;++i)if(u=xM[i]){for(o=u.site,a=(c=u.halfedges).length;a--;)MM[c[a]]||c.splice(a,1);for(a=0,f=c.length;a<f;)p=(d=oM(u,MM[c[a]]))[0],v=d[1],l=(s=uM(u,MM[c[++a%f]]))[0],h=s[1],(Math.abs(p-l)>AM||Math.abs(v-h)>AM)&&(c.splice(a,0,MM.push(tM(o,d,Math.abs(p-t)<AM&&r-v>AM?[t,Math.abs(l-t)<AM?h:r]:Math.abs(v-r)<AM&&e-p>AM?[Math.abs(h-r)<AM?l:e,r]:Math.abs(p-e)<AM&&v-n>AM?[e,Math.abs(l-e)<AM?h:n]:Math.abs(v-n)<AM&&p-t>AM?[Math.abs(h-n)<AM?l:t,n]:null))-1),++f);f&&(y=!1)}if(y){var b,_,m,x=1/0;for(i=0,y=null;i<g;++i)(u=xM[i])&&(m=(b=(o=u.site)[0]-t)*b+(_=o[1]-n)*_)<x&&(x=m,y=u);if(y){var w=[t,n],M=[t,r],A=[e,r],N=[e,n];y.halfedges.push(MM.push(tM(o=y.site,w,M))-1,MM.push(tM(o,M,A))-1,MM.push(tM(o,A,N))-1,MM.push(tM(o,N,w))-1)}}for(i=0;i<g;++i)(u=xM[i])&&(u.halfedges.length||delete xM[i])}(o,a,c,f)}this.edges=MM,this.cells=xM,mM=wM=MM=xM=null}TM.prototype={constructor:TM,polygons:function(){var t=this.edges;return this.cells.map(function(n){var e=n.halfedges.map(function(e){return uM(n,t[e])});return e.data=n.site.data,e})},triangles:function(){var t=[],n=this.edges;return this.cells.forEach(function(e,r){if(u=(i=e.halfedges).length)for(var i,u,o,a,c,f,s=e.site,l=-1,h=n[i[u-1]],d=h.left===s?h.right:h.left;++l<u;)o=d,d=(h=n[i[l]]).left===s?h.right:h.left,o&&d&&r<o.index&&r<d.index&&(c=o,f=d,((a=s)[0]-f[0])*(c[1]-a[1])-(a[0]-c[0])*(f[1]-a[1])<0)&&t.push([s.data,o.data,d.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,n,e){for(var r,i,u=this,o=u._found||0,a=u.cells.length;!(i=u.cells[o]);)if(++o>=a)return null;var c=t-i.site[0],f=n-i.site[1],s=c*c+f*f;do{i=u.cells[r=o],o=null,i.halfedges.forEach(function(e){var r=u.edges[e],a=r.left;if(a!==i.site&&a||(a=r.right)){var c=t-a[0],f=n-a[1],l=c*c+f*f;l<s&&(s=l,o=a.index)}})}while(null!==o);return u._found=r,null==e||s<=e*e?i.site:null}};var SM=function(){var t=Hw,n=Gw,e=null;function r(r){return new TM(r.map(function(e,i){var u=[Math.round(t(e,i,r)/AM)*AM,Math.round(n(e,i,r)/AM)*AM];return u.index=i,u.data=e,u}),e)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(n){return arguments.length?(t="function"==typeof n?n:Xw(+n),r):t},r.y=function(t){return arguments.length?(n="function"==typeof t?t:Xw(+t),r):n},r.extent=function(t){return arguments.length?(e=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},r.size=function(t){return arguments.length?(e=null==t?null:[[0,0],[+t[0],+t[1]]],r):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},r},EM=function(t){return function(){return t}};function CM(t,n,e){this.target=t,this.type=n,this.transform=e}function PM(t,n,e){this.k=t,this.x=n,this.y=e}PM.prototype={constructor:PM,scale:function(t){return 1===t?this:new PM(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new PM(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var zM=new PM(1,0,0);function RM(t){return t.__zoom||zM}function LM(){ln.stopImmediatePropagation()}RM.prototype=PM.prototype;var DM=function(){ln.preventDefault(),ln.stopImmediatePropagation()};function qM(){return!ln.button}function UM(){var t,n,e=this;return e instanceof SVGElement?(t=(e=e.ownerSVGElement||e).width.baseVal.value,n=e.height.baseVal.value):(t=e.clientWidth,n=e.clientHeight),[[0,0],[t,n]]}function OM(){return this.__zoom||zM}function YM(){return-ln.deltaY*(ln.deltaMode?120:1)/500}function FM(){return"ontouchstart"in this}function BM(t,n,e){var r=t.invertX(n[0][0])-e[0][0],i=t.invertX(n[1][0])-e[1][0],u=t.invertY(n[0][1])-e[0][1],o=t.invertY(n[1][1])-e[1][1];return t.translate(i>r?(r+i)/2:Math.min(0,r)||Math.max(0,i),o>u?(u+o)/2:Math.min(0,u)||Math.max(0,o))}var IM=function(){var t,n,e=qM,r=UM,i=BM,u=YM,o=FM,a=[0,1/0],c=[[-1/0,-1/0],[1/0,1/0]],f=250,s=Sr,l=[],h=dt("start","zoom","end"),d=500,p=150,v=0;function g(t){t.property("__zoom",OM).on("wheel.zoom",M).on("mousedown.zoom",A).on("dblclick.zoom",N).filter(o).on("touchstart.zoom",k).on("touchmove.zoom",T).on("touchend.zoom touchcancel.zoom",S).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function y(t,n){return(n=Math.max(a[0],Math.min(a[1],n)))===t.k?t:new PM(n,t.x,t.y)}function b(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new PM(t.k,r,i)}function _(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function m(t,n,e){t.on("start.zoom",function(){x(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){x(this,arguments).end()}).tween("zoom",function(){var t=this,i=arguments,u=x(t,i),o=r.apply(t,i),a=e||_(o),c=Math.max(o[1][0]-o[0][0],o[1][1]-o[0][1]),f=t.__zoom,l="function"==typeof n?n.apply(t,i):n,h=s(f.invert(a).concat(c/f.k),l.invert(a).concat(c/l.k));return function(t){if(1===t)t=l;else{var n=h(t),e=c/n[2];t=new PM(e,a[0]-n[0]*e,a[1]-n[1]*e)}u.zoom(null,t)}})}function x(t,n){for(var e,r=0,i=l.length;r<i;++r)if((e=l[r]).that===t)return e;return new w(t,n)}function w(t,n){this.that=t,this.args=n,this.index=-1,this.active=0,this.extent=r.apply(t,n)}function M(){if(e.apply(this,arguments)){var t=x(this,arguments),n=this.__zoom,r=Math.max(a[0],Math.min(a[1],n.k*Math.pow(2,u.apply(this,arguments)))),o=Cn(this);if(t.wheel)t.mouse[0][0]===o[0]&&t.mouse[0][1]===o[1]||(t.mouse[1]=n.invert(t.mouse[0]=o)),clearTimeout(t.wheel);else{if(n.k===r)return;t.mouse=[o,n.invert(o)],xi(this),t.start()}DM(),t.wheel=setTimeout(function(){t.wheel=null,t.end()},p),t.zoom("mouse",i(b(y(n,r),t.mouse[0],t.mouse[1]),t.extent,c))}}function A(){if(!n&&e.apply(this,arguments)){var t=x(this,arguments),r=Mn(ln.view).on("mousemove.zoom",function(){if(DM(),!t.moved){var n=ln.clientX-o,e=ln.clientY-a;t.moved=n*n+e*e>v}t.zoom("mouse",i(b(t.that.__zoom,t.mouse[0]=Cn(t.that),t.mouse[1]),t.extent,c))},!0).on("mouseup.zoom",function(){r.on("mousemove.zoom mouseup.zoom",null),Un(ln.view,t.moved),DM(),t.end()},!0),u=Cn(this),o=ln.clientX,a=ln.clientY;qn(ln.view),LM(),t.mouse=[u,this.__zoom.invert(u)],xi(this),t.start()}}function N(){if(e.apply(this,arguments)){var t=this.__zoom,n=Cn(this),u=t.invert(n),o=t.k*(ln.shiftKey?.5:2),a=i(b(y(t,o),n,u),r.apply(this,arguments),c);DM(),f>0?Mn(this).transition().duration(f).call(m,a,n):Mn(this).call(g.transform,a)}}function k(){if(e.apply(this,arguments)){var n,r,i,u,o=x(this,arguments),a=ln.changedTouches,c=a.length;for(LM(),r=0;r<c;++r)i=a[r],u=[u=zn(this,a,i.identifier),this.__zoom.invert(u),i.identifier],o.touch0?o.touch1||(o.touch1=u):(o.touch0=u,n=!0);if(t&&(t=clearTimeout(t),!o.touch1))return o.end(),void((u=Mn(this).on("dblclick.zoom"))&&u.apply(this,arguments));n&&(t=setTimeout(function(){t=null},d),xi(this),o.start())}}function T(){var n,e,r,u,o=x(this,arguments),a=ln.changedTouches,f=a.length;for(DM(),t&&(t=clearTimeout(t)),n=0;n<f;++n)e=a[n],r=zn(this,a,e.identifier),o.touch0&&o.touch0[2]===e.identifier?o.touch0[0]=r:o.touch1&&o.touch1[2]===e.identifier&&(o.touch1[0]=r);if(e=o.that.__zoom,o.touch1){var s=o.touch0[0],l=o.touch0[1],h=o.touch1[0],d=o.touch1[1],p=(p=h[0]-s[0])*p+(p=h[1]-s[1])*p,v=(v=d[0]-l[0])*v+(v=d[1]-l[1])*v;e=y(e,Math.sqrt(p/v)),r=[(s[0]+h[0])/2,(s[1]+h[1])/2],u=[(l[0]+d[0])/2,(l[1]+d[1])/2]}else{if(!o.touch0)return;r=o.touch0[0],u=o.touch0[1]}o.zoom("touch",i(b(e,r,u),o.extent,c))}function S(){var t,e,r=x(this,arguments),i=ln.changedTouches,u=i.length;for(LM(),n&&clearTimeout(n),n=setTimeout(function(){n=null},d),t=0;t<u;++t)e=i[t],r.touch0&&r.touch0[2]===e.identifier?delete r.touch0:r.touch1&&r.touch1[2]===e.identifier&&delete r.touch1;r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0?r.touch0[1]=this.__zoom.invert(r.touch0[0]):r.end()}return g.transform=function(t,n){var e=t.selection?t.selection():t;e.property("__zoom",OM),t!==e?m(t,n):e.interrupt().each(function(){x(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()})},g.scaleBy=function(t,n){g.scaleTo(t,function(){var t=this.__zoom.k,e="function"==typeof n?n.apply(this,arguments):n;return t*e})},g.scaleTo=function(t,n){g.transform(t,function(){var t=r.apply(this,arguments),e=this.__zoom,u=_(t),o=e.invert(u),a="function"==typeof n?n.apply(this,arguments):n;return i(b(y(e,a),u,o),t,c)})},g.translateBy=function(t,n,e){g.transform(t,function(){return i(this.__zoom.translate("function"==typeof n?n.apply(this,arguments):n,"function"==typeof e?e.apply(this,arguments):e),r.apply(this,arguments),c)})},g.translateTo=function(t,n,e){g.transform(t,function(){var t=r.apply(this,arguments),u=this.__zoom,o=_(t);return i(zM.translate(o[0],o[1]).scale(u.k).translate("function"==typeof n?-n.apply(this,arguments):-n,"function"==typeof e?-e.apply(this,arguments):-e),t,c)})},w.prototype={start:function(){return 1==++this.active&&(this.index=l.push(this)-1,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(l.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(t){yn(new CM(g,t,this.that.__zoom),h.apply,h,[t,this.that,this.args])}},g.wheelDelta=function(t){return arguments.length?(u="function"==typeof t?t:EM(+t),g):u},g.filter=function(t){return arguments.length?(e="function"==typeof t?t:EM(!!t),g):e},g.touchable=function(t){return arguments.length?(o="function"==typeof t?t:EM(!!t),g):o},g.extent=function(t){return arguments.length?(r="function"==typeof t?t:EM([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),g):r},g.scaleExtent=function(t){return arguments.length?(a[0]=+t[0],a[1]=+t[1],g):[a[0],a[1]]},g.translateExtent=function(t){return arguments.length?(c[0][0]=+t[0][0],c[1][0]=+t[1][0],c[0][1]=+t[0][1],c[1][1]=+t[1][1],g):[[c[0][0],c[0][1]],[c[1][0],c[1][1]]]},g.constrain=function(t){return arguments.length?(i=t,g):i},g.duration=function(t){return arguments.length?(f=+t,g):f},g.interpolate=function(t){return arguments.length?(s=t,g):s},g.on=function(){var t=h.on.apply(h,arguments);return t===h?g:t},g.clickDistance=function(t){return arguments.length?(v=(t=+t)*t,g):Math.sqrt(v)},g};e.d(n,"version",function(){return"5.9.7"}),e.d(n,"bisect",function(){return c}),e.d(n,"bisectRight",function(){return o}),e.d(n,"bisectLeft",function(){return a}),e.d(n,"ascending",function(){return r}),e.d(n,"bisector",function(){return i}),e.d(n,"cross",function(){return l}),e.d(n,"descending",function(){return h}),e.d(n,"deviation",function(){return v}),e.d(n,"extent",function(){return g}),e.d(n,"histogram",function(){return C}),e.d(n,"thresholdFreedmanDiaconis",function(){return z}),e.d(n,"thresholdScott",function(){return R}),e.d(n,"thresholdSturges",function(){return E}),e.d(n,"max",function(){return L}),e.d(n,"mean",function(){return D}),e.d(n,"median",function(){return q}),e.d(n,"merge",function(){return U}),e.d(n,"min",function(){return O}),e.d(n,"pairs",function(){return f}),e.d(n,"permute",function(){return Y}),e.d(n,"quantile",function(){return P}),e.d(n,"range",function(){return w}),e.d(n,"scan",function(){return F}),e.d(n,"shuffle",function(){return B}),e.d(n,"sum",function(){return I}),e.d(n,"ticks",function(){return k}),e.d(n,"tickIncrement",function(){return T}),e.d(n,"tickStep",function(){return S}),e.d(n,"transpose",function(){return j}),e.d(n,"variance",function(){return p}),e.d(n,"zip",function(){return H}),e.d(n,"axisTop",function(){return rt}),e.d(n,"axisRight",function(){return it}),e.d(n,"axisBottom",function(){return ut}),e.d(n,"axisLeft",function(){return ot}),e.d(n,"brush",function(){return ro}),e.d(n,"brushX",function(){return no}),e.d(n,"brushY",function(){return eo}),e.d(n,"brushSelection",function(){return to}),e.d(n,"chord",function(){return ho}),e.d(n,"ribbon",function(){return To}),e.d(n,"nest",function(){return Po}),e.d(n,"set",function(){return Yo}),e.d(n,"map",function(){return Co}),e.d(n,"keys",function(){return Fo}),e.d(n,"values",function(){return Bo}),e.d(n,"entries",function(){return Io}),e.d(n,"color",function(){return oe}),e.d(n,"rgb",function(){return se}),e.d(n,"hsl",function(){return pe}),e.d(n,"lab",function(){return Se}),e.d(n,"hcl",function(){return qe}),e.d(n,"lch",function(){return De}),e.d(n,"gray",function(){return Te}),e.d(n,"cubehelix",function(){return He}),e.d(n,"contours",function(){return Jo}),e.d(n,"contourDensity",function(){return ia}),e.d(n,"dispatch",function(){return dt}),e.d(n,"drag",function(){return Xn}),e.d(n,"dragDisable",function(){return qn}),e.d(n,"dragEnable",function(){return Un}),e.d(n,"dsvFormat",function(){return pa}),e.d(n,"csvParse",function(){return ga}),e.d(n,"csvParseRows",function(){return ya}),e.d(n,"csvFormat",function(){return ba}),e.d(n,"csvFormatBody",function(){return _a}),e.d(n,"csvFormatRows",function(){return ma}),e.d(n,"tsvParse",function(){return wa}),e.d(n,"tsvParseRows",function(){return Ma}),e.d(n,"tsvFormat",function(){return Aa}),e.d(n,"tsvFormatBody",function(){return Na}),e.d(n,"tsvFormatRows",function(){return ka}),e.d(n,"autoType",function(){return Ta}),e.d(n,"easeLinear",function(){return Ii}),e.d(n,"easeQuad",function(){return Hi}),e.d(n,"easeQuadIn",function(){return ji}),e.d(n,"easeQuadOut",function(){return Xi}),e.d(n,"easeQuadInOut",function(){return Hi}),e.d(n,"easeCubic",function(){return $i}),e.d(n,"easeCubicIn",function(){return Gi}),e.d(n,"easeCubicOut",function(){return Vi}),e.d(n,"easeCubicInOut",function(){return $i}),e.d(n,"easePoly",function(){return Qi}),e.d(n,"easePolyIn",function(){return Wi}),e.d(n,"easePolyOut",function(){return Zi}),e.d(n,"easePolyInOut",function(){return Qi}),e.d(n,"easeSin",function(){return eu}),e.d(n,"easeSinIn",function(){return tu}),e.d(n,"easeSinOut",function(){return nu}),e.d(n,"easeSinInOut",function(){return eu}),e.d(n,"easeExp",function(){return uu}),e.d(n,"easeExpIn",function(){return ru}),e.d(n,"easeExpOut",function(){return iu}),e.d(n,"easeExpInOut",function(){return uu}),e.d(n,"easeCircle",function(){return cu}),e.d(n,"easeCircleIn",function(){return ou}),e.d(n,"easeCircleOut",function(){return au}),e.d(n,"easeCircleInOut",function(){return cu}),e.d(n,"easeBounce",function(){return mu}),e.d(n,"easeBounceIn",function(){return _u}),e.d(n,"easeBounceOut",function(){return mu}),e.d(n,"easeBounceInOut",function(){return xu}),e.d(n,"easeBack",function(){return Au}),e.d(n,"easeBackIn",function(){return wu}),e.d(n,"easeBackOut",function(){return Mu}),e.d(n,"easeBackInOut",function(){return Au}),e.d(n,"easeElastic",function(){return Tu}),e.d(n,"easeElasticIn",function(){return ku}),e.d(n,"easeElasticOut",function(){return Tu}),e.d(n,"easeElasticInOut",function(){return Su}),e.d(n,"blob",function(){return Ea}),e.d(n,"buffer",function(){return Pa}),e.d(n,"dsv",function(){return Da}),e.d(n,"csv",function(){return qa}),e.d(n,"tsv",function(){return Ua}),e.d(n,"image",function(){return Oa}),e.d(n,"json",function(){return Fa}),e.d(n,"text",function(){return Ra}),e.d(n,"xml",function(){return Ia}),e.d(n,"html",function(){return ja}),e.d(n,"svg",function(){return Xa}),e.d(n,"forceCenter",function(){return Ha}),e.d(n,"forceCollide",function(){return ic}),e.d(n,"forceLink",function(){return ac}),e.d(n,"forceManyBody",function(){return dc}),e.d(n,"forceRadial",function(){return pc}),e.d(n,"forceSimulation",function(){return hc}),e.d(n,"forceX",function(){return vc}),e.d(n,"forceY",function(){return gc}),e.d(n,"formatDefaultLocale",function(){return zc}),e.d(n,"format",function(){return Ac}),e.d(n,"formatPrefix",function(){return Nc}),e.d(n,"formatLocale",function(){return Pc}),e.d(n,"formatSpecifier",function(){return mc}),e.d(n,"precisionFixed",function(){return Rc}),e.d(n,"precisionPrefix",function(){return Lc}),e.d(n,"precisionRound",function(){return Dc}),e.d(n,"geoArea",function(){return Ef}),e.d(n,"geoBounds",function(){return xs}),e.d(n,"geoCentroid",function(){return Rs}),e.d(n,"geoCircle",function(){return Xs}),e.d(n,"geoClipAntimeridian",function(){return el}),e.d(n,"geoClipCircle",function(){return rl}),e.d(n,"geoClipExtent",function(){return ll}),e.d(n,"geoClipRectangle",function(){return al}),e.d(n,"geoContains",function(){return El}),e.d(n,"geoDistance",function(){return ml}),e.d(n,"geoGraticule",function(){return zl}),e.d(n,"geoGraticule10",function(){return Rl}),e.d(n,"geoInterpolate",function(){return Ol}),e.d(n,"geoLength",function(){return yl}),e.d(n,"geoPath",function(){return qh}),e.d(n,"geoAlbers",function(){return nd}),e.d(n,"geoAlbersUsa",function(){return ed}),e.d(n,"geoAzimuthalEqualArea",function(){return od}),e.d(n,"geoAzimuthalEqualAreaRaw",function(){return ud}),e.d(n,"geoAzimuthalEquidistant",function(){return cd}),e.d(n,"geoAzimuthalEquidistantRaw",function(){return ad}),e.d(n,"geoConicConformal",function(){return pd}),e.d(n,"geoConicConformalRaw",function(){return dd}),e.d(n,"geoConicEqualArea",function(){return td}),e.d(n,"geoConicEqualAreaRaw",function(){return Kh}),e.d(n,"geoConicEquidistant",function(){return bd}),e.d(n,"geoConicEquidistantRaw",function(){return yd}),e.d(n,"geoEqualEarth",function(){return Nd}),e.d(n,"geoEqualEarthRaw",function(){return Ad}),e.d(n,"geoEquirectangular",function(){return gd}),e.d(n,"geoEquirectangularRaw",function(){return vd}),e.d(n,"geoGnomonic",function(){return Td}),e.d(n,"geoGnomonicRaw",function(){return kd}),e.d(n,"geoIdentity",function(){return Ed}),e.d(n,"geoProjection",function(){return Zh}),e.d(n,"geoProjectionMutator",function(){return Qh}),e.d(n,"geoMercator",function(){return sd}),e.d(n,"geoMercatorRaw",function(){return fd}),e.d(n,"geoNaturalEarth1",function(){return Pd}),e.d(n,"geoNaturalEarth1Raw",function(){return Cd}),e.d(n,"geoOrthographic",function(){return Rd}),e.d(n,"geoOrthographicRaw",function(){return zd}),e.d(n,"geoStereographic",function(){return Dd}),e.d(n,"geoStereographicRaw",function(){return Ld}),e.d(n,"geoTransverseMercator",function(){return Ud}),e.d(n,"geoTransverseMercatorRaw",function(){return qd}),e.d(n,"geoRotation",function(){return Bs}),e.d(n,"geoStream",function(){return xf}),e.d(n,"geoTransform",function(){return Uh}),e.d(n,"cluster",function(){return Bd}),e.d(n,"hierarchy",function(){return jd}),e.d(n,"pack",function(){return pp}),e.d(n,"packSiblings",function(){return cp}),e.d(n,"packEnclose",function(){return Wd}),e.d(n,"partition",function(){return mp}),e.d(n,"stratify",function(){return kp}),e.d(n,"tree",function(){return Rp}),e.d(n,"treemap",function(){return Op}),e.d(n,"treemapBinary",function(){return Yp}),e.d(n,"treemapDice",function(){return _p}),e.d(n,"treemapSlice",function(){return Lp}),e.d(n,"treemapSliceDice",function(){return Fp}),e.d(n,"treemapSquarify",function(){return Up}),e.d(n,"treemapResquarify",function(){return Bp}),e.d(n,"interpolate",function(){return gr}),e.d(n,"interpolateArray",function(){return ur}),e.d(n,"interpolateBasis",function(){return $e}),e.d(n,"interpolateBasisClosed",function(){return We}),e.d(n,"interpolateDate",function(){return or}),e.d(n,"interpolateDiscrete",function(){return yr}),e.d(n,"interpolateHue",function(){return br}),e.d(n,"interpolateNumber",function(){return ar}),e.d(n,"interpolateObject",function(){return cr}),e.d(n,"interpolateRound",function(){return _r}),e.d(n,"interpolateString",function(){return vr}),e.d(n,"interpolateTransformCss",function(){return Ar}),e.d(n,"interpolateTransformSvg",function(){return Nr}),e.d(n,"interpolateZoom",function(){return Sr}),e.d(n,"interpolateRgb",function(){return nr}),e.d(n,"interpolateRgbBasis",function(){return rr}),e.d(n,"interpolateRgbBasisClosed",function(){return ir}),e.d(n,"interpolateHsl",function(){return Cr}),e.d(n,"interpolateHslLong",function(){return Pr}),e.d(n,"interpolateLab",function(){return zr}),e.d(n,"interpolateHcl",function(){return Lr}),e.d(n,"interpolateHclLong",function(){return Dr}),e.d(n,"interpolateCubehelix",function(){return Ur}),e.d(n,"interpolateCubehelixLong",function(){return Or}),e.d(n,"piecewise",function(){return Yr}),e.d(n,"quantize",function(){return Ir}),e.d(n,"path",function(){return xo}),e.d(n,"polygonArea",function(){return Ip}),e.d(n,"polygonCentroid",function(){return jp}),e.d(n,"polygonHull",function(){return Vp}),e.d(n,"polygonContains",function(){return $p}),e.d(n,"polygonLength",function(){return Wp}),e.d(n,"quadtree",function(){return Ja}),e.d(n,"randomUniform",function(){return Qp}),e.d(n,"randomNormal",function(){return Jp}),e.d(n,"randomLogNormal",function(){return Kp}),e.d(n,"randomBates",function(){return nv}),e.d(n,"randomIrwinHall",function(){return tv}),e.d(n,"randomExponential",function(){return ev}),e.d(n,"scaleBand",function(){return sv}),e.d(n,"scalePoint",function(){return lv}),e.d(n,"scaleIdentity",function(){return kv}),e.d(n,"scaleLinear",function(){return Nv}),e.d(n,"scaleLog",function(){return Dv}),e.d(n,"scaleSymlog",function(){return Yv}),e.d(n,"scaleOrdinal",function(){return fv}),e.d(n,"scaleImplicit",function(){return cv}),e.d(n,"scalePow",function(){return Xv}),e.d(n,"scaleSqrt",function(){return Hv}),e.d(n,"scaleQuantile",function(){return Gv}),e.d(n,"scaleQuantize",function(){return Vv}),e.d(n,"scaleThreshold",function(){return $v}),e.d(n,"scaleTime",function(){return Xb}),e.d(n,"scaleUtc",function(){return Hb}),e.d(n,"scaleSequential",function(){return $b}),e.d(n,"scaleSequentialLog",function(){return Wb}),e.d(n,"scaleSequentialPow",function(){return Qb}),e.d(n,"scaleSequentialSqrt",function(){return Jb}),e.d(n,"scaleSequentialSymlog",function(){return Zb}),e.d(n,"scaleSequentialQuantile",function(){return Kb}),e.d(n,"scaleDiverging",function(){return n_}),e.d(n,"scaleDivergingLog",function(){return e_}),e.d(n,"scaleDivergingPow",function(){return i_}),e.d(n,"scaleDivergingSqrt",function(){return u_}),e.d(n,"scaleDivergingSymlog",function(){return r_}),e.d(n,"tickFormat",function(){return Mv}),e.d(n,"schemeCategory10",function(){return a_}),e.d(n,"schemeAccent",function(){return c_}),e.d(n,"schemeDark2",function(){return f_}),e.d(n,"schemePaired",function(){return s_}),e.d(n,"schemePastel1",function(){return l_}),e.d(n,"schemePastel2",function(){return h_}),e.d(n,"schemeSet1",function(){return d_}),e.d(n,"schemeSet2",function(){return p_}),e.d(n,"schemeSet3",function(){return v_}),e.d(n,"interpolateBrBG",function(){return b_}),e.d(n,"schemeBrBG",function(){return y_}),e.d(n,"interpolatePRGn",function(){return m_}),e.d(n,"schemePRGn",function(){return __}),e.d(n,"interpolatePiYG",function(){return w_}),e.d(n,"schemePiYG",function(){return x_}),e.d(n,"interpolatePuOr",function(){return A_}),e.d(n,"schemePuOr",function(){return M_}),e.d(n,"interpolateRdBu",function(){return k_}),e.d(n,"schemeRdBu",function(){return N_}),e.d(n,"interpolateRdGy",function(){return S_}),e.d(n,"schemeRdGy",function(){return T_}),e.d(n,"interpolateRdYlBu",function(){return C_}),e.d(n,"schemeRdYlBu",function(){return E_}),e.d(n,"interpolateRdYlGn",function(){return z_}),e.d(n,"schemeRdYlGn",function(){return P_}),e.d(n,"interpolateSpectral",function(){return L_}),e.d(n,"schemeSpectral",function(){return R_}),e.d(n,"interpolateBuGn",function(){return q_}),e.d(n,"schemeBuGn",function(){return D_}),e.d(n,"interpolateBuPu",function(){return O_}),e.d(n,"schemeBuPu",function(){return U_}),e.d(n,"interpolateGnBu",function(){return F_}),e.d(n,"schemeGnBu",function(){return Y_}),e.d(n,"interpolateOrRd",function(){return I_}),e.d(n,"schemeOrRd",function(){return B_}),e.d(n,"interpolatePuBuGn",function(){return X_}),e.d(n,"schemePuBuGn",function(){return j_}),e.d(n,"interpolatePuBu",function(){return G_}),e.d(n,"schemePuBu",function(){return H_}),e.d(n,"interpolatePuRd",function(){return $_}),e.d(n,"schemePuRd",function(){return V_}),e.d(n,"interpolateRdPu",function(){return Z_}),e.d(n,"schemeRdPu",function(){return W_}),e.d(n,"interpolateYlGnBu",function(){return J_}),e.d(n,"schemeYlGnBu",function(){return Q_}),e.d(n,"interpolateYlGn",function(){return tm}),e.d(n,"schemeYlGn",function(){return K_}),e.d(n,"interpolateYlOrBr",function(){return em}),e.d(n,"schemeYlOrBr",function(){return nm}),e.d(n,"interpolateYlOrRd",function(){return im}),e.d(n,"schemeYlOrRd",function(){return rm}),e.d(n,"interpolateBlues",function(){return om}),e.d(n,"schemeBlues",function(){return um}),e.d(n,"interpolateGreens",function(){return cm}),e.d(n,"schemeGreens",function(){return am}),e.d(n,"interpolateGreys",function(){return sm}),e.d(n,"schemeGreys",function(){return fm}),e.d(n,"interpolatePurples",function(){return hm}),e.d(n,"schemePurples",function(){return lm}),e.d(n,"interpolateReds",function(){return pm}),e.d(n,"schemeReds",function(){return dm}),e.d(n,"interpolateOranges",function(){return gm}),e.d(n,"schemeOranges",function(){return vm}),e.d(n,"interpolateCubehelixDefault",function(){return ym}),e.d(n,"interpolateRainbow",function(){return xm}),e.d(n,"interpolateWarm",function(){return bm}),e.d(n,"interpolateCool",function(){return _m}),e.d(n,"interpolateSinebow",function(){return Nm}),e.d(n,"interpolateViridis",function(){return Tm}),e.d(n,"interpolateMagma",function(){return Sm}),e.d(n,"interpolateInferno",function(){return Em}),e.d(n,"interpolatePlasma",function(){return Cm}),e.d(n,"create",function(){return An}),e.d(n,"creator",function(){return yt}),e.d(n,"local",function(){return kn}),e.d(n,"matcher",function(){return wt}),e.d(n,"mouse",function(){return Cn}),e.d(n,"namespace",function(){return gt}),e.d(n,"namespaces",function(){return vt}),e.d(n,"clientPoint",function(){return En}),e.d(n,"select",function(){return Mn}),e.d(n,"selectAll",function(){return Pn}),e.d(n,"selection",function(){return wn}),e.d(n,"selector",function(){return _t}),e.d(n,"selectorAll",function(){return xt}),e.d(n,"style",function(){return Yt}),e.d(n,"touch",function(){return zn}),e.d(n,"touches",function(){return Rn}),e.d(n,"window",function(){return Dt}),e.d(n,"event",function(){return ln}),e.d(n,"customEvent",function(){return yn}),e.d(n,"arc",function(){return Zm}),e.d(n,"area",function(){return ex}),e.d(n,"line",function(){return nx}),e.d(n,"pie",function(){return ux}),e.d(n,"areaRadial",function(){return lx}),e.d(n,"radialArea",function(){return lx}),e.d(n,"lineRadial",function(){return sx}),e.d(n,"radialLine",function(){return sx}),e.d(n,"pointRadial",function(){return hx}),e.d(n,"linkHorizontal",function(){return mx}),e.d(n,"linkVertical",function(){return xx}),e.d(n,"linkRadial",function(){return wx}),e.d(n,"symbol",function(){return Fx}),e.d(n,"symbols",function(){return Yx}),e.d(n,"symbolCircle",function(){return Mx}),e.d(n,"symbolCross",function(){return Ax}),e.d(n,"symbolDiamond",function(){return Tx}),e.d(n,"symbolSquare",function(){return zx}),e.d(n,"symbolStar",function(){return Px}),e.d(n,"symbolTriangle",function(){return Lx}),e.d(n,"symbolWye",function(){return Ox}),e.d(n,"curveBasisClosed",function(){return Gx}),e.d(n,"curveBasisOpen",function(){return $x}),e.d(n,"curveBasis",function(){return Xx}),e.d(n,"curveBundle",function(){return Zx}),e.d(n,"curveCardinalClosed",function(){return nw}),e.d(n,"curveCardinalOpen",function(){return rw}),e.d(n,"curveCardinal",function(){return Kx}),e.d(n,"curveCatmullRomClosed",function(){return cw}),e.d(n,"curveCatmullRomOpen",function(){return sw}),e.d(n,"curveCatmullRom",function(){return ow}),e.d(n,"curveLinearClosed",function(){return hw}),e.d(n,"curveLinear",function(){return Jm}),e.d(n,"curveMonotoneX",function(){return mw}),e.d(n,"curveMonotoneY",function(){return xw}),e.d(n,"curveNatural",function(){return Aw}),e.d(n,"curveStep",function(){return kw}),e.d(n,"curveStepAfter",function(){return Sw}),e.d(n,"curveStepBefore",function(){return Tw}),e.d(n,"stack",function(){return zw}),e.d(n,"stackOffsetExpand",function(){return Rw}),e.d(n,"stackOffsetDiverging",function(){return Lw}),e.d(n,"stackOffsetNone",function(){return Ew}),e.d(n,"stackOffsetSilhouette",function(){return Dw}),e.d(n,"stackOffsetWiggle",function(){return qw}),e.d(n,"stackOrderAppearance",function(){return Uw}),e.d(n,"stackOrderAscending",function(){return Yw}),e.d(n,"stackOrderDescending",function(){return Bw}),e.d(n,"stackOrderInsideOut",function(){return Iw}),e.d(n,"stackOrderNone",function(){return Cw}),e.d(n,"stackOrderReverse",function(){return jw}),e.d(n,"timeInterval",function(){return Qv}),e.d(n,"timeMillisecond",function(){return Kv}),e.d(n,"timeMilliseconds",function(){return tg}),e.d(n,"utcMillisecond",function(){return Kv}),e.d(n,"utcMilliseconds",function(){return tg}),e.d(n,"timeSecond",function(){return ig}),e.d(n,"timeSeconds",function(){return ug}),e.d(n,"utcSecond",function(){return ig}),e.d(n,"utcSeconds",function(){return ug}),e.d(n,"timeMinute",function(){return ag}),e.d(n,"timeMinutes",function(){return cg}),e.d(n,"timeHour",function(){return sg}),e.d(n,"timeHours",function(){return lg}),e.d(n,"timeDay",function(){return dg}),e.d(n,"timeDays",function(){return pg}),e.d(n,"timeWeek",function(){return gg}),e.d(n,"timeWeeks",function(){return Mg}),e.d(n,"timeSunday",function(){return gg}),e.d(n,"timeSundays",function(){return Mg}),e.d(n,"timeMonday",function(){return yg}),e.d(n,"timeMondays",function(){return Ag}),e.d(n,"timeTuesday",function(){return bg}),e.d(n,"timeTuesdays",function(){return Ng}),e.d(n,"timeWednesday",function(){return _g}),e.d(n,"timeWednesdays",function(){return kg}),e.d(n,"timeThursday",function(){return mg}),e.d(n,"timeThursdays",function(){return Tg}),e.d(n,"timeFriday",function(){return xg}),e.d(n,"timeFridays",function(){return Sg}),e.d(n,"timeSaturday",function(){return wg}),e.d(n,"timeSaturdays",function(){return Eg}),e.d(n,"timeMonth",function(){return Pg}),e.d(n,"timeMonths",function(){return zg}),e.d(n,"timeYear",function(){return Lg}),e.d(n,"timeYears",function(){return Dg}),e.d(n,"utcMinute",function(){return Ug}),e.d(n,"utcMinutes",function(){return Og}),e.d(n,"utcHour",function(){return Fg}),e.d(n,"utcHours",function(){return Bg}),e.d(n,"utcDay",function(){return jg}),e.d(n,"utcDays",function(){return Xg}),e.d(n,"utcWeek",function(){return Gg}),e.d(n,"utcWeeks",function(){return Kg}),e.d(n,"utcSunday",function(){return Gg}),e.d(n,"utcSundays",function(){return Kg}),e.d(n,"utcMonday",function(){return Vg}),e.d(n,"utcMondays",function(){return ty}),e.d(n,"utcTuesday",function(){return $g}),e.d(n,"utcTuesdays",function(){return ny}),e.d(n,"utcWednesday",function(){return Wg}),e.d(n,"utcWednesdays",function(){return ey}),e.d(n,"utcThursday",function(){return Zg}),e.d(n,"utcThursdays",function(){return ry}),e.d(n,"utcFriday",function(){return Qg}),e.d(n,"utcFridays",function(){return iy}),e.d(n,"utcSaturday",function(){return Jg}),e.d(n,"utcSaturdays",function(){return uy}),e.d(n,"utcMonth",function(){return ay}),e.d(n,"utcMonths",function(){return cy}),e.d(n,"utcYear",function(){return sy}),e.d(n,"utcYears",function(){return ly}),e.d(n,"timeFormatDefaultLocale",function(){return Pb}),e.d(n,"timeFormat",function(){return yy}),e.d(n,"timeParse",function(){return by}),e.d(n,"utcFormat",function(){return _y}),e.d(n,"utcParse",function(){return my}),e.d(n,"timeFormatLocale",function(){return vy}),e.d(n,"isoFormat",function(){return zb}),e.d(n,"isoParse",function(){return Rb}),e.d(n,"now",function(){return Jr}),e.d(n,"timer",function(){return ni}),e.d(n,"timerFlush",function(){return ei}),e.d(n,"timeout",function(){return oi}),e.d(n,"interval",function(){return ai}),e.d(n,"transition",function(){return Yi}),e.d(n,"active",function(){return zu}),e.d(n,"interrupt",function(){return xi}),e.d(n,"voronoi",function(){return SM}),e.d(n,"zoom",function(){return IM}),e.d(n,"zoomTransform",function(){return RM}),e.d(n,"zoomIdentity",function(){return zM})}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,